// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.integracao_preco_amazom_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_2
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_7
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;
import java.math.BigDecimal;
import java.math.RoundingMode;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJavaRow_5
	import java.math.BigDecimal;
import java.math.RoundingMode;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJavaRow_8
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJava_5
	//import java.util.List;

	//the import part of tJavaRow_10
	//import java.util.List;

	//the import part of tJavaRow_12
	//import java.util.List;

	//the import part of tJava_3
	//import java.util.List;

	//the import part of tJavaRow_13
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: integracao_preco_amazom Purpose: <br>
 * Description: https://palaciodasferramentas.atlassian.net/browse/PF-2453 <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class integracao_preco_amazom implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(Parametro_peso != null){
				
					this.setProperty("Parametro_peso", Parametro_peso.toString());
				
			}
			
			if(Parametro_Dimensao != null){
				
					this.setProperty("Parametro_Dimensao", Parametro_Dimensao.toString());
				
			}
			
			if(Parametro_Altura != null){
				
					this.setProperty("Parametro_Altura", Parametro_Altura.toString());
				
			}
			
			if(Parametro_Largura != null){
				
					this.setProperty("Parametro_Largura", Parametro_Largura.toString());
				
			}
			
			if(Parametro_Comprimento != null){
				
					this.setProperty("Parametro_Comprimento", Parametro_Comprimento.toString());
				
			}
			
			if(EMAIL_PASSWORD_P != null){
				
					this.setProperty("EMAIL_PASSWORD_P", EMAIL_PASSWORD_P.toString());
				
			}
			
			if(EMAIL_P != null){
				
					this.setProperty("EMAIL_P", EMAIL_P.toString());
				
			}
			
			if(SEND_EMAIL != null){
				
					this.setProperty("SEND_EMAIL", SEND_EMAIL.toString());
				
			}
			
			if(SMTP_P != null){
				
					this.setProperty("SMTP_P", SMTP_P.toString());
				
			}
			
			if(SMTP_PORT_P != null){
				
					this.setProperty("SMTP_PORT_P", SMTP_PORT_P.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(WINSPARE_DB != null){
				
					this.setProperty("WINSPARE_DB", WINSPARE_DB.toString());
				
			}
			
			if(WINSPARE_HOST != null){
				
					this.setProperty("WINSPARE_HOST", WINSPARE_HOST.toString());
				
			}
			
			if(WINSPARE_PORT != null){
				
					this.setProperty("WINSPARE_PORT", WINSPARE_PORT.toString());
				
			}
			
			if(WINSPARE_PWD != null){
				
					this.setProperty("WINSPARE_PWD", WINSPARE_PWD.toString());
				
			}
			
			if(WINSPARE_USER != null){
				
					this.setProperty("WINSPARE_USER", WINSPARE_USER.toString());
				
			}
			
			if(caminho != null){
				
					this.setProperty("caminho", caminho.toString());
				
			}
			
			if(Tarifa != null){
				
					this.setProperty("Tarifa", Tarifa.toString());
				
			}
			
			if(PMA != null){
				
					this.setProperty("PMA", PMA.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public Integer Parametro_peso;
public Integer getParametro_peso(){
	return this.Parametro_peso;
}
public Integer Parametro_Dimensao;
public Integer getParametro_Dimensao(){
	return this.Parametro_Dimensao;
}
public Integer Parametro_Altura;
public Integer getParametro_Altura(){
	return this.Parametro_Altura;
}
public Integer Parametro_Largura;
public Integer getParametro_Largura(){
	return this.Parametro_Largura;
}
public Integer Parametro_Comprimento;
public Integer getParametro_Comprimento(){
	return this.Parametro_Comprimento;
}
public String EMAIL_PASSWORD_P;
public String getEMAIL_PASSWORD_P(){
	return this.EMAIL_PASSWORD_P;
}
public String EMAIL_P;
public String getEMAIL_P(){
	return this.EMAIL_P;
}
public String SEND_EMAIL;
public String getSEND_EMAIL(){
	return this.SEND_EMAIL;
}
public String SMTP_P;
public String getSMTP_P(){
	return this.SMTP_P;
}
public String SMTP_PORT_P;
public String getSMTP_PORT_P(){
	return this.SMTP_PORT_P;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public String WINSPARE_DB;
public String getWINSPARE_DB(){
	return this.WINSPARE_DB;
}
public String WINSPARE_HOST;
public String getWINSPARE_HOST(){
	return this.WINSPARE_HOST;
}
public String WINSPARE_PORT;
public String getWINSPARE_PORT(){
	return this.WINSPARE_PORT;
}
public String WINSPARE_PWD;
public String getWINSPARE_PWD(){
	return this.WINSPARE_PWD;
}
public String WINSPARE_USER;
public String getWINSPARE_USER(){
	return this.WINSPARE_USER;
}
public String caminho;
public String getCaminho(){
	return this.caminho;
}
public String Tarifa;
public String getTarifa(){
	return this.Tarifa;
}
public String PMA;
public String getPMA(){
	return this.PMA;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "integracao_preco_amazom";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				integracao_preco_amazom.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(integracao_preco_amazom.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError2", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tDie_3Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError3", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tDie_4Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError4", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tDie_5Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tDBConnection_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputExcel_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError1", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tDie_2Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row41_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputExcel_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputExcel_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		
	

	
        String properties_tDBConnection_2 = context.JDBC_PARAMETERS;
        if (properties_tDBConnection_2 == null || properties_tDBConnection_2.trim().length() == 0) {
            properties_tDBConnection_2 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_2.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_2 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_2.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_2 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_2 = "jdbc:mysql://" + System.getenv(context.AUTCOM_HOST) + ":" + System.getenv(context.AUTCOM_PORT) + "/" + System.getenv(context.AUTCOM_DB) + "?" + properties_tDBConnection_2;
	String dbUser_tDBConnection_2 = System.getenv(context.AUTCOM_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.AUTCOM_PASSWORD)
; 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
		
			String driverClass_tDBConnection_2 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(false);
	}

	globalMap.put("db_tDBConnection_2",System.getenv(context.AUTCOM_DB));
 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tDBConnection_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		


	
            String dbProperties_tDBConnection_1 = "ApplicationName=integracao_preco_amazom_winsp";
            String url_tDBConnection_1 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_1 != null && !"".equals(dbProperties_tDBConnection_1.trim())) {
                url_tDBConnection_1 = url_tDBConnection_1 + "?" + dbProperties_tDBConnection_1;
            }
	String dbUser_tDBConnection_1 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_1 = System.getenv(context.POSTGRES_PASSWORD)
; 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_1 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_1 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_1.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_1 = drivers_tDBConnection_1.nextElement();
        if (redShiftDriverNames_tDBConnection_1.contains(d_tDBConnection_1.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_1);
                java.sql.DriverManager.registerDriver(d_tDBConnection_1);
            } catch (java.lang.Exception e_tDBConnection_1) {
globalMap.put("tDBConnection_1_ERROR_MESSAGE",e_tDBConnection_1.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_1 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_1","");

 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tDBConnection_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_3", false);
		start_Hash.put("tDBConnection_3", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_3";
	
	
		int tos_count_tDBConnection_3 = 0;
		


	
            String dbProperties_tDBConnection_3 = "ApplicationName=stg_cadpag";
            String url_tDBConnection_3 = "jdbc:postgresql://"+System.getenv(context.WINSPARE_HOST)+":"+"5432"+"/"+System.getenv(context.WINSPARE_DB);
            
            if(dbProperties_tDBConnection_3 != null && !"".equals(dbProperties_tDBConnection_3.trim())) {
                url_tDBConnection_3 = url_tDBConnection_3 + "?" + dbProperties_tDBConnection_3;
            }
	String dbUser_tDBConnection_3 = System.getenv(context.WINSPARE_USER);
	
	
		
	final String decryptedPassword_tDBConnection_3 = System.getenv(context.WINSPARE_PWD)
; 
		String dbPwd_tDBConnection_3 = decryptedPassword_tDBConnection_3;
	
	
	java.sql.Connection conn_tDBConnection_3 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_3 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_3 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_3.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_3 = drivers_tDBConnection_3.nextElement();
        if (redShiftDriverNames_tDBConnection_3.contains(d_tDBConnection_3.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_3);
                java.sql.DriverManager.registerDriver(d_tDBConnection_3);
            } catch (java.lang.Exception e_tDBConnection_3) {
globalMap.put("tDBConnection_3_ERROR_MESSAGE",e_tDBConnection_3.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_3 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_3 = java.lang.Class.forName(driverClass_tDBConnection_3);
			globalMap.put("driverClass_tDBConnection_3", driverClass_tDBConnection_3);
		
			conn_tDBConnection_3 = java.sql.DriverManager.getConnection(url_tDBConnection_3,dbUser_tDBConnection_3,dbPwd_tDBConnection_3);

		globalMap.put("conn_tDBConnection_3", conn_tDBConnection_3);
	if (null != conn_tDBConnection_3) {
		
			conn_tDBConnection_3.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_3","");

 



/**
 * [tDBConnection_3 begin ] stop
 */
	
	/**
	 * [tDBConnection_3 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 


	tos_count_tDBConnection_3++;

/**
 * [tDBConnection_3 main ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_3 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 

ok_Hash.put("tDBConnection_3", true);
end_Hash.put("tDBConnection_3", System.currentTimeMillis());




/**
 * [tDBConnection_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk19", 0, "ok");
								} 
							
							tJava_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_3 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


//System.out.println("Finalizada com sucesso a conexao com AutCom");

Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("yyyyMMdd_HHmmss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


context.data_execucao = data;
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();
insert_logStruct insert_log = new insert_logStruct();
row5Struct row5 = new row5Struct();






	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_integracao_preco_amazom_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row4.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row4.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row5 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_1) {
                            row5 = new row5Struct();
                                row5.nm_programa = insert_log.nm_programa;
                                row5.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row5.data_termino_execucao = insert_log.data_termino_execucao;
                                row5.mensagem = insert_log.mensagem;
                                row5.uuid = insert_log.uuid;
                                row5.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_1 = new row5Struct();
				
					oneRow_tHashOutput_1.nm_programa = row5.nm_programa;
					oneRow_tHashOutput_1.data_inicio_execucao = row5.data_inicio_execucao;
					oneRow_tHashOutput_1.data_termino_execucao = row5.data_termino_execucao;
					oneRow_tHashOutput_1.mensagem = row5.mensagem;
					oneRow_tHashOutput_1.uuid = row5.uuid;
					oneRow_tHashOutput_1.versao = row5.versao;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tDBInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return null;
				}
				public Integer jobPrecision(){
				    return null;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return "";
				
				}
				public String jobPattern(){
				
					return "";
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String nm_relatorio;

				public String getNm_relatorio () {
					return this.nm_relatorio;
				}

				public Boolean nm_relatorioIsNullable(){
				    return true;
				}
				public Boolean nm_relatorioIsKey(){
				    return false;
				}
				public Integer nm_relatorioLength(){
				    return null;
				}
				public Integer nm_relatorioPrecision(){
				    return null;
				}
				public String nm_relatorioDefault(){
				
					return null;
				
				}
				public String nm_relatorioComment(){
				
				    return "";
				
				}
				public String nm_relatorioPattern(){
				
					return "";
				
				}
				public String nm_relatorioOriginalDbColumnName(){
				
					return "nm_relatorio";
				
				}

				
			    public String caminho;

				public String getCaminho () {
					return this.caminho;
				}

				public Boolean caminhoIsNullable(){
				    return true;
				}
				public Boolean caminhoIsKey(){
				    return false;
				}
				public Integer caminhoLength(){
				    return null;
				}
				public Integer caminhoPrecision(){
				    return null;
				}
				public String caminhoDefault(){
				
					return null;
				
				}
				public String caminhoComment(){
				
				    return "";
				
				}
				public String caminhoPattern(){
				
					return "";
				
				}
				public String caminhoOriginalDbColumnName(){
				
					return "caminho";
				
				}

				
			    public String email;

				public String getEmail () {
					return this.email;
				}

				public Boolean emailIsNullable(){
				    return true;
				}
				public Boolean emailIsKey(){
				    return false;
				}
				public Integer emailLength(){
				    return null;
				}
				public Integer emailPrecision(){
				    return null;
				}
				public String emailDefault(){
				
					return null;
				
				}
				public String emailComment(){
				
				    return "";
				
				}
				public String emailPattern(){
				
					return "";
				
				}
				public String emailOriginalDbColumnName(){
				
					return "email";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("job="+job);
		sb.append(",nm_relatorio="+nm_relatorio);
		sb.append(",caminho="+caminho);
		sb.append(",email="+email);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return null;
				}
				public Integer jobPrecision(){
				    return null;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return "";
				
				}
				public String jobPattern(){
				
					return "";
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String nm_relatorio;

				public String getNm_relatorio () {
					return this.nm_relatorio;
				}

				public Boolean nm_relatorioIsNullable(){
				    return true;
				}
				public Boolean nm_relatorioIsKey(){
				    return false;
				}
				public Integer nm_relatorioLength(){
				    return null;
				}
				public Integer nm_relatorioPrecision(){
				    return null;
				}
				public String nm_relatorioDefault(){
				
					return null;
				
				}
				public String nm_relatorioComment(){
				
				    return "";
				
				}
				public String nm_relatorioPattern(){
				
					return "";
				
				}
				public String nm_relatorioOriginalDbColumnName(){
				
					return "nm_relatorio";
				
				}

				
			    public String caminho;

				public String getCaminho () {
					return this.caminho;
				}

				public Boolean caminhoIsNullable(){
				    return true;
				}
				public Boolean caminhoIsKey(){
				    return false;
				}
				public Integer caminhoLength(){
				    return null;
				}
				public Integer caminhoPrecision(){
				    return null;
				}
				public String caminhoDefault(){
				
					return null;
				
				}
				public String caminhoComment(){
				
				    return "";
				
				}
				public String caminhoPattern(){
				
					return "";
				
				}
				public String caminhoOriginalDbColumnName(){
				
					return "caminho";
				
				}

				
			    public String email;

				public String getEmail () {
					return this.email;
				}

				public Boolean emailIsNullable(){
				    return true;
				}
				public Boolean emailIsKey(){
				    return false;
				}
				public Integer emailLength(){
				    return null;
				}
				public Integer emailPrecision(){
				    return null;
				}
				public String emailDefault(){
				
					return null;
				
				}
				public String emailComment(){
				
				    return "";
				
				}
				public String emailPattern(){
				
					return "";
				
				}
				public String emailOriginalDbColumnName(){
				
					return "email";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("job="+job);
		sb.append(",nm_relatorio="+nm_relatorio);
		sb.append(",caminho="+caminho);
		sb.append(",email="+email);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row28Struct row28 = new row28Struct();
row29Struct row29 = new row29Struct();





	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
		


	class Util_tLogRow_1 {
	
		String[] des_top = { ".", "-" };

        String[] des_data = { "-", "+" };

        String[] des_frame = { "|" }; 
        
        public void printLine(StringBuilder sb, int titleWidth, int dataWidth){
        
        	sb.append("+");
			for(int i=0; i<titleWidth+2; i++)
				sb.append("-");
			sb.append("+");
			for(int i=0; i<dataWidth+2; i++)
				sb.append("-");
        	sb.append("+" + "\n");
        }      

		public String print(String[] row, int nbLine){
			
			StringBuilder sb = new StringBuilder();
			
			    String title = "#" + nbLine + ". " + "tLogRow_1";
			    
		
			//step 1: get the max length of all the row[] member;
			int dataWidth = 5;		//the length of the string "value"	
			for(int i=0;i<row.length;i++) {
				if(row[i] == null && 4 > dataWidth) {
					dataWidth = 4;
				}
				else if(row[i] != null && row[i].length()>dataWidth) 
					dataWidth = row[i].length();
			}			
						
			int titleWidth = 12;
			
			int totalWidth = dataWidth + titleWidth + 5;
			
			//step 2: print the header with line number
			sb.append(".");
			for(int i=0 ; i<totalWidth ; i++)
				sb.append("-");			
			sb.append("." + "\n" + "|");
			
			int emptyCenterWidth = (totalWidth-title.length())/2;
			for(int i=0 ; i<emptyCenterWidth; i++)
				sb.append(" ");	
			sb.append(title);
			for(int i=0 ; i<totalWidth - emptyCenterWidth - title.length() ; i++)
				sb.append(" ");	
			sb.append("|" + "\n");
			
			//step 3: print "key" and "value"			
			printLine(sb,titleWidth,dataWidth);
			
			sb.append("|" + " key");
			for(int i=0; i<titleWidth-2; i++)
				sb.append(" ");
        	sb.append("|" + " value");
			for(int i=0; i<dataWidth-4; i++)
				sb.append(" ");
			sb.append("|" + "\n");
			
			printLine(sb,titleWidth,dataWidth);
			
			//step 4: print dataset
			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "job");
				for(int i=0; i<titleWidth -"job".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[0]);
				for(int i=0; row[0] == null && i<dataWidth - 3 || row[0] != null && i<dataWidth -row[0].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "nm_relatorio");
				for(int i=0; i<titleWidth -"nm_relatorio".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[1]);
				for(int i=0; row[1] == null && i<dataWidth - 3 || row[1] != null && i<dataWidth -row[1].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "caminho");
				for(int i=0; i<titleWidth -"caminho".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[2]);
				for(int i=0; row[2] == null && i<dataWidth - 3 || row[2] != null && i<dataWidth -row[2].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//for(int i=0; i<row.length; i++){
				sb.append("| " + "email");
				for(int i=0; i<titleWidth -"email".length()+ 1 ;i++)
					sb.append(" ");
				sb.append("| " + row[3]);
				for(int i=0; row[3] == null && i<dataWidth - 3 || row[3] != null && i<dataWidth -row[3].length()+ 1 ;i++)
					sb.append(" ");
				sb.append("|" + "\n");
			
			//}

			
			//step 5: print a line gap
			printLine(sb,titleWidth,dataWidth);
			return sb.toString();

		}


	}

	Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();




	java.io.PrintStream consoleOut_tLogRow_1 = null;
	if (globalMap.get("tLogRow_CONSOLE")!=null){
        consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
    }else{
        consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
        globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
    }

 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_7", false);
		start_Hash.put("tJavaRow_7", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tJavaRow_7 = 0;
		

int nb_line_tJavaRow_7 = 0;

 



/**
 * [tJavaRow_7 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";
	
	
		int tos_count_tDBInput_3 = 0;
		
	
    
	
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				conn_tDBInput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "select job,\n       nm_relatorio,\n--       REPLACE(caminho,'/','\\') \ncaminho,\n       string_agg(distinct trim(email"
+"),',') email\n  from dw_t_relatorio_email\nwhere job = '"+context.programa+"'\n group by job, nm_relatorio, caminho";
		    

		    globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);

		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row28.job = null;
							} else {
	                         		
        	row28.job = routines.system.JDBCUtil.getString(rs_tDBInput_3, 1, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 2) {
								row28.nm_relatorio = null;
							} else {
	                         		
        	row28.nm_relatorio = routines.system.JDBCUtil.getString(rs_tDBInput_3, 2, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 3) {
								row28.caminho = null;
							} else {
	                         		
        	row28.caminho = routines.system.JDBCUtil.getString(rs_tDBInput_3, 3, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 4) {
								row28.email = null;
							} else {
	                         		
        	row28.email = routines.system.JDBCUtil.getString(rs_tDBInput_3, 4, false);
		                    }
					


 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_7 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					

    //Code generated according to input schema and output schema
row29.job = row28.job;
row29.nm_relatorio = row28.nm_relatorio;
row29.caminho = row28.caminho;
row29.email = row28.email;
context.SEND_EMAIL = row28.email;
context.caminho = row28.caminho;
    nb_line_tJavaRow_7++;   

 


	tos_count_tJavaRow_7++;

/**
 * [tJavaRow_7 main ] stop
 */
	
	/**
	 * [tJavaRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					
///////////////////////		
						



				strBuffer_tLogRow_1 = new StringBuilder();




   				
	    		if(row29.job != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row29.job)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row29.nm_relatorio != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row29.nm_relatorio)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row29.caminho != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row29.caminho)							
				);


							
	    		} //  			

    			strBuffer_tLogRow_1.append("|");
    			


   				
	    		if(row29.email != null) { //              
                    							
       
				strBuffer_tLogRow_1.append(
				                String.valueOf(row29.email)							
				);


							
	    		} //  			

				
				String[] row_tLogRow_1 = new String[4];
   				
	    		if(row29.job != null) { //              
                 row_tLogRow_1[0]=    						    
				                String.valueOf(row29.job)			
					          ;	
							
	    		} //			
    			   				
	    		if(row29.nm_relatorio != null) { //              
                 row_tLogRow_1[1]=    						    
				                String.valueOf(row29.nm_relatorio)			
					          ;	
							
	    		} //			
    			   				
	    		if(row29.caminho != null) { //              
                 row_tLogRow_1[2]=    						    
				                String.valueOf(row29.caminho)			
					          ;	
							
	    		} //			
    			   				
	    		if(row29.email != null) { //              
                 row_tLogRow_1[3]=    						    
				                String.valueOf(row29.email)			
					          ;	
							
	    		} //			
    			
				nb_line_tLogRow_1++;
                consoleOut_tLogRow_1.println(util_tLogRow_1.print(row_tLogRow_1,nb_line_tLogRow_1));
                consoleOut_tLogRow_1.flush();
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
}
globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);
 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tJavaRow_7 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

globalMap.put("tJavaRow_7_NB_LINE",nb_line_tJavaRow_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tJavaRow_7", true);
end_Hash.put("tJavaRow_7", System.currentTimeMillis());




/**
 * [tJavaRow_7 end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	


//////
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk21", 0, "ok");
								} 
							
							tFixedFlowInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_7 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal PMA;

				public BigDecimal getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return 15;
				}
				public Integer PMAPrecision(){
				    return 2;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				
			    public BigDecimal Preco_Final;

				public BigDecimal getPreco_Final () {
					return this.Preco_Final;
				}

				public Boolean Preco_FinalIsNullable(){
				    return true;
				}
				public Boolean Preco_FinalIsKey(){
				    return false;
				}
				public Integer Preco_FinalLength(){
				    return 15;
				}
				public Integer Preco_FinalPrecision(){
				    return 2;
				}
				public String Preco_FinalDefault(){
				
					return null;
				
				}
				public String Preco_FinalComment(){
				
				    return "";
				
				}
				public String Preco_FinalPattern(){
				
					return "";
				
				}
				public String Preco_FinalOriginalDbColumnName(){
				
					return "Preco_Final";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row22Struct other = (row22Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row22Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.PMA = this.PMA;
	            other.Preco_Final = this.Preco_Final;
	            
	}

	public void copyKeysDataTo(row22Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PMA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PMA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",PMA="+String.valueOf(PMA));
		sb.append(",Preco_Final="+String.valueOf(Preco_Final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();




	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_integracao_preco_amazom_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 0 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row22.SKU = null;        	            	
    	            	        	            	
    	            		row22.Nome_Produto = null;        	            	
    	            	        	            	
    	            		row22.Marca = null;        	            	
    	            	        	            	
    	            		row22.Altura = null;        	            	
    	            	        	            	
    	            		row22.Largura = null;        	            	
    	            	        	            	
    	            		row22.Comprimento = null;        	            	
    	            	        	            	
    	            		row22.Peso = null;        	            	
    	            	        	            	
    	            		row22.Valida_Peso = null;        	            	
    	            	        	            	
    	            		row22.Valida_Dimensao = null;        	            	
    	            	        	            	
    	            		row22.Valida_Altura = null;        	            	
    	            	        	            	
    	            		row22.Valida_Largura = null;        	            	
    	            	        	            	
    	            		row22.Valida_Comprimento = null;        	            	
    	            	        	            	
    	            		row22.Peso_Cubado = null;        	            	
    	            	        	            	
    	            		row22.Peso_Considerado = null;        	            	
    	            	        	            	
    	            		row22.Frete = null;        	            	
    	            	        	            	
    	            		row22.vl_custo = null;        	            	
    	            	        	            	
    	            		row22.ipi = null;        	            	
    	            	        	            	
    	            		row22.preco = null;        	            	
    	            	        	            	
    	            		row22.vl_tabela4 = null;        	            	
    	            	        	            	
    	            		row22.PMA = null;        	            	
    	            	        	            	
    	            		row22.Preco_Final = null;        	            	
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					



    
		row22Struct oneRow_tHashOutput_6 = new row22Struct();
				
					oneRow_tHashOutput_6.SKU = row22.SKU;
					oneRow_tHashOutput_6.Nome_Produto = row22.Nome_Produto;
					oneRow_tHashOutput_6.Marca = row22.Marca;
					oneRow_tHashOutput_6.Altura = row22.Altura;
					oneRow_tHashOutput_6.Largura = row22.Largura;
					oneRow_tHashOutput_6.Comprimento = row22.Comprimento;
					oneRow_tHashOutput_6.Peso = row22.Peso;
					oneRow_tHashOutput_6.Valida_Peso = row22.Valida_Peso;
					oneRow_tHashOutput_6.Valida_Dimensao = row22.Valida_Dimensao;
					oneRow_tHashOutput_6.Valida_Altura = row22.Valida_Altura;
					oneRow_tHashOutput_6.Valida_Largura = row22.Valida_Largura;
					oneRow_tHashOutput_6.Valida_Comprimento = row22.Valida_Comprimento;
					oneRow_tHashOutput_6.Peso_Cubado = row22.Peso_Cubado;
					oneRow_tHashOutput_6.Peso_Considerado = row22.Peso_Considerado;
					oneRow_tHashOutput_6.Frete = row22.Frete;
					oneRow_tHashOutput_6.vl_custo = row22.vl_custo;
					oneRow_tHashOutput_6.ipi = row22.ipi;
					oneRow_tHashOutput_6.preco = row22.preco;
					oneRow_tHashOutput_6.vl_tabela4 = row22.vl_tabela4;
					oneRow_tHashOutput_6.PMA = row22.PMA;
					oneRow_tHashOutput_6.Preco_Final = row22.Preco_Final;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 0);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tDie_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_5", false);
		start_Hash.put("tDie_5", System.currentTimeMillis());
		
	
	currentComponent="tDie_5";
	
	
		int tos_count_tDie_5 = 0;
		

 



/**
 * [tDie_5 begin ] stop
 */
	
	/**
	 * [tDie_5 main ] start
	 */

	

	
	
	currentComponent="tDie_5";
	
	

	try {
	globalMap.put("tDie_5_DIE_PRIORITY", 5);
	System.err.println("Erro na Conexão da Winspare");
	
	globalMap.put("tDie_5_DIE_MESSAGE", "Erro na Conexão da Winspare");
	globalMap.put("tDie_5_DIE_MESSAGES", "Erro na Conexão da Winspare");
	
	} catch (Exception | Error e_tDie_5) {
	    globalMap.put("tDie_5_ERROR_MESSAGE",e_tDie_5.getMessage());
		logIgnoredError(String.format("tDie_5 - tDie failed to log message due to internal error: %s", e_tDie_5), e_tDie_5);
	}
	
	currentComponent = "tDie_5";
	status = "failure";
    	errorCode = new Integer(3);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(3));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_5_DIE_CODE", errorCode);

    
	

	
	
	System.exit(3);

 


	tos_count_tDie_5++;

/**
 * [tDie_5 main ] stop
 */
	
	/**
	 * [tDie_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_5";
	
	

 



/**
 * [tDie_5 process_data_begin ] stop
 */
	
	/**
	 * [tDie_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_5";
	
	

 



/**
 * [tDie_5 process_data_end ] stop
 */
	
	/**
	 * [tDie_5 end ] start
	 */

	

	
	
	currentComponent="tDie_5";
	
	

 

ok_Hash.put("tDie_5", true);
end_Hash.put("tDie_5", System.currentTimeMillis());




/**
 * [tDie_5 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_5 finally ] start
	 */

	

	
	
	currentComponent="tDie_5";
	
	

 



/**
 * [tDie_5 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_5_SUBPROCESS_STATE", 1);
	}
	


public void tDie_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_4", false);
		start_Hash.put("tDie_4", System.currentTimeMillis());
		
	
	currentComponent="tDie_4";
	
	
		int tos_count_tDie_4 = 0;
		

 



/**
 * [tDie_4 begin ] stop
 */
	
	/**
	 * [tDie_4 main ] start
	 */

	

	
	
	currentComponent="tDie_4";
	
	

	try {
	globalMap.put("tDie_4_DIE_PRIORITY", 5);
	System.err.println("Erro na Conexão do DW");
	
	globalMap.put("tDie_4_DIE_MESSAGE", "Erro na Conexão do DW");
	globalMap.put("tDie_4_DIE_MESSAGES", "Erro na Conexão do DW");
	
	} catch (Exception | Error e_tDie_4) {
	    globalMap.put("tDie_4_ERROR_MESSAGE",e_tDie_4.getMessage());
		logIgnoredError(String.format("tDie_4 - tDie failed to log message due to internal error: %s", e_tDie_4), e_tDie_4);
	}
	
	currentComponent = "tDie_4";
	status = "failure";
    	errorCode = new Integer(2);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(2));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_4_DIE_CODE", errorCode);

    
	

	
	
	System.exit(2);

 


	tos_count_tDie_4++;

/**
 * [tDie_4 main ] stop
 */
	
	/**
	 * [tDie_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_4";
	
	

 



/**
 * [tDie_4 process_data_begin ] stop
 */
	
	/**
	 * [tDie_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_4";
	
	

 



/**
 * [tDie_4 process_data_end ] stop
 */
	
	/**
	 * [tDie_4 end ] start
	 */

	

	
	
	currentComponent="tDie_4";
	
	

 

ok_Hash.put("tDie_4", true);
end_Hash.put("tDie_4", System.currentTimeMillis());




/**
 * [tDie_4 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_4 finally ] start
	 */

	

	
	
	currentComponent="tDie_4";
	
	

 



/**
 * [tDie_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_4_SUBPROCESS_STATE", 1);
	}
	


public void tDie_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_3", false);
		start_Hash.put("tDie_3", System.currentTimeMillis());
		
	
	currentComponent="tDie_3";
	
	
		int tos_count_tDie_3 = 0;
		

 



/**
 * [tDie_3 begin ] stop
 */
	
	/**
	 * [tDie_3 main ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

	try {
	globalMap.put("tDie_3_DIE_PRIORITY", 5);
	System.err.println("Erro na Conexão do Autcom");
	
	globalMap.put("tDie_3_DIE_MESSAGE", "Erro na Conexão do Autcom");
	globalMap.put("tDie_3_DIE_MESSAGES", "Erro na Conexão do Autcom");
	
	} catch (Exception | Error e_tDie_3) {
	    globalMap.put("tDie_3_ERROR_MESSAGE",e_tDie_3.getMessage());
		logIgnoredError(String.format("tDie_3 - tDie failed to log message due to internal error: %s", e_tDie_3), e_tDie_3);
	}
	
	currentComponent = "tDie_3";
	status = "failure";
    	errorCode = new Integer(1);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(1));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_3_DIE_CODE", errorCode);

    
	

	
	
	System.exit(1);

 


	tos_count_tDie_3++;

/**
 * [tDie_3 main ] stop
 */
	
	/**
	 * [tDie_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 



/**
 * [tDie_3 process_data_begin ] stop
 */
	
	/**
	 * [tDie_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 



/**
 * [tDie_3 process_data_end ] stop
 */
	
	/**
	 * [tDie_3 end ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 

ok_Hash.put("tDie_3", true);
end_Hash.put("tDie_3", System.currentTimeMillis());




/**
 * [tDie_3 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_3 finally ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 



/**
 * [tDie_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_3_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal PMA;

				public BigDecimal getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return 15;
				}
				public Integer PMAPrecision(){
				    return 2;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				
			    public BigDecimal Preco_Final;

				public BigDecimal getPreco_Final () {
					return this.Preco_Final;
				}

				public Boolean Preco_FinalIsNullable(){
				    return true;
				}
				public Boolean Preco_FinalIsKey(){
				    return false;
				}
				public Integer Preco_FinalLength(){
				    return 15;
				}
				public Integer Preco_FinalPrecision(){
				    return 2;
				}
				public String Preco_FinalDefault(){
				
					return null;
				
				}
				public String Preco_FinalComment(){
				
				    return "";
				
				}
				public String Preco_FinalPattern(){
				
					return "";
				
				}
				public String Preco_FinalOriginalDbColumnName(){
				
					return "Preco_Final";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row21Struct other = (row21Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row21Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.PMA = this.PMA;
	            other.Preco_Final = this.Preco_Final;
	            
	}

	public void copyKeysDataTo(row21Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PMA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PMA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",PMA="+String.valueOf(PMA));
		sb.append(",Preco_Final="+String.valueOf(Preco_Final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal PMA;

				public BigDecimal getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return 15;
				}
				public Integer PMAPrecision(){
				    return 2;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				
			    public BigDecimal Preco_Final;

				public BigDecimal getPreco_Final () {
					return this.Preco_Final;
				}

				public Boolean Preco_FinalIsNullable(){
				    return true;
				}
				public Boolean Preco_FinalIsKey(){
				    return false;
				}
				public Integer Preco_FinalLength(){
				    return 15;
				}
				public Integer Preco_FinalPrecision(){
				    return 2;
				}
				public String Preco_FinalDefault(){
				
					return null;
				
				}
				public String Preco_FinalComment(){
				
				    return "";
				
				}
				public String Preco_FinalPattern(){
				
					return "";
				
				}
				public String Preco_FinalOriginalDbColumnName(){
				
					return "Preco_Final";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row20Struct other = (row20Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row20Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.PMA = this.PMA;
	            other.Preco_Final = this.Preco_Final;
	            
	}

	public void copyKeysDataTo(row20Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PMA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PMA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",PMA="+String.valueOf(PMA));
		sb.append(",Preco_Final="+String.valueOf(Preco_Final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal PMA;

				public BigDecimal getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return 15;
				}
				public Integer PMAPrecision(){
				    return 2;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				
			    public BigDecimal Preco_Final;

				public BigDecimal getPreco_Final () {
					return this.Preco_Final;
				}

				public Boolean Preco_FinalIsNullable(){
				    return true;
				}
				public Boolean Preco_FinalIsKey(){
				    return false;
				}
				public Integer Preco_FinalLength(){
				    return 15;
				}
				public Integer Preco_FinalPrecision(){
				    return 2;
				}
				public String Preco_FinalDefault(){
				
					return null;
				
				}
				public String Preco_FinalComment(){
				
				    return "";
				
				}
				public String Preco_FinalPattern(){
				
					return "";
				
				}
				public String Preco_FinalOriginalDbColumnName(){
				
					return "Preco_Final";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row7Struct other = (row7Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row7Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.PMA = this.PMA;
	            other.Preco_Final = this.Preco_Final;
	            
	}

	public void copyKeysDataTo(row7Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PMA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PMA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",PMA="+String.valueOf(PMA));
		sb.append(",Preco_Final="+String.valueOf(Preco_Final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal PMA;

				public BigDecimal getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return 15;
				}
				public Integer PMAPrecision(){
				    return 2;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				
			    public BigDecimal Preco_Final;

				public BigDecimal getPreco_Final () {
					return this.Preco_Final;
				}

				public Boolean Preco_FinalIsNullable(){
				    return true;
				}
				public Boolean Preco_FinalIsKey(){
				    return false;
				}
				public Integer Preco_FinalLength(){
				    return 15;
				}
				public Integer Preco_FinalPrecision(){
				    return 2;
				}
				public String Preco_FinalDefault(){
				
					return null;
				
				}
				public String Preco_FinalComment(){
				
				    return "";
				
				}
				public String Preco_FinalPattern(){
				
					return "";
				
				}
				public String Preco_FinalOriginalDbColumnName(){
				
					return "Preco_Final";
				
				}

				
			    public String errorMessage;

				public String getErrorMessage () {
					return this.errorMessage;
				}

				public Boolean errorMessageIsNullable(){
				    return true;
				}
				public Boolean errorMessageIsKey(){
				    return false;
				}
				public Integer errorMessageLength(){
				    return 255;
				}
				public Integer errorMessagePrecision(){
				    return 0;
				}
				public String errorMessageDefault(){
				
					return "";
				
				}
				public String errorMessageComment(){
				
				    return null;
				
				}
				public String errorMessagePattern(){
				
				    return null;
				
				}
				public String errorMessageOriginalDbColumnName(){
				
					return "errorMessage";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row12Struct other = (row12Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row12Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.PMA = this.PMA;
	            other.Preco_Final = this.Preco_Final;
	            other.errorMessage = this.errorMessage;
	            
	}

	public void copyKeysDataTo(row12Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
					this.errorMessage = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PMA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Preco_Final);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PMA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Preco_Final);
					
					// String
				
						writeString(this.errorMessage,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",PMA="+String.valueOf(PMA));
		sb.append(",Preco_Final="+String.valueOf(Preco_Final));
		sb.append(",errorMessage="+errorMessage);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal PMA;

				public BigDecimal getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return 15;
				}
				public Integer PMAPrecision(){
				    return 2;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				
			    public BigDecimal Preco_Final;

				public BigDecimal getPreco_Final () {
					return this.Preco_Final;
				}

				public Boolean Preco_FinalIsNullable(){
				    return true;
				}
				public Boolean Preco_FinalIsKey(){
				    return false;
				}
				public Integer Preco_FinalLength(){
				    return 15;
				}
				public Integer Preco_FinalPrecision(){
				    return 2;
				}
				public String Preco_FinalDefault(){
				
					return null;
				
				}
				public String Preco_FinalComment(){
				
				    return "";
				
				}
				public String Preco_FinalPattern(){
				
					return "";
				
				}
				public String Preco_FinalOriginalDbColumnName(){
				
					return "Preco_Final";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row16Struct other = (row16Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row16Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.PMA = this.PMA;
	            other.Preco_Final = this.Preco_Final;
	            
	}

	public void copyKeysDataTo(row16Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PMA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PMA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",PMA="+String.valueOf(PMA));
		sb.append(",Preco_Final="+String.valueOf(Preco_Final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public BigDecimal PMA;

				public BigDecimal getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return 15;
				}
				public Integer PMAPrecision(){
				    return 2;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row17Struct other = (row17Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row17Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            other.PMA = this.PMA;
	            
	}

	public void copyKeysDataTo(row17Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PMA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PMA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",PMA="+String.valueOf(PMA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class SaidaStruct implements routines.system.IPersistableRow<SaidaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public String PMA;

				public String getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return null;
				}
				public Integer PMAPrecision(){
				    return null;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final SaidaStruct other = (SaidaStruct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(SaidaStruct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            other.PMA = this.PMA;
	            
	}

	public void copyKeysDataTo(SaidaStruct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
					this.PMA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
					this.PMA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// String
				
						writeString(this.PMA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// String
				
						writeString(this.PMA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",PMA="+PMA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(SaidaStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row11Struct other = (row11Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row11Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            
	}

	public void copyKeysDataTo(row11Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida1Struct implements routines.system.IPersistableRow<Saida1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Saida1Struct other = (Saida1Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Saida1Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.ipi = this.ipi;
	            
	}

	public void copyKeysDataTo(Saida1Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",ipi="+String.valueOf(ipi));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row3Struct other = (row3Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row3Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.vl_custo = this.vl_custo;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.ipi = this.ipi;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            
	}

	public void copyKeysDataTo(row3Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return null;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 12;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 12;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 12;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 15;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return null;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return null;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return null;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return null;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return null;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 15;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row2Struct other = (row2Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row2Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.vl_custo = this.vl_custo;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.ipi = this.ipi;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            
	}

	public void copyKeysDataTo(row2Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return null;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 12;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 12;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 12;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 15;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row1Struct other = (row1Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row1Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.vl_custo = this.vl_custo;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.ipi = this.ipi;
	            
	}

	public void copyKeysDataTo(row1Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",ipi="+String.valueOf(ipi));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tDBInput_2Struct implements routines.system.IPersistableRow<after_tDBInput_2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return null;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 12;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 12;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 12;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 15;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tDBInput_2Struct other = (after_tDBInput_2Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tDBInput_2Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.vl_custo = this.vl_custo;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.ipi = this.ipi;
	            
	}

	public void copyKeysDataTo(after_tDBInput_2Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",ipi="+String.valueOf(ipi));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tDBInput_2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_2Process(globalMap);
		tHashInput_3Process(globalMap);

		row1Struct row1 = new row1Struct();
row2Struct row2 = new row2Struct();
row3Struct row3 = new row3Struct();
row9Struct row9 = new row9Struct();
Saida1Struct Saida1 = new Saida1Struct();
row11Struct row11 = new row11Struct();
row14Struct row14 = new row14Struct();
SaidaStruct Saida = new SaidaStruct();
row17Struct row17 = new row17Struct();
row16Struct row16 = new row16Struct();
row7Struct row7 = new row7Struct();
row20Struct row20 = new row20Struct();
row21Struct row21 = new row21Struct();
row12Struct row12 = new row12Struct();
















	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct> tHashFile_tHashOutput_4 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_4.getKeyMap().put("tHashFile_integracao_preco_amazom_" +pid + "_tHashOutput_4", "tHashFile_integracao_preco_amazom_" + pid + "_tHashOutput_6");
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */



	
	/**
	 * [tJavaRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_8", false);
		start_Hash.put("tJavaRow_8", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tJavaRow_8 = 0;
		

int nb_line_tJavaRow_8 = 0;

 



/**
 * [tJavaRow_8 begin ] stop
 */




	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct> tHashFile_tHashOutput_5 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_5.getKeyMap().put("tHashFile_integracao_preco_amazom_" +pid + "_tHashOutput_5", "tHashFile_integracao_preco_amazom_" + pid + "_tHashOutput_6");
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tFilterRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_1", false);
		start_Hash.put("tFilterRow_1", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tFilterRow_1 = 0;
		
    int nb_line_tFilterRow_1 = 0;
    int nb_line_ok_tFilterRow_1 = 0;
    int nb_line_reject_tFilterRow_1 = 0;

    class Operator_tFilterRow_1 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_1(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tConvertType_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_1", false);
		start_Hash.put("tConvertType_1", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida");
					}
				
		int tos_count_tConvertType_1 = 0;
		
	int nb_line_tConvertType_1 = 0;  
 



/**
 * [tConvertType_1 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
					globalMap.get( "tHash_Lookup_row15" ))
					;					
					
	

row15Struct row15HashKey = new row15Struct();
row15Struct row15Default = new row15Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
SaidaStruct Saida_tmp = new SaidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida1");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
					globalMap.get( "tHash_Lookup_row10" ))
					;					
					
	
		tHash_Lookup_row10.initGet();
	

row10Struct row10HashKey = new row10Struct();
row10Struct row10Default = new row10Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida1Struct Saida1_tmp = new Saida1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";
	
	
		int tos_count_tDBInput_2 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_2 = java.util.Calendar.getInstance();
		    calendar_tDBInput_2.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_2 = calendar_tDBInput_2.getTime();
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				conn_tDBInput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "SELECT I.ITE_CODITE SKU,\nI.ITE_DESITE Nome_Produto,\nI.ITE_REFERE Marca,\nIFNULL((SELECT IFNULL(D.ITE_EXPALT,0) FROM D"
+"ESSIT D WHERE D.ITE_CODITE = I.ITE_CODITE),0) Altura,\nIFNULL((SELECT IFNULL(D.ITE_EXPLAR,0) FROM DESSIT D WHERE D.ITE_C"
+"ODITE = I.ITE_CODITE),0) Largura,\nIFNULL((SELECT IFNULL(D.ITE_EXPPRO,0) FROM DESSIT D WHERE D.ITE_CODITE = I.ITE_CODITE"
+"),0) Comprimento,\nIFNULL(ITE_PESOIT,0)Peso,\nROUND(G.ITE_PRECUS,4) vl_custo,\nG.ITE_PREVE4  vl_tabela4,\nIFNULL(G.ITE_I"
+"PISAI,0) ipi\nFROM CADITE I,\nITEGER G\nWHERE G.ITE_CODITE = I.ITE_CODITE\nand G.ITE_CODEMP = '001'\nand I.ITE_ITEATI = "
+"'S'";
		    

		    globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);

		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row1.SKU = null;
							} else {
	                         		
        	row1.SKU = routines.system.JDBCUtil.getString(rs_tDBInput_2, 1, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row1.Nome_Produto = null;
							} else {
	                         		
        	row1.Nome_Produto = routines.system.JDBCUtil.getString(rs_tDBInput_2, 2, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 3) {
								row1.Marca = null;
							} else {
	                         		
        	row1.Marca = routines.system.JDBCUtil.getString(rs_tDBInput_2, 3, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 4) {
								row1.Altura = null;
							} else {
		                          
            row1.Altura = rs_tDBInput_2.getInt(4);
            if(rs_tDBInput_2.wasNull()){
                    row1.Altura = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 5) {
								row1.Largura = null;
							} else {
		                          
            row1.Largura = rs_tDBInput_2.getInt(5);
            if(rs_tDBInput_2.wasNull()){
                    row1.Largura = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 6) {
								row1.Comprimento = null;
							} else {
		                          
            row1.Comprimento = rs_tDBInput_2.getInt(6);
            if(rs_tDBInput_2.wasNull()){
                    row1.Comprimento = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 7) {
								row1.Peso = null;
							} else {
		                          
            row1.Peso = rs_tDBInput_2.getBigDecimal(7);
            if(rs_tDBInput_2.wasNull()){
                    row1.Peso = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 8) {
								row1.vl_custo = null;
							} else {
		                          
            row1.vl_custo = rs_tDBInput_2.getBigDecimal(8);
            if(rs_tDBInput_2.wasNull()){
                    row1.vl_custo = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 9) {
								row1.vl_tabela4 = null;
							} else {
		                          
            row1.vl_tabela4 = rs_tDBInput_2.getBigDecimal(9);
            if(rs_tDBInput_2.wasNull()){
                    row1.vl_tabela4 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 10) {
								row1.ipi = null;
							} else {
		                          
            row1.ipi = rs_tDBInput_2.getBigDecimal(10);
            if(rs_tDBInput_2.wasNull()){
                    row1.ipi = null;
            }
		                    }
					

 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

    //Code generated according to input schema and output schema
row2.SKU = row1.SKU;
row2.Nome_Produto = row1.Nome_Produto;
row2.Marca = row1.Marca;
row2.Altura = row1.Altura;
row2.Largura = row1.Largura;
row2.Comprimento = row1.Comprimento;
row2.Peso = row1.Peso;
row2.vl_custo = row1.vl_custo;
row2.vl_tabela4 = row1.vl_tabela4;
row2.ipi = row1.ipi;

//System.out.println(row1.Peso.compareTo(new BigDecimal(220)));
// 1 Peso Maior que Parametro
if ((row1.Peso.compareTo(new BigDecimal(context.Parametro_peso))>=0) && row1.Peso.compareTo(new BigDecimal(context.Parametro_peso))>0) {
row2.Valida_Peso = 1;
} else{
row2.Valida_Peso = 0;
}

// 1 Soma Maior que Parametro
if ((row1.Altura + row1.Largura + row1.Comprimento) >= context.Parametro_Dimensao) {
row2.Valida_Dimensao = 1;
} else{
row2.Valida_Dimensao = 0;
}

// 1 Altura Maior que Parametro
if ((row1.Altura) >= context.Parametro_Altura) {
row2.Valida_Altura = 1;
} else{
row2.Valida_Altura = 0;
}

// 1 Largura Maior que Parametro
if ((row1.Largura) >= context.Parametro_Largura) {
row2.Valida_Largura = 1;
} else{
row2.Valida_Largura = 0;
}

// 1 Comprimento Maior que Parametro
if ((row1.Comprimento) >= context.Parametro_Comprimento) {
row2.Valida_Comprimento = 1;
} else{
row2.Valida_Comprimento = 0;
}

//row2.Peso_Cubado = Double.valueOf(row1.Altura * row1.Largura * row1.Comprimento);

row2.Peso_Cubado = new BigDecimal(row1.Altura * row1.Largura * row1.Comprimento);

    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

    //Code generated according to input schema and output schema
row3.SKU = row2.SKU;
row3.Nome_Produto = row2.Nome_Produto;
row3.Marca = row2.Marca;
row3.Altura = row2.Altura;
row3.Largura = row2.Largura;
row3.Comprimento = row2.Comprimento;
row3.Peso = row2.Peso;
row3.vl_custo = row2.vl_custo;
row3.vl_tabela4 = row2.vl_tabela4;
row3.ipi = row2.ipi;
row3.Valida_Peso = row2.Valida_Peso;
row3.Valida_Dimensao = row2.Valida_Dimensao;
row3.Valida_Altura = row2.Valida_Altura;
row3.Valida_Largura = row2.Valida_Largura;
row3.Valida_Comprimento = row2.Valida_Comprimento;
row3.Peso_Cubado = row2.Peso_Cubado.divide((new BigDecimal(6000)),2,RoundingMode.UP);
    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

    //Code generated according to input schema and output schema
row9.SKU = row3.SKU;
row9.Nome_Produto = row3.Nome_Produto;
row9.Marca = row3.Marca;
row9.Altura = row3.Altura;
row9.Largura = row3.Largura;
row9.Comprimento = row3.Comprimento;
row9.Peso = row3.Peso;
row9.vl_custo = row3.vl_custo;
row9.vl_tabela4 = row3.vl_tabela4;
row9.ipi = row3.ipi;
row9.Valida_Peso = row3.Valida_Peso;
row9.Valida_Dimensao = row3.Valida_Dimensao;
row9.Valida_Altura = row3.Valida_Altura;
row9.Valida_Largura = row3.Valida_Largura;
row9.Valida_Comprimento = row3.Valida_Comprimento;
row9.Peso_Cubado = row3.Peso_Cubado;

if (row3.Peso.compareTo(row3.Peso_Cubado)>=0) {
row9.Peso_Considerado = row3.Peso;
} else{
row9.Peso_Considerado = row3.Peso_Cubado;
}
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
						row10Struct row10 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row10" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow10 = false;
       		  	    	
       		  	    	
 							row10Struct row10ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								

								
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row10.lookup( row10HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row10.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow10 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow10 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row10 != null && tHash_Lookup_row10.hasNext()) || forceLooprow10) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row10'
									
                    		  	 
							   
                    		  	 
	       		  	    	row10Struct fromLookup_row10 = null;
							row10 = row10Default;
										 
							
								
								if(!forceLooprow10) { // G 46
								
							
								 
							
								
								fromLookup_row10 = tHash_Lookup_row10.next();

							

							if(fromLookup_row10 != null) {
								row10 = fromLookup_row10;
							}
							
							
							
			  							
							
                    		  	  		
								if( !rejectedInnerJoin_tMap_3 && 
									
									!(
										
										(row9.Peso_Considerado.compareTo(row10.De)>=0) &&
(row9.Peso_Considerado.compareTo(row10.Ate)<=0)
										
									)
									
								) { // G 016
                    		  	  		  
									fromLookup_row10 = null;
									row10 = row10Default;
                    		  	  		  		
									
								} // G 016
     	               		  	
								
								
									if(fromLookup_row10 == null && !rejectedInnerJoin_tMap_3) { // G 017
								
										continue;
									
									} // G 017
								
								
     	               		  	  	  
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow10 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

Saida1 = null;


// # Output table : 'Saida1'
Saida1_tmp.SKU = row9.SKU;
Saida1_tmp.Nome_Produto = row9.Nome_Produto;
Saida1_tmp.Marca = row9.Marca;
Saida1_tmp.Altura = row9.Altura;
Saida1_tmp.Largura = row9.Largura;
Saida1_tmp.Comprimento = row9.Comprimento;
Saida1_tmp.Peso = row9.Peso;
Saida1_tmp.Valida_Peso = row9.Valida_Peso;
Saida1_tmp.Valida_Dimensao = row9.Valida_Dimensao;
Saida1_tmp.Valida_Altura = row9.Valida_Altura;
Saida1_tmp.Valida_Largura = row9.Valida_Largura;
Saida1_tmp.Valida_Comprimento = row9.Valida_Comprimento;
Saida1_tmp.Peso_Cubado = row9.Peso_Cubado;
Saida1_tmp.Peso_Considerado = row9.Peso_Considerado;
Saida1_tmp.Frete = row10.Frete ;
Saida1_tmp.vl_custo = row9.vl_custo ;
Saida1_tmp.vl_tabela4 = row9.vl_tabela4 ;
Saida1_tmp.ipi = row9.ipi ;
Saida1 = Saida1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "Saida1"
if(Saida1 != null) { 
			row12 = null;



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida1"
						
						);
					}
					

    //Code generated according to input schema and output schema
row11.SKU = Saida1.SKU;
row11.Nome_Produto = Saida1.Nome_Produto;
row11.Marca = Saida1.Marca;
row11.Altura = Saida1.Altura;
row11.Largura = Saida1.Largura;
row11.Comprimento = Saida1.Comprimento;
row11.Peso = Saida1.Peso;
row11.Valida_Peso = Saida1.Valida_Peso;
row11.Valida_Dimensao = Saida1.Valida_Dimensao;
row11.Valida_Altura = Saida1.Valida_Altura;
row11.Valida_Largura = Saida1.Valida_Largura;
row11.Valida_Comprimento = Saida1.Valida_Comprimento;
row11.Peso_Cubado = Saida1.Peso_Cubado;
row11.Peso_Considerado = Saida1.Peso_Considerado;
row11.Frete = Saida1.Frete;
row11.vl_custo = Saida1.vl_custo;
row11.vl_tabela4 = Saida1.vl_tabela4;
row11.ipi = Saida1.ipi;
if (((Saida1.vl_custo.add(Saida1.ipi).add(new BigDecimal(5.5))).multiply(new BigDecimal(1.45))).compareTo(new BigDecimal(79.0)) ==-1)  {
row11.preco = ((Saida1.vl_custo.add(Saida1.vl_custo.multiply((Saida1.ipi).divide(new BigDecimal(100)))).add(new BigDecimal(5.5))).multiply(new BigDecimal(1.45)));
} else{
row11.preco = ((Saida1.vl_custo.add(Saida1.vl_custo.multiply((Saida1.ipi).divide(new BigDecimal(100)))).add(Saida1.Frete)).multiply(new BigDecimal(1.45)));
}





//(valor custo + (valor custo * (IPI/100)) + frete) * 1,45


//row11.preco = ((Saida1.vl_custo.add((Saida1.ipi).divide(new BigDecimal(100))).add(Saida1.Frete)).multiply(new BigDecimal(1.42)));





/*if (((Saida1.vl_custo.add(Saida1.ipi).add(new BigDecimal(5.5))).multiply(new BigDecimal(1.42))).compareTo(new BigDecimal(79.0)) ==-1)  {
row11.preco = ((Saida1.vl_custo.add((Saida1.ipi).divide(new BigDecimal(100))).add(new BigDecimal(5.5))).multiply(new BigDecimal(1.42)));
} else{
row11.preco = ((Saida1.vl_custo.add(Saida1.vl_custo.multiply((Saida1.ipi).divide(new BigDecimal(100)))).add(Saida1.Frete)).multiply(new BigDecimal(1.42)));
}
*/
    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					

    //Code generated according to input schema and output schema
row14.SKU = row11.SKU;
row14.Nome_Produto = row11.Nome_Produto;
row14.Marca = row11.Marca;
row14.Altura = row11.Altura;
row14.Largura = row11.Largura;
row14.Comprimento = row11.Comprimento;
row14.Peso = row11.Peso;
row14.Valida_Peso = row11.Valida_Peso;
row14.Valida_Dimensao = row11.Valida_Dimensao;
row14.Valida_Altura = row11.Valida_Altura;
row14.Valida_Largura = row11.Valida_Largura;
row14.Valida_Comprimento = row11.Valida_Comprimento;
row14.Peso_Cubado = row11.Peso_Cubado;
row14.Peso_Considerado = row11.Peso_Considerado;
row14.Frete = row11.Frete;
row14.vl_custo = row11.vl_custo;
row14.vl_tabela4 = row11.vl_tabela4;
row14.ipi = row11.ipi;
row14.preco = (row11.preco.setScale(0, RoundingMode.CEILING).subtract(new BigDecimal(0.1)));
    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
						row15Struct row15 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row15" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow15 = false;
       		  	    	
       		  	    	
 							row15Struct row15ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row15HashKey.Sku = row14.SKU ;
                        		    		

								
		                        	row15HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row15.lookup( row15HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row15.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow15 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow15 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row15 != null && tHash_Lookup_row15.hasNext()) || forceLooprow15) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row15'
									
                    		  	 
							   
                    		  	 
	       		  	    	row15Struct fromLookup_row15 = null;
							row15 = row15Default;
										 
							
								
								if(!forceLooprow15) { // G 46
								
							
								 
							
								
								fromLookup_row15 = tHash_Lookup_row15.next();

							

							if(fromLookup_row15 != null) {
								row15 = fromLookup_row15;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow15 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

Saida = null;


// # Output table : 'Saida'
Saida_tmp.SKU = row14.SKU;
Saida_tmp.Nome_Produto = row14.Nome_Produto;
Saida_tmp.Marca = row14.Marca;
Saida_tmp.Altura = row14.Altura;
Saida_tmp.Largura = row14.Largura;
Saida_tmp.Comprimento = row14.Comprimento;
Saida_tmp.Peso = row14.Peso;
Saida_tmp.Valida_Peso = row14.Valida_Peso;
Saida_tmp.Valida_Dimensao = row14.Valida_Dimensao;
Saida_tmp.Valida_Altura = row14.Valida_Altura;
Saida_tmp.Valida_Largura = row14.Valida_Largura;
Saida_tmp.Valida_Comprimento = row14.Valida_Comprimento;
Saida_tmp.Peso_Cubado = row14.Peso_Cubado;
Saida_tmp.Peso_Considerado = row14.Peso_Considerado;
Saida_tmp.Frete = row14.Frete;
Saida_tmp.vl_custo = row14.vl_custo;
Saida_tmp.vl_tabela4 = row14.vl_tabela4 ;
Saida_tmp.ipi = row14.ipi;
Saida_tmp.preco = row14.preco;
Saida_tmp.PMA = row15.PMA != null ? row15.PMA : "0.00";
Saida = Saida_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "Saida"
if(Saida != null) { 
			row12 = null;



	
	/**
	 * [tConvertType_1 main ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida"
						
						);
					}
					


  row17 = new row17Struct();
  boolean bHasError_tConvertType_1 = false;             
          try {
              row17.SKU=TypeConvert.String2String(Saida.SKU);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Nome_Produto=TypeConvert.String2String(Saida.Nome_Produto);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Marca=TypeConvert.String2String(Saida.Marca);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Altura=TypeConvert.Integer2Integer(Saida.Altura);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Largura=TypeConvert.Integer2Integer(Saida.Largura);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Comprimento=TypeConvert.Integer2Integer(Saida.Comprimento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Peso=TypeConvert.BigDecimal2BigDecimal(Saida.Peso);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Valida_Peso=TypeConvert.Integer2Integer(Saida.Valida_Peso);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Valida_Dimensao=TypeConvert.Integer2Integer(Saida.Valida_Dimensao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Valida_Altura=TypeConvert.Integer2Integer(Saida.Valida_Altura);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Valida_Largura=TypeConvert.Integer2Integer(Saida.Valida_Largura);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Valida_Comprimento=TypeConvert.Integer2Integer(Saida.Valida_Comprimento);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Peso_Cubado=TypeConvert.BigDecimal2BigDecimal(Saida.Peso_Cubado);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Peso_Considerado=TypeConvert.BigDecimal2BigDecimal(Saida.Peso_Considerado);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.Frete=TypeConvert.BigDecimal2BigDecimal(Saida.Frete);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.vl_custo=TypeConvert.BigDecimal2BigDecimal(Saida.vl_custo);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.vl_tabela4=TypeConvert.BigDecimal2BigDecimal(Saida.vl_tabela4);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.ipi=TypeConvert.BigDecimal2BigDecimal(Saida.ipi);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.preco=TypeConvert.BigDecimal2BigDecimal(Saida.preco);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row17.PMA=TypeConvert.String2BigDecimal(Saida.PMA);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_1) {row17 = null;}

  nb_line_tConvertType_1 ++ ;

 


	tos_count_tConvertType_1++;

/**
 * [tConvertType_1 main ] stop
 */
	
	/**
	 * [tConvertType_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_begin ] stop
 */
// Start of branch "row17"
if(row17 != null) { 
			row12 = null;



	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

    //Code generated according to input schema and output schema
row16.SKU = row17.SKU;
row16.Nome_Produto = row17.Nome_Produto;
row16.Marca = row17.Marca;
row16.Altura = row17.Altura;
row16.Largura = row17.Largura;
row16.Comprimento = row17.Comprimento;
row16.Peso = row17.Peso;
row16.Valida_Peso = row17.Valida_Peso;
row16.Valida_Dimensao = row17.Valida_Dimensao;
row16.Valida_Altura = row17.Valida_Altura;
row16.Valida_Largura = row17.Valida_Largura;
row16.Valida_Comprimento = row17.Valida_Comprimento;
row16.Peso_Cubado = row17.Peso_Cubado;
row16.Peso_Considerado = row17.Peso_Considerado;
row16.Frete = row17.Frete;
row16.vl_custo = row17.vl_custo;
row16.vl_tabela4 = row17.vl_tabela4;
row16.ipi = row17.ipi;
row16.preco = row17.preco;
row16.PMA = row17.PMA;

if (row17.preco.compareTo(row17.PMA)>=0) {
row16.Preco_Final = row17.preco;
} else{
row16.Preco_Final = row17.PMA;
}


    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */

	
	/**
	 * [tFilterRow_1 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					

          row12 = null;
          row7 = null;
    Operator_tFilterRow_1 ope_tFilterRow_1 = new Operator_tFilterRow_1("||");
            ope_tFilterRow_1.matches((row16.Valida_Peso == null? false : row16.Valida_Peso.compareTo(ParserUtils.parseTo_Integer(String.valueOf(0))) != 0)
                           , "Valida_Peso.compareTo(0) != 0 failed");
		 	
            ope_tFilterRow_1.matches((row16.Valida_Dimensao == null? false : row16.Valida_Dimensao.compareTo(ParserUtils.parseTo_Integer(String.valueOf(0))) != 0)
                           , "Valida_Dimensao.compareTo(0) != 0 failed");
		 	
            ope_tFilterRow_1.matches((row16.Valida_Altura == null? false : row16.Valida_Altura.compareTo(ParserUtils.parseTo_Integer(String.valueOf(0))) != 0)
                           , "Valida_Altura.compareTo(0) != 0 failed");
		 	
            ope_tFilterRow_1.matches((row16.Valida_Largura == null? false : row16.Valida_Largura.compareTo(ParserUtils.parseTo_Integer(String.valueOf(0))) != 0)
                           , "Valida_Largura.compareTo(0) != 0 failed");
		 	
            ope_tFilterRow_1.matches((row16.Valida_Comprimento == null? false : row16.Valida_Comprimento.compareTo(ParserUtils.parseTo_Integer(String.valueOf(0))) != 0)
                           , "Valida_Comprimento.compareTo(0) != 0 failed");
		 	
    
    if (ope_tFilterRow_1.getMatchFlag()) {
              if(row7 == null){ 
                row7 = new row7Struct();
              }
               row7.SKU = row16.SKU;
               row7.Nome_Produto = row16.Nome_Produto;
               row7.Marca = row16.Marca;
               row7.Altura = row16.Altura;
               row7.Largura = row16.Largura;
               row7.Comprimento = row16.Comprimento;
               row7.Peso = row16.Peso;
               row7.Valida_Peso = row16.Valida_Peso;
               row7.Valida_Dimensao = row16.Valida_Dimensao;
               row7.Valida_Altura = row16.Valida_Altura;
               row7.Valida_Largura = row16.Valida_Largura;
               row7.Valida_Comprimento = row16.Valida_Comprimento;
               row7.Peso_Cubado = row16.Peso_Cubado;
               row7.Peso_Considerado = row16.Peso_Considerado;
               row7.Frete = row16.Frete;
               row7.vl_custo = row16.vl_custo;
               row7.ipi = row16.ipi;
               row7.preco = row16.preco;
               row7.vl_tabela4 = row16.vl_tabela4;
               row7.PMA = row16.PMA;
               row7.Preco_Final = row16.Preco_Final;    
      nb_line_ok_tFilterRow_1++;
    } else {
            if (row12 == null){
              row12 = new row12Struct();
            }
                row12.SKU = row16.SKU;
                row12.Nome_Produto = row16.Nome_Produto;
                row12.Marca = row16.Marca;
                row12.Altura = row16.Altura;
                row12.Largura = row16.Largura;
                row12.Comprimento = row16.Comprimento;
                row12.Peso = row16.Peso;
                row12.Valida_Peso = row16.Valida_Peso;
                row12.Valida_Dimensao = row16.Valida_Dimensao;
                row12.Valida_Altura = row16.Valida_Altura;
                row12.Valida_Largura = row16.Valida_Largura;
                row12.Valida_Comprimento = row16.Valida_Comprimento;
                row12.Peso_Cubado = row16.Peso_Cubado;
                row12.Peso_Considerado = row16.Peso_Considerado;
                row12.Frete = row16.Frete;
                row12.vl_custo = row16.vl_custo;
                row12.ipi = row16.ipi;
                row12.preco = row16.preco;
                row12.vl_tabela4 = row16.vl_tabela4;
                row12.PMA = row16.PMA;
                row12.Preco_Final = row16.Preco_Final;
	            row12.errorMessage = ope_tFilterRow_1.getErrorMsg();
      nb_line_reject_tFilterRow_1++;
    }

nb_line_tFilterRow_1++;

 


	tos_count_tFilterRow_1++;

/**
 * [tFilterRow_1 main ] stop
 */
	
	/**
	 * [tFilterRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_begin ] stop
 */
// Start of branch "row7"
if(row7 != null) { 



	
	/**
	 * [tJavaRow_8 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

    //Code generated according to input schema and output schema
row20.SKU = row7.SKU;
row20.Nome_Produto = row7.Nome_Produto;
row20.Marca = row7.Marca;
row20.Altura = row7.Altura;
row20.Largura = row7.Largura;
row20.Comprimento = row7.Comprimento;
row20.Peso = row7.Peso;
row20.Valida_Peso = row7.Valida_Peso;
row20.Valida_Dimensao = row7.Valida_Dimensao;
row20.Valida_Altura = row7.Valida_Altura;
row20.Valida_Largura = row7.Valida_Largura;
row20.Valida_Comprimento = row7.Valida_Comprimento;
row20.Peso_Cubado = row7.Peso_Cubado;
row20.Peso_Considerado = row7.Peso_Considerado;
row20.Frete = row7.Frete;
row20.vl_custo = row7.vl_custo;
row20.ipi = row7.ipi;
row20.preco =row7.vl_custo.add(new BigDecimal(0.45));
//row20.preco = row7.vl_tabela4;  //// Custo + 45%
//row20.preco = row7.vl_tabela4.add(row7.vl_tabela4.multiply(new BigDecimal(0.02)));
row20.vl_tabela4 = row7.vl_tabela4;
row20.PMA = row7.PMA;
row20.Preco_Final = row7.Preco_Final;

    nb_line_tJavaRow_8++;   

 


	tos_count_tJavaRow_8++;

/**
 * [tJavaRow_8 main ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

    //Code generated according to input schema and output schema
row21.SKU = row20.SKU;
row21.Nome_Produto = row20.Nome_Produto;
row21.Marca = row20.Marca;
row21.Altura = row20.Altura;
row21.Largura = row20.Largura;
row21.Comprimento = row20.Comprimento;
row21.Peso = row20.Peso;
row21.Valida_Peso = row20.Valida_Peso;
row21.Valida_Dimensao = row20.Valida_Dimensao;
row21.Valida_Altura = row20.Valida_Altura;
row21.Valida_Largura = row20.Valida_Largura;
row21.Valida_Comprimento = row20.Valida_Comprimento;
row21.Peso_Cubado = row20.Peso_Cubado;
row21.Peso_Considerado = row20.Peso_Considerado;
row21.Frete = row20.Frete;
row21.vl_custo = row20.vl_custo;
row21.ipi = row20.ipi;
row21.preco = row20.preco;
row21.vl_tabela4 = row20.vl_tabela4;
row21.PMA = row20.PMA;

if (row20.preco.compareTo(row20.PMA)>=0) {
row21.Preco_Final = row20.preco;
} else{
row21.Preco_Final = row20.PMA;
}


    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					




		if(tHashFile_tHashOutput_4 == null){
			tHashFile_tHashOutput_4 = mf_tHashOutput_4.getAdvancedMemoryHashFile("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_6");
			mf_tHashOutput_4.getResourceMap().put("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_4", tHashFile_tHashOutput_4);
		}
		row22Struct oneRow_tHashOutput_4 = new row22Struct();
			oneRow_tHashOutput_4.SKU = row21.SKU;
			oneRow_tHashOutput_4.Nome_Produto = row21.Nome_Produto;
			oneRow_tHashOutput_4.Marca = row21.Marca;
			oneRow_tHashOutput_4.Altura = row21.Altura;
			oneRow_tHashOutput_4.Largura = row21.Largura;
			oneRow_tHashOutput_4.Comprimento = row21.Comprimento;
			oneRow_tHashOutput_4.Peso = row21.Peso;
			oneRow_tHashOutput_4.Valida_Peso = row21.Valida_Peso;
			oneRow_tHashOutput_4.Valida_Dimensao = row21.Valida_Dimensao;
			oneRow_tHashOutput_4.Valida_Altura = row21.Valida_Altura;
			oneRow_tHashOutput_4.Valida_Largura = row21.Valida_Largura;
			oneRow_tHashOutput_4.Valida_Comprimento = row21.Valida_Comprimento;
			oneRow_tHashOutput_4.Peso_Cubado = row21.Peso_Cubado;
			oneRow_tHashOutput_4.Peso_Considerado = row21.Peso_Considerado;
			oneRow_tHashOutput_4.Frete = row21.Frete;
			oneRow_tHashOutput_4.vl_custo = row21.vl_custo;
			oneRow_tHashOutput_4.ipi = row21.ipi;
			oneRow_tHashOutput_4.preco = row21.preco;
			oneRow_tHashOutput_4.vl_tabela4 = row21.vl_tabela4;
			oneRow_tHashOutput_4.PMA = row21.PMA;
			oneRow_tHashOutput_4.Preco_Final = row21.Preco_Final;
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;	

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_end ] stop
 */

} // End of branch "row7"




// Start of branch "row12"
if(row12 != null) { 



	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					




		if(tHashFile_tHashOutput_5 == null){
			tHashFile_tHashOutput_5 = mf_tHashOutput_5.getAdvancedMemoryHashFile("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_6");
			mf_tHashOutput_5.getResourceMap().put("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_5", tHashFile_tHashOutput_5);
		}
		row22Struct oneRow_tHashOutput_5 = new row22Struct();
			oneRow_tHashOutput_5.SKU = row12.SKU;
			oneRow_tHashOutput_5.Nome_Produto = row12.Nome_Produto;
			oneRow_tHashOutput_5.Marca = row12.Marca;
			oneRow_tHashOutput_5.Altura = row12.Altura;
			oneRow_tHashOutput_5.Largura = row12.Largura;
			oneRow_tHashOutput_5.Comprimento = row12.Comprimento;
			oneRow_tHashOutput_5.Peso = row12.Peso;
			oneRow_tHashOutput_5.Valida_Peso = row12.Valida_Peso;
			oneRow_tHashOutput_5.Valida_Dimensao = row12.Valida_Dimensao;
			oneRow_tHashOutput_5.Valida_Altura = row12.Valida_Altura;
			oneRow_tHashOutput_5.Valida_Largura = row12.Valida_Largura;
			oneRow_tHashOutput_5.Valida_Comprimento = row12.Valida_Comprimento;
			oneRow_tHashOutput_5.Peso_Cubado = row12.Peso_Cubado;
			oneRow_tHashOutput_5.Peso_Considerado = row12.Peso_Considerado;
			oneRow_tHashOutput_5.Frete = row12.Frete;
			oneRow_tHashOutput_5.vl_custo = row12.vl_custo;
			oneRow_tHashOutput_5.ipi = row12.ipi;
			oneRow_tHashOutput_5.preco = row12.preco;
			oneRow_tHashOutput_5.vl_tabela4 = row12.vl_tabela4;
			oneRow_tHashOutput_5.PMA = row12.PMA;
			oneRow_tHashOutput_5.Preco_Final = row12.Preco_Final;
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;	

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */

} // End of branch "row12"




	
	/**
	 * [tFilterRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */

} // End of branch "row17"




	
	/**
	 * [tConvertType_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_end ] stop
 */

} // End of branch "Saida"



	
		} // close loop of lookup 'row15' // G_TM_M_043
	
	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "Saida1"



	
		} // close loop of lookup 'row10' // G_TM_M_043
	
	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
}
globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);

 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row10 != null) {
						tHash_Lookup_row10.endGet();
					}
					globalMap.remove( "tHash_Lookup_row10" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());




/**
 * [tJavaRow_5 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row15 != null) {
						tHash_Lookup_row15.endGet();
					}
					globalMap.remove( "tHash_Lookup_row15" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tConvertType_1 end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
      globalMap.put("tConvertType_1_NB_LINE", nb_line_tConvertType_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida");
			  	}
			  	
 

ok_Hash.put("tConvertType_1", true);
end_Hash.put("tConvertType_1", System.currentTimeMillis());




/**
 * [tConvertType_1 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());




/**
 * [tJavaRow_6 end ] stop
 */

	
	/**
	 * [tFilterRow_1 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
    globalMap.put("tFilterRow_1_NB_LINE", nb_line_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_OK", nb_line_ok_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_REJECT", nb_line_reject_tFilterRow_1);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tFilterRow_1", true);
end_Hash.put("tFilterRow_1", System.currentTimeMillis());




/**
 * [tFilterRow_1 end ] stop
 */

	
	/**
	 * [tJavaRow_8 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

globalMap.put("tJavaRow_8_NB_LINE",nb_line_tJavaRow_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tJavaRow_8", true);
end_Hash.put("tJavaRow_8", System.currentTimeMillis());




/**
 * [tJavaRow_8 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());




/**
 * [tJavaRow_9 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */










	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */

































				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk9", 0, "ok");
								} 
							
							tJava_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row15"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row10"); 
				     			
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tConvertType_1 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */

	
	/**
	 * [tFilterRow_1 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_8 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */










	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */

































				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
		int tos_count_tJava_5 = 0;
		


String foo = "bar";

System.out.println("MKTPLACE4_AMAZON - Finalizado a consulta dos dados MKTPLACE4_AMAZON");
System.out.println("MKTPLACE4_AMAZON - Iniciando a gravacao dos dados na tabela");
 



/**
 * [tJava_5 begin ] stop
 */
	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */
	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());




/**
 * [tJava_5 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk20", 0, "ok");
								} 
							
							tHashInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_5_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return false;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 50;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row26Struct other = (row26Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.MKTPLACE == null) {
							if (other.MKTPLACE != null)
								return false;
						
						} else if (!this.MKTPLACE.equals(other.MKTPLACE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row26Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ARREDONDAMENTO = this.VL_ARREDONDAMENTO;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            
	}

	public void copyKeysDataTo(row26Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.MKTPLACE = this.MKTPLACE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MKTPLACE, other.MKTPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida2Struct implements routines.system.IPersistableRow<Saida2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return false;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 50;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Saida2Struct other = (Saida2Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.MKTPLACE == null) {
							if (other.MKTPLACE != null)
								return false;
						
						} else if (!this.MKTPLACE.equals(other.MKTPLACE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Saida2Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ARREDONDAMENTO = this.VL_ARREDONDAMENTO;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            
	}

	public void copyKeysDataTo(Saida2Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.MKTPLACE = this.MKTPLACE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MKTPLACE, other.MKTPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_DWStruct implements routines.system.IPersistableRow<insert_DWStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_ULTI_ATUALIZACAO;

				public java.util.Date getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return false;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 50;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public java.util.Date DATA_ENVIO;

				public java.util.Date getDATA_ENVIO () {
					return this.DATA_ENVIO;
				}

				public Boolean DATA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean DATA_ENVIOIsKey(){
				    return false;
				}
				public Integer DATA_ENVIOLength(){
				    return null;
				}
				public Integer DATA_ENVIOPrecision(){
				    return null;
				}
				public String DATA_ENVIODefault(){
				
					return null;
				
				}
				public String DATA_ENVIOComment(){
				
				    return "";
				
				}
				public String DATA_ENVIOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_ENVIOOriginalDbColumnName(){
				
					return "DATA_ENVIO";
				
				}

				
			    public String STATUS_ENVIO;

				public String getSTATUS_ENVIO () {
					return this.STATUS_ENVIO;
				}

				public Boolean STATUS_ENVIOIsNullable(){
				    return true;
				}
				public Boolean STATUS_ENVIOIsKey(){
				    return false;
				}
				public Integer STATUS_ENVIOLength(){
				    return null;
				}
				public Integer STATUS_ENVIOPrecision(){
				    return null;
				}
				public String STATUS_ENVIODefault(){
				
					return null;
				
				}
				public String STATUS_ENVIOComment(){
				
				    return "";
				
				}
				public String STATUS_ENVIOPattern(){
				
					return "";
				
				}
				public String STATUS_ENVIOOriginalDbColumnName(){
				
					return "STATUS_ENVIO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final insert_DWStruct other = (insert_DWStruct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.MKTPLACE == null) {
							if (other.MKTPLACE != null)
								return false;
						
						} else if (!this.MKTPLACE.equals(other.MKTPLACE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(insert_DWStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_ULTI_ATUALIZACAO = this.DT_ULTI_ATUALIZACAO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            other.DC_PRODUTO = this.DC_PRODUTO;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.CD_OPERADOR = this.CD_OPERADOR;
	            other.NM_OPERADOR = this.NM_OPERADOR;
	            other.CD_MARCA = this.CD_MARCA;
	            other.DC_MARCA = this.DC_MARCA;
	            other.CD_FORNECEDOR = this.CD_FORNECEDOR;
	            other.CD_COMPRADOR = this.CD_COMPRADOR;
	            other.NM_COMPRADOR = this.NM_COMPRADOR;
	            other.VL_ARREDONDAMENTO = this.VL_ARREDONDAMENTO;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            other.DATA_ENVIO = this.DATA_ENVIO;
	            other.STATUS_ENVIO = this.STATUS_ENVIO;
	            
	}

	public void copyKeysDataTo(insert_DWStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.MKTPLACE = this.MKTPLACE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_ULTI_ATUALIZACAO="+String.valueOf(DT_ULTI_ATUALIZACAO));
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",DATA_ENVIO="+String.valueOf(DATA_ENVIO));
		sb.append(",STATUS_ENVIO="+STATUS_ENVIO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_DWStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MKTPLACE, other.MKTPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public String Valida_Peso;

				public String getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public String Valida_Dimensao;

				public String getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public String Valida_Altura;

				public String getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public String Valida_Largura;

				public String getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public String Valida_Comprimento;

				public String getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal PMA;

				public BigDecimal getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return 15;
				}
				public Integer PMAPrecision(){
				    return 2;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				
			    public BigDecimal Preco_Final;

				public BigDecimal getPreco_Final () {
					return this.Preco_Final;
				}

				public Boolean Preco_FinalIsNullable(){
				    return true;
				}
				public Boolean Preco_FinalIsKey(){
				    return false;
				}
				public Integer Preco_FinalLength(){
				    return 15;
				}
				public Integer Preco_FinalPrecision(){
				    return 2;
				}
				public String Preco_FinalDefault(){
				
					return null;
				
				}
				public String Preco_FinalComment(){
				
				    return "";
				
				}
				public String Preco_FinalPattern(){
				
					return "";
				
				}
				public String Preco_FinalOriginalDbColumnName(){
				
					return "Preco_Final";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
					this.Valida_Peso = readString(dis);
					
					this.Valida_Dimensao = readString(dis);
					
					this.Valida_Altura = readString(dis);
					
					this.Valida_Largura = readString(dis);
					
					this.Valida_Comprimento = readString(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
					this.Valida_Peso = readString(dis);
					
					this.Valida_Dimensao = readString(dis);
					
					this.Valida_Altura = readString(dis);
					
					this.Valida_Largura = readString(dis);
					
					this.Valida_Comprimento = readString(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// String
				
						writeString(this.Valida_Peso,dos);
					
					// String
				
						writeString(this.Valida_Dimensao,dos);
					
					// String
				
						writeString(this.Valida_Altura,dos);
					
					// String
				
						writeString(this.Valida_Largura,dos);
					
					// String
				
						writeString(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PMA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// String
				
						writeString(this.Valida_Peso,dos);
					
					// String
				
						writeString(this.Valida_Dimensao,dos);
					
					// String
				
						writeString(this.Valida_Altura,dos);
					
					// String
				
						writeString(this.Valida_Largura,dos);
					
					// String
				
						writeString(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PMA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+Valida_Peso);
		sb.append(",Valida_Dimensao="+Valida_Dimensao);
		sb.append(",Valida_Altura="+Valida_Altura);
		sb.append(",Valida_Largura="+Valida_Largura);
		sb.append(",Valida_Comprimento="+Valida_Comprimento);
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",PMA="+String.valueOf(PMA));
		sb.append(",Preco_Final="+String.valueOf(Preco_Final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal PMA;

				public BigDecimal getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return 15;
				}
				public Integer PMAPrecision(){
				    return 2;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				
			    public BigDecimal Preco_Final;

				public BigDecimal getPreco_Final () {
					return this.Preco_Final;
				}

				public Boolean Preco_FinalIsNullable(){
				    return true;
				}
				public Boolean Preco_FinalIsKey(){
				    return false;
				}
				public Integer Preco_FinalLength(){
				    return 15;
				}
				public Integer Preco_FinalPrecision(){
				    return 2;
				}
				public String Preco_FinalDefault(){
				
					return null;
				
				}
				public String Preco_FinalComment(){
				
				    return "";
				
				}
				public String Preco_FinalPattern(){
				
					return "";
				
				}
				public String Preco_FinalOriginalDbColumnName(){
				
					return "Preco_Final";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row19Struct other = (row19Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row19Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.PMA = this.PMA;
	            other.Preco_Final = this.Preco_Final;
	            
	}

	public void copyKeysDataTo(row19Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PMA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PMA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",PMA="+String.valueOf(PMA));
		sb.append(",Preco_Final="+String.valueOf(Preco_Final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_4Struct implements routines.system.IPersistableRow<after_tHashInput_4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return true;
				}
				public Integer SKULength(){
				    return 5;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Nome_Produto;

				public String getNome_Produto () {
					return this.Nome_Produto;
				}

				public Boolean Nome_ProdutoIsNullable(){
				    return true;
				}
				public Boolean Nome_ProdutoIsKey(){
				    return false;
				}
				public Integer Nome_ProdutoLength(){
				    return 70;
				}
				public Integer Nome_ProdutoPrecision(){
				    return null;
				}
				public String Nome_ProdutoDefault(){
				
					return null;
				
				}
				public String Nome_ProdutoComment(){
				
				    return "";
				
				}
				public String Nome_ProdutoPattern(){
				
					return "";
				
				}
				public String Nome_ProdutoOriginalDbColumnName(){
				
					return "Nome_Produto";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return 16;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public Integer Altura;

				public Integer getAltura () {
					return this.Altura;
				}

				public Boolean AlturaIsNullable(){
				    return true;
				}
				public Boolean AlturaIsKey(){
				    return false;
				}
				public Integer AlturaLength(){
				    return 3;
				}
				public Integer AlturaPrecision(){
				    return 2;
				}
				public String AlturaDefault(){
				
					return null;
				
				}
				public String AlturaComment(){
				
				    return "";
				
				}
				public String AlturaPattern(){
				
					return "";
				
				}
				public String AlturaOriginalDbColumnName(){
				
					return "Altura";
				
				}

				
			    public Integer Largura;

				public Integer getLargura () {
					return this.Largura;
				}

				public Boolean LarguraIsNullable(){
				    return true;
				}
				public Boolean LarguraIsKey(){
				    return false;
				}
				public Integer LarguraLength(){
				    return 3;
				}
				public Integer LarguraPrecision(){
				    return 2;
				}
				public String LarguraDefault(){
				
					return null;
				
				}
				public String LarguraComment(){
				
				    return "";
				
				}
				public String LarguraPattern(){
				
					return "";
				
				}
				public String LarguraOriginalDbColumnName(){
				
					return "Largura";
				
				}

				
			    public Integer Comprimento;

				public Integer getComprimento () {
					return this.Comprimento;
				}

				public Boolean ComprimentoIsNullable(){
				    return true;
				}
				public Boolean ComprimentoIsKey(){
				    return false;
				}
				public Integer ComprimentoLength(){
				    return 3;
				}
				public Integer ComprimentoPrecision(){
				    return 2;
				}
				public String ComprimentoDefault(){
				
					return null;
				
				}
				public String ComprimentoComment(){
				
				    return "";
				
				}
				public String ComprimentoPattern(){
				
					return "";
				
				}
				public String ComprimentoOriginalDbColumnName(){
				
					return "Comprimento";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 4;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public Integer Valida_Peso;

				public Integer getValida_Peso () {
					return this.Valida_Peso;
				}

				public Boolean Valida_PesoIsNullable(){
				    return true;
				}
				public Boolean Valida_PesoIsKey(){
				    return false;
				}
				public Integer Valida_PesoLength(){
				    return 1;
				}
				public Integer Valida_PesoPrecision(){
				    return null;
				}
				public String Valida_PesoDefault(){
				
					return null;
				
				}
				public String Valida_PesoComment(){
				
				    return "";
				
				}
				public String Valida_PesoPattern(){
				
					return "";
				
				}
				public String Valida_PesoOriginalDbColumnName(){
				
					return "Valida_Peso";
				
				}

				
			    public Integer Valida_Dimensao;

				public Integer getValida_Dimensao () {
					return this.Valida_Dimensao;
				}

				public Boolean Valida_DimensaoIsNullable(){
				    return true;
				}
				public Boolean Valida_DimensaoIsKey(){
				    return false;
				}
				public Integer Valida_DimensaoLength(){
				    return 1;
				}
				public Integer Valida_DimensaoPrecision(){
				    return null;
				}
				public String Valida_DimensaoDefault(){
				
					return null;
				
				}
				public String Valida_DimensaoComment(){
				
				    return "";
				
				}
				public String Valida_DimensaoPattern(){
				
					return "";
				
				}
				public String Valida_DimensaoOriginalDbColumnName(){
				
					return "Valida_Dimensao";
				
				}

				
			    public Integer Valida_Altura;

				public Integer getValida_Altura () {
					return this.Valida_Altura;
				}

				public Boolean Valida_AlturaIsNullable(){
				    return true;
				}
				public Boolean Valida_AlturaIsKey(){
				    return false;
				}
				public Integer Valida_AlturaLength(){
				    return 1;
				}
				public Integer Valida_AlturaPrecision(){
				    return null;
				}
				public String Valida_AlturaDefault(){
				
					return null;
				
				}
				public String Valida_AlturaComment(){
				
				    return "";
				
				}
				public String Valida_AlturaPattern(){
				
					return "";
				
				}
				public String Valida_AlturaOriginalDbColumnName(){
				
					return "Valida_Altura";
				
				}

				
			    public Integer Valida_Largura;

				public Integer getValida_Largura () {
					return this.Valida_Largura;
				}

				public Boolean Valida_LarguraIsNullable(){
				    return true;
				}
				public Boolean Valida_LarguraIsKey(){
				    return false;
				}
				public Integer Valida_LarguraLength(){
				    return 1;
				}
				public Integer Valida_LarguraPrecision(){
				    return null;
				}
				public String Valida_LarguraDefault(){
				
					return null;
				
				}
				public String Valida_LarguraComment(){
				
				    return "";
				
				}
				public String Valida_LarguraPattern(){
				
					return "";
				
				}
				public String Valida_LarguraOriginalDbColumnName(){
				
					return "Valida_Largura";
				
				}

				
			    public Integer Valida_Comprimento;

				public Integer getValida_Comprimento () {
					return this.Valida_Comprimento;
				}

				public Boolean Valida_ComprimentoIsNullable(){
				    return true;
				}
				public Boolean Valida_ComprimentoIsKey(){
				    return false;
				}
				public Integer Valida_ComprimentoLength(){
				    return 1;
				}
				public Integer Valida_ComprimentoPrecision(){
				    return null;
				}
				public String Valida_ComprimentoDefault(){
				
					return null;
				
				}
				public String Valida_ComprimentoComment(){
				
				    return "";
				
				}
				public String Valida_ComprimentoPattern(){
				
					return "";
				
				}
				public String Valida_ComprimentoOriginalDbColumnName(){
				
					return "Valida_Comprimento";
				
				}

				
			    public BigDecimal Peso_Cubado;

				public BigDecimal getPeso_Cubado () {
					return this.Peso_Cubado;
				}

				public Boolean Peso_CubadoIsNullable(){
				    return true;
				}
				public Boolean Peso_CubadoIsKey(){
				    return false;
				}
				public Integer Peso_CubadoLength(){
				    return 3;
				}
				public Integer Peso_CubadoPrecision(){
				    return 2;
				}
				public String Peso_CubadoDefault(){
				
					return null;
				
				}
				public String Peso_CubadoComment(){
				
				    return "";
				
				}
				public String Peso_CubadoPattern(){
				
					return "";
				
				}
				public String Peso_CubadoOriginalDbColumnName(){
				
					return "Peso_Cubado";
				
				}

				
			    public BigDecimal Peso_Considerado;

				public BigDecimal getPeso_Considerado () {
					return this.Peso_Considerado;
				}

				public Boolean Peso_ConsideradoIsNullable(){
				    return true;
				}
				public Boolean Peso_ConsideradoIsKey(){
				    return false;
				}
				public Integer Peso_ConsideradoLength(){
				    return 3;
				}
				public Integer Peso_ConsideradoPrecision(){
				    return 2;
				}
				public String Peso_ConsideradoDefault(){
				
					return null;
				
				}
				public String Peso_ConsideradoComment(){
				
				    return "";
				
				}
				public String Peso_ConsideradoPattern(){
				
					return "";
				
				}
				public String Peso_ConsideradoOriginalDbColumnName(){
				
					return "Peso_Considerado";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				
			    public BigDecimal vl_custo;

				public BigDecimal getVl_custo () {
					return this.vl_custo;
				}

				public Boolean vl_custoIsNullable(){
				    return true;
				}
				public Boolean vl_custoIsKey(){
				    return false;
				}
				public Integer vl_custoLength(){
				    return 15;
				}
				public Integer vl_custoPrecision(){
				    return 2;
				}
				public String vl_custoDefault(){
				
					return null;
				
				}
				public String vl_custoComment(){
				
				    return "";
				
				}
				public String vl_custoPattern(){
				
					return "";
				
				}
				public String vl_custoOriginalDbColumnName(){
				
					return "vl_custo";
				
				}

				
			    public BigDecimal ipi;

				public BigDecimal getIpi () {
					return this.ipi;
				}

				public Boolean ipiIsNullable(){
				    return true;
				}
				public Boolean ipiIsKey(){
				    return false;
				}
				public Integer ipiLength(){
				    return 15;
				}
				public Integer ipiPrecision(){
				    return 2;
				}
				public String ipiDefault(){
				
					return null;
				
				}
				public String ipiComment(){
				
				    return "";
				
				}
				public String ipiPattern(){
				
					return "";
				
				}
				public String ipiOriginalDbColumnName(){
				
					return "ipi";
				
				}

				
			    public BigDecimal preco;

				public BigDecimal getPreco () {
					return this.preco;
				}

				public Boolean precoIsNullable(){
				    return true;
				}
				public Boolean precoIsKey(){
				    return false;
				}
				public Integer precoLength(){
				    return 15;
				}
				public Integer precoPrecision(){
				    return 2;
				}
				public String precoDefault(){
				
					return null;
				
				}
				public String precoComment(){
				
				    return "";
				
				}
				public String precoPattern(){
				
					return "";
				
				}
				public String precoOriginalDbColumnName(){
				
					return "preco";
				
				}

				
			    public BigDecimal vl_tabela4;

				public BigDecimal getVl_tabela4 () {
					return this.vl_tabela4;
				}

				public Boolean vl_tabela4IsNullable(){
				    return true;
				}
				public Boolean vl_tabela4IsKey(){
				    return false;
				}
				public Integer vl_tabela4Length(){
				    return 15;
				}
				public Integer vl_tabela4Precision(){
				    return 2;
				}
				public String vl_tabela4Default(){
				
					return null;
				
				}
				public String vl_tabela4Comment(){
				
				    return "";
				
				}
				public String vl_tabela4Pattern(){
				
					return "";
				
				}
				public String vl_tabela4OriginalDbColumnName(){
				
					return "vl_tabela4";
				
				}

				
			    public BigDecimal PMA;

				public BigDecimal getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return 15;
				}
				public Integer PMAPrecision(){
				    return 2;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				
			    public BigDecimal Preco_Final;

				public BigDecimal getPreco_Final () {
					return this.Preco_Final;
				}

				public Boolean Preco_FinalIsNullable(){
				    return true;
				}
				public Boolean Preco_FinalIsKey(){
				    return false;
				}
				public Integer Preco_FinalLength(){
				    return 15;
				}
				public Integer Preco_FinalPrecision(){
				    return 2;
				}
				public String Preco_FinalDefault(){
				
					return null;
				
				}
				public String Preco_FinalComment(){
				
				    return "";
				
				}
				public String Preco_FinalPattern(){
				
					return "";
				
				}
				public String Preco_FinalOriginalDbColumnName(){
				
					return "Preco_Final";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tHashInput_4Struct other = (after_tHashInput_4Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tHashInput_4Struct other) {

		other.SKU = this.SKU;
	            other.Nome_Produto = this.Nome_Produto;
	            other.Marca = this.Marca;
	            other.Altura = this.Altura;
	            other.Largura = this.Largura;
	            other.Comprimento = this.Comprimento;
	            other.Peso = this.Peso;
	            other.Valida_Peso = this.Valida_Peso;
	            other.Valida_Dimensao = this.Valida_Dimensao;
	            other.Valida_Altura = this.Valida_Altura;
	            other.Valida_Largura = this.Valida_Largura;
	            other.Valida_Comprimento = this.Valida_Comprimento;
	            other.Peso_Cubado = this.Peso_Cubado;
	            other.Peso_Considerado = this.Peso_Considerado;
	            other.Frete = this.Frete;
	            other.vl_custo = this.vl_custo;
	            other.ipi = this.ipi;
	            other.preco = this.preco;
	            other.vl_tabela4 = this.vl_tabela4;
	            other.PMA = this.PMA;
	            other.Preco_Final = this.Preco_Final;
	            
	}

	public void copyKeysDataTo(after_tHashInput_4Struct other) {

		other.SKU = this.SKU;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
					this.Nome_Produto = readString(dis);
					
					this.Marca = readString(dis);
					
						this.Altura = readInteger(dis);
					
						this.Largura = readInteger(dis);
					
						this.Comprimento = readInteger(dis);
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valida_Peso = readInteger(dis);
					
						this.Valida_Dimensao = readInteger(dis);
					
						this.Valida_Altura = readInteger(dis);
					
						this.Valida_Largura = readInteger(dis);
					
						this.Valida_Comprimento = readInteger(dis);
					
						this.Peso_Cubado = (BigDecimal) dis.readObject();
					
						this.Peso_Considerado = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
						this.vl_custo = (BigDecimal) dis.readObject();
					
						this.ipi = (BigDecimal) dis.readObject();
					
						this.preco = (BigDecimal) dis.readObject();
					
						this.vl_tabela4 = (BigDecimal) dis.readObject();
					
						this.PMA = (BigDecimal) dis.readObject();
					
						this.Preco_Final = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ipi);
					
					// BigDecimal
				
       			    	dos.writeObject(this.preco);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PMA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Nome_Produto,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// Integer
				
						writeInteger(this.Altura,dos);
					
					// Integer
				
						writeInteger(this.Largura,dos);
					
					// Integer
				
						writeInteger(this.Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// Integer
				
						writeInteger(this.Valida_Peso,dos);
					
					// Integer
				
						writeInteger(this.Valida_Dimensao,dos);
					
					// Integer
				
						writeInteger(this.Valida_Altura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Largura,dos);
					
					// Integer
				
						writeInteger(this.Valida_Comprimento,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Cubado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso_Considerado);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_custo);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ipi);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.preco);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_tabela4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PMA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Preco_Final);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SKU="+SKU);
		sb.append(",Nome_Produto="+Nome_Produto);
		sb.append(",Marca="+Marca);
		sb.append(",Altura="+String.valueOf(Altura));
		sb.append(",Largura="+String.valueOf(Largura));
		sb.append(",Comprimento="+String.valueOf(Comprimento));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valida_Peso="+String.valueOf(Valida_Peso));
		sb.append(",Valida_Dimensao="+String.valueOf(Valida_Dimensao));
		sb.append(",Valida_Altura="+String.valueOf(Valida_Altura));
		sb.append(",Valida_Largura="+String.valueOf(Valida_Largura));
		sb.append(",Valida_Comprimento="+String.valueOf(Valida_Comprimento));
		sb.append(",Peso_Cubado="+String.valueOf(Peso_Cubado));
		sb.append(",Peso_Considerado="+String.valueOf(Peso_Considerado));
		sb.append(",Frete="+String.valueOf(Frete));
		sb.append(",vl_custo="+String.valueOf(vl_custo));
		sb.append(",ipi="+String.valueOf(ipi));
		sb.append(",preco="+String.valueOf(preco));
		sb.append(",vl_tabela4="+String.valueOf(vl_tabela4));
		sb.append(",PMA="+String.valueOf(PMA));
		sb.append(",Preco_Final="+String.valueOf(Preco_Final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_4Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_5Process(globalMap);

		row19Struct row19 = new row19Struct();
row18Struct row18 = new row18Struct();
Saida2Struct Saida2 = new Saida2Struct();
row26Struct row26 = new row26Struct();
insert_DWStruct insert_DW = new insert_DWStruct();







	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





String dbschema_tDBOutput_3 = null;
	dbschema_tDBOutput_3 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_3 = null;
if(dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
	tableName_tDBOutput_3 = ("product_price").toLowerCase();
} else {
	tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "\".\"" + ("product_price").toLowerCase();
}


int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;
int rowsToCommitCount_tDBOutput_3=0;
int rejectedCount_tDBOutput_3=0;

boolean whetherReject_tDBOutput_3 = false;

java.sql.Connection conn_tDBOutput_3 = null;
String dbUser_tDBOutput_3 = null;

	conn_tDBOutput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	


   int batchSize_tDBOutput_3 = 10;
   int batchSizeCounter_tDBOutput_3=0;

int count_tDBOutput_3=0;
        java.lang.StringBuilder sb_tDBOutput_3 = new java.lang.StringBuilder();
        sb_tDBOutput_3.append("INSERT INTO \"").append(tableName_tDBOutput_3).append("\" (\"cd_produto\",\"vl_atual\",\"vl_arredondamento\",\"vl_anterior\",\"mktplace\",\"data_execucao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_3 = sb_tDBOutput_3.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(insert_tDBOutput_3);
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tUniqRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_1", false);
		start_Hash.put("tUniqRow_1", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida2");
					}
				
		int tos_count_tUniqRow_1 = 0;
		

	
		class KeyStruct_tUniqRow_1 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String CD_PRODUTO;
					String MKTPLACE;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
								
								result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_1 other = (KeyStruct_tUniqRow_1) obj;
				
									if (this.CD_PRODUTO == null) {
										if (other.CD_PRODUTO != null) 
											return false;
								
									} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
								 
										return false;
								
									if (this.MKTPLACE == null) {
										if (other.MKTPLACE != null) 
											return false;
								
									} else if (!this.MKTPLACE.equals(other.MKTPLACE))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_1 = 0;
int nb_duplicates_tUniqRow_1 = 0;
KeyStruct_tUniqRow_1 finder_tUniqRow_1 = new KeyStruct_tUniqRow_1();
java.util.Set<KeyStruct_tUniqRow_1> keystUniqRow_1 = new java.util.HashSet<KeyStruct_tUniqRow_1>(); 

 



/**
 * [tUniqRow_1 begin ] stop
 */




	
	/**
	 * [tHashOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_9", false);
		start_Hash.put("tHashOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_DW");
					}
				
		int tos_count_tHashOutput_9 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<insert_DWStruct> tHashFile_tHashOutput_9 = null;
		String hashKey_tHashOutput_9 = "tHashFile_integracao_preco_amazom_" + pid + "_tHashOutput_9";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_9)){
			    if(mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9) == null){
	      		    mf_tHashOutput_9.getResourceMap().put(hashKey_tHashOutput_9, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<insert_DWStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }else{
			    	tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }
			}
        int nb_line_tHashOutput_9 = 0;

 



/**
 * [tHashOutput_9 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row25Struct> tHash_Lookup_row25 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row25Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row25Struct>) 
					globalMap.get( "tHash_Lookup_row25" ))
					;					
					
	

row25Struct row25HashKey = new row25Struct();
row25Struct row25Default = new row25Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida2Struct Saida2_tmp = new Saida2Struct();
insert_DWStruct insert_DW_tmp = new insert_DWStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_10", false);
		start_Hash.put("tJavaRow_10", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tJavaRow_10 = 0;
		

int nb_line_tJavaRow_10 = 0;

 



/**
 * [tJavaRow_10 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row22Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row22Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row19.SKU = next_tHashInput_4.SKU;
	row19.Nome_Produto = next_tHashInput_4.Nome_Produto;
	row19.Marca = next_tHashInput_4.Marca;
	row19.Altura = next_tHashInput_4.Altura;
	row19.Largura = next_tHashInput_4.Largura;
	row19.Comprimento = next_tHashInput_4.Comprimento;
	row19.Peso = next_tHashInput_4.Peso;
	row19.Valida_Peso = next_tHashInput_4.Valida_Peso;
	row19.Valida_Dimensao = next_tHashInput_4.Valida_Dimensao;
	row19.Valida_Altura = next_tHashInput_4.Valida_Altura;
	row19.Valida_Largura = next_tHashInput_4.Valida_Largura;
	row19.Valida_Comprimento = next_tHashInput_4.Valida_Comprimento;
	row19.Peso_Cubado = next_tHashInput_4.Peso_Cubado;
	row19.Peso_Considerado = next_tHashInput_4.Peso_Considerado;
	row19.Frete = next_tHashInput_4.Frete;
	row19.vl_custo = next_tHashInput_4.vl_custo;
	row19.ipi = next_tHashInput_4.ipi;
	row19.preco = next_tHashInput_4.preco;
	row19.vl_tabela4 = next_tHashInput_4.vl_tabela4;
	row19.PMA = next_tHashInput_4.PMA;
	row19.Preco_Final = next_tHashInput_4.Preco_Final;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_10 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

    //Code generated according to input schema and output schema
row18.SKU = row19.SKU;
row18.Nome_Produto = row19.Nome_Produto;
row18.Marca = row19.Marca;
row18.Altura = row19.Altura;
row18.Largura = row19.Largura;
row18.Comprimento = row19.Comprimento;
row18.Peso = row19.Peso;
if (row19.Valida_Peso == 1) {
row18.Valida_Peso = "FALSE";
} else{
row18.Valida_Peso = "TRUE";
}
if (row19.Valida_Dimensao == 1) {
row18.Valida_Dimensao = "FALSE";
} else{
row18.Valida_Dimensao = "TRUE";
}
if (row19.Valida_Altura == 1) {
row18.Valida_Altura = "FALSE";
} else{
row18.Valida_Altura = "TRUE";
}
if (row19.Valida_Largura == 1) {
row18.Valida_Largura = "FALSE";
} else{
row18.Valida_Largura = "TRUE";
}
if (row19.Valida_Comprimento == 1) {
row18.Valida_Comprimento = "FALSE";
} else{
row18.Valida_Comprimento = "TRUE";
}
row18.Peso_Cubado = row19.Peso_Cubado;
row18.Peso_Considerado = row19.Peso_Considerado;
row18.Frete = row19.Frete;
row18.vl_custo = row19.vl_custo;
row18.ipi = row19.ipi;
row18.preco = row19.preco;
row18.vl_tabela4 = row19.vl_tabela4;
row18.PMA = row19.PMA;
row18.Preco_Final = row19.Preco_Final;

    nb_line_tJavaRow_10++;   

 


	tos_count_tJavaRow_10++;

/**
 * [tJavaRow_10 main ] stop
 */
	
	/**
	 * [tJavaRow_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
						row25Struct row25 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row25" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow25 = false;
       		  	    	
       		  	    	
 							row25Struct row25ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row25HashKey.CD_PRODUTO = row18.SKU ;
                        		    		

								
		                        	row25HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row25.lookup( row25HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row25.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_5 = true;
	  								
						
									
	
		  								forceLooprow25 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow25 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row25 != null && tHash_Lookup_row25.hasNext()) || forceLooprow25) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row25'
									
                    		  	 
							   
                    		  	 
	       		  	    	row25Struct fromLookup_row25 = null;
							row25 = row25Default;
										 
							
								
								if(!forceLooprow25) { // G 46
								
							
								 
							
								
								fromLookup_row25 = tHash_Lookup_row25.next();

							

							if(fromLookup_row25 != null) {
								row25 = fromLookup_row25;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow25 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

Saida2 = null;
insert_DW = null;

if(!rejectedInnerJoin_tMap_5 ) {

// # Output table : 'Saida2'
Saida2_tmp.CD_PRODUTO = row18.SKU ;
Saida2_tmp.VL_ATUAL = row18.vl_tabela4 ;
Saida2_tmp.VL_ARREDONDAMENTO = row18.Preco_Final ;
Saida2_tmp.VL_ANTERIOR = row25.VL_ANTERIOR ;
Saida2_tmp.MKTPLACE = "MKTPLACE4_AMAZON";
Saida2_tmp.DATA_EXECUCAO = TalendDate.getCurrentDate();
Saida2 = Saida2_tmp;

// # Output table : 'insert_DW'
insert_DW_tmp.CD_PRODUTO = row18.SKU ;
insert_DW_tmp.DT_ULTI_ATUALIZACAO = TalendDate.getCurrentDate();
insert_DW_tmp.VL_ATUAL = row18.vl_tabela4 ;
insert_DW_tmp.VL_ANTERIOR = row25.VL_ANTERIOR;
insert_DW_tmp.MKTPLACE = "MKTPLACE4_AMAZON";
insert_DW_tmp.DC_PRODUTO = null;
insert_DW_tmp.VL_CUSTO = null;
insert_DW_tmp.CD_OPERADOR = null;
insert_DW_tmp.NM_OPERADOR = null;
insert_DW_tmp.CD_MARCA = null;
insert_DW_tmp.DC_MARCA = null;
insert_DW_tmp.CD_FORNECEDOR = null;
insert_DW_tmp.CD_COMPRADOR = null;
insert_DW_tmp.NM_COMPRADOR = null;
insert_DW_tmp.VL_ARREDONDAMENTO = row18.Preco_Final ;
insert_DW_tmp.DATA_EXECUCAO = TalendDate.getCurrentDate();
insert_DW_tmp.DATA_ENVIO = null;
insert_DW_tmp.STATUS_ENVIO = null;
insert_DW = insert_DW_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "Saida2"
if(Saida2 != null) { 



	
	/**
	 * [tUniqRow_1 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida2"
						
						);
					}
					
row26 = null;			
if(Saida2.CD_PRODUTO == null){
	finder_tUniqRow_1.CD_PRODUTO = null;
}else{
	finder_tUniqRow_1.CD_PRODUTO = Saida2.CD_PRODUTO.toLowerCase();
}
if(Saida2.MKTPLACE == null){
	finder_tUniqRow_1.MKTPLACE = null;
}else{
	finder_tUniqRow_1.MKTPLACE = Saida2.MKTPLACE.toLowerCase();
}	
finder_tUniqRow_1.hashCodeDirty = true;
if (!keystUniqRow_1.contains(finder_tUniqRow_1)) {
		KeyStruct_tUniqRow_1 new_tUniqRow_1 = new KeyStruct_tUniqRow_1();

		
if(Saida2.CD_PRODUTO == null){
	new_tUniqRow_1.CD_PRODUTO = null;
}else{
	new_tUniqRow_1.CD_PRODUTO = Saida2.CD_PRODUTO.toLowerCase();
}
if(Saida2.MKTPLACE == null){
	new_tUniqRow_1.MKTPLACE = null;
}else{
	new_tUniqRow_1.MKTPLACE = Saida2.MKTPLACE.toLowerCase();
}
		
		keystUniqRow_1.add(new_tUniqRow_1);if(row26 == null){ 
	
	row26 = new row26Struct();
}row26.CD_PRODUTO = Saida2.CD_PRODUTO;			row26.VL_ATUAL = Saida2.VL_ATUAL;			row26.VL_ARREDONDAMENTO = Saida2.VL_ARREDONDAMENTO;			row26.VL_ANTERIOR = Saida2.VL_ANTERIOR;			row26.MKTPLACE = Saida2.MKTPLACE;			row26.DATA_EXECUCAO = Saida2.DATA_EXECUCAO;					
		nb_uniques_tUniqRow_1++;
	} else {
	  nb_duplicates_tUniqRow_1++;
	}

 


	tos_count_tUniqRow_1++;

/**
 * [tUniqRow_1 main ] stop
 */
	
	/**
	 * [tUniqRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_begin ] stop
 */
// Start of branch "row26"
if(row26 != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(row26.CD_PRODUTO == null) {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(1, row26.CD_PRODUTO);
}

                    pstmt_tDBOutput_3.setBigDecimal(2, row26.VL_ATUAL);

                    pstmt_tDBOutput_3.setBigDecimal(3, row26.VL_ARREDONDAMENTO);

                    pstmt_tDBOutput_3.setBigDecimal(4, row26.VL_ANTERIOR);

                    if(row26.MKTPLACE == null) {
pstmt_tDBOutput_3.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(5, row26.MKTPLACE);
}

                    if(row26.DATA_EXECUCAO != null) {
pstmt_tDBOutput_3.setTimestamp(6, new java.sql.Timestamp(row26.DATA_EXECUCAO.getTime()));
} else {
pstmt_tDBOutput_3.setNull(6, java.sql.Types.TIMESTAMP);
}

			
    		pstmt_tDBOutput_3.addBatch();
    		nb_line_tDBOutput_3++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_3++;
    		  
    			if ((batchSize_tDBOutput_3 > 0) && (batchSize_tDBOutput_3 <= batchSizeCounter_tDBOutput_3)) {
                try {
						int countSum_tDBOutput_3 = 0;
						    
						for(int countEach_tDBOutput_3: pstmt_tDBOutput_3.executeBatch()) {
							countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
						}
				    	rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
				    	
				    		insertedCount_tDBOutput_3 += countSum_tDBOutput_3;
				    	
            	    	batchSizeCounter_tDBOutput_3 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_3){
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e_tDBOutput_3.getMessage());
				    	java.sql.SQLException ne_tDBOutput_3 = e_tDBOutput_3.getNextException(),sqle_tDBOutput_3=null;
				    	String errormessage_tDBOutput_3;
						if (ne_tDBOutput_3 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_3 = new java.sql.SQLException(e_tDBOutput_3.getMessage() + "\ncaused by: " + ne_tDBOutput_3.getMessage(), ne_tDBOutput_3.getSQLState(), ne_tDBOutput_3.getErrorCode(), ne_tDBOutput_3);
							errormessage_tDBOutput_3 = sqle_tDBOutput_3.getMessage();
						}else{
							errormessage_tDBOutput_3 = e_tDBOutput_3.getMessage();
						}
				    	
				    	int countSum_tDBOutput_3 = 0;
						for(int countEach_tDBOutput_3: e_tDBOutput_3.getUpdateCounts()) {
							countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
						}
						rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
						
				    		insertedCount_tDBOutput_3 += countSum_tDBOutput_3;
				    	
				    	System.err.println(errormessage_tDBOutput_3);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "row26"




	
	/**
	 * [tUniqRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_end ] stop
 */

} // End of branch "Saida2"




// Start of branch "insert_DW"
if(insert_DW != null) { 



	
	/**
	 * [tHashOutput_9 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_DW"
						
						);
					}
					



    
		insert_DWStruct oneRow_tHashOutput_9 = new insert_DWStruct();
				
					oneRow_tHashOutput_9.CD_PRODUTO = insert_DW.CD_PRODUTO;
					oneRow_tHashOutput_9.DT_ULTI_ATUALIZACAO = insert_DW.DT_ULTI_ATUALIZACAO;
					oneRow_tHashOutput_9.VL_ATUAL = insert_DW.VL_ATUAL;
					oneRow_tHashOutput_9.VL_ANTERIOR = insert_DW.VL_ANTERIOR;
					oneRow_tHashOutput_9.MKTPLACE = insert_DW.MKTPLACE;
					oneRow_tHashOutput_9.DC_PRODUTO = insert_DW.DC_PRODUTO;
					oneRow_tHashOutput_9.VL_CUSTO = insert_DW.VL_CUSTO;
					oneRow_tHashOutput_9.CD_OPERADOR = insert_DW.CD_OPERADOR;
					oneRow_tHashOutput_9.NM_OPERADOR = insert_DW.NM_OPERADOR;
					oneRow_tHashOutput_9.CD_MARCA = insert_DW.CD_MARCA;
					oneRow_tHashOutput_9.DC_MARCA = insert_DW.DC_MARCA;
					oneRow_tHashOutput_9.CD_FORNECEDOR = insert_DW.CD_FORNECEDOR;
					oneRow_tHashOutput_9.CD_COMPRADOR = insert_DW.CD_COMPRADOR;
					oneRow_tHashOutput_9.NM_COMPRADOR = insert_DW.NM_COMPRADOR;
					oneRow_tHashOutput_9.VL_ARREDONDAMENTO = insert_DW.VL_ARREDONDAMENTO;
					oneRow_tHashOutput_9.DATA_EXECUCAO = insert_DW.DATA_EXECUCAO;
					oneRow_tHashOutput_9.DATA_ENVIO = insert_DW.DATA_ENVIO;
					oneRow_tHashOutput_9.STATUS_ENVIO = insert_DW.STATUS_ENVIO;
		
        tHashFile_tHashOutput_9.put(oneRow_tHashOutput_9);
        nb_line_tHashOutput_9 ++;

 


	tos_count_tHashOutput_9++;

/**
 * [tHashOutput_9 main ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_end ] stop
 */

} // End of branch "insert_DW"



	
		} // close loop of lookup 'row25' // G_TM_M_043
	
	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tJavaRow_10 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

globalMap.put("tJavaRow_10_NB_LINE",nb_line_tJavaRow_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tJavaRow_10", true);
end_Hash.put("tJavaRow_10", System.currentTimeMillis());




/**
 * [tJavaRow_10 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row25 != null) {
						tHash_Lookup_row25.endGet();
					}
					globalMap.remove( "tHash_Lookup_row25" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tUniqRow_1 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

globalMap.put("tUniqRow_1_NB_UNIQUES",nb_uniques_tUniqRow_1);
globalMap.put("tUniqRow_1_NB_DUPLICATES",nb_duplicates_tUniqRow_1);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida2");
			  	}
			  	
 

ok_Hash.put("tUniqRow_1", true);
end_Hash.put("tUniqRow_1", System.currentTimeMillis());




/**
 * [tUniqRow_1 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



	    try {
				int countSum_tDBOutput_3 = 0;
				if (pstmt_tDBOutput_3 != null && batchSizeCounter_tDBOutput_3 > 0) {
						
					for(int countEach_tDBOutput_3: pstmt_tDBOutput_3.executeBatch()) {
						countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
					}
					rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
						
				}
		    	
		    		insertedCount_tDBOutput_3 += countSum_tDBOutput_3;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_3){
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e_tDBOutput_3.getMessage());
	    	java.sql.SQLException ne_tDBOutput_3 = e_tDBOutput_3.getNextException(),sqle_tDBOutput_3=null;
	    	String errormessage_tDBOutput_3;
			if (ne_tDBOutput_3 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_3 = new java.sql.SQLException(e_tDBOutput_3.getMessage() + "\ncaused by: " + ne_tDBOutput_3.getMessage(), ne_tDBOutput_3.getSQLState(), ne_tDBOutput_3.getErrorCode(), ne_tDBOutput_3);
				errormessage_tDBOutput_3 = sqle_tDBOutput_3.getMessage();
			}else{
				errormessage_tDBOutput_3 = e_tDBOutput_3.getMessage();
			}
	    	
	    	int countSum_tDBOutput_3 = 0;
			for(int countEach_tDBOutput_3: e_tDBOutput_3.getUpdateCounts()) {
				countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
			}
			rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;
			
	    		insertedCount_tDBOutput_3 += countSum_tDBOutput_3;
	    	
	    	System.err.println(errormessage_tDBOutput_3);
	    	
		}
	    
        if(pstmt_tDBOutput_3 != null) {
        		
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());




/**
 * [tDBOutput_3 end ] stop
 */







	
	/**
	 * [tHashOutput_9 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
globalMap.put("tHashOutput_9_NB_LINE", nb_line_tHashOutput_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_DW");
			  	}
			  	
 

ok_Hash.put("tHashOutput_9", true);
end_Hash.put("tHashOutput_9", System.currentTimeMillis());




/**
 * [tHashOutput_9 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tHashInput_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row25"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_10 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tUniqRow_1 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */







	
	/**
	 * [tHashOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_ULTI_ATUALIZACAO;

				public java.util.Date getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return true;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return true;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 50;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public java.util.Date DATA_ENVIO;

				public java.util.Date getDATA_ENVIO () {
					return this.DATA_ENVIO;
				}

				public Boolean DATA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean DATA_ENVIOIsKey(){
				    return false;
				}
				public Integer DATA_ENVIOLength(){
				    return null;
				}
				public Integer DATA_ENVIOPrecision(){
				    return null;
				}
				public String DATA_ENVIODefault(){
				
					return null;
				
				}
				public String DATA_ENVIOComment(){
				
				    return "";
				
				}
				public String DATA_ENVIOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_ENVIOOriginalDbColumnName(){
				
					return "DATA_ENVIO";
				
				}

				
			    public String STATUS_ENVIO;

				public String getSTATUS_ENVIO () {
					return this.STATUS_ENVIO;
				}

				public Boolean STATUS_ENVIOIsNullable(){
				    return true;
				}
				public Boolean STATUS_ENVIOIsKey(){
				    return false;
				}
				public Integer STATUS_ENVIOLength(){
				    return null;
				}
				public Integer STATUS_ENVIOPrecision(){
				    return null;
				}
				public String STATUS_ENVIODefault(){
				
					return null;
				
				}
				public String STATUS_ENVIOComment(){
				
				    return "";
				
				}
				public String STATUS_ENVIOPattern(){
				
					return "";
				
				}
				public String STATUS_ENVIOOriginalDbColumnName(){
				
					return "STATUS_ENVIO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.VL_ATUAL == null) ? 0 : this.VL_ATUAL.hashCode());
					
						result = prime * result + ((this.VL_ANTERIOR == null) ? 0 : this.VL_ANTERIOR.hashCode());
					
						result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row39Struct other = (row39Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.VL_ATUAL == null) {
							if (other.VL_ATUAL != null)
								return false;
						
						} else if (!this.VL_ATUAL.equals(other.VL_ATUAL))
						
							return false;
					
						if (this.VL_ANTERIOR == null) {
							if (other.VL_ANTERIOR != null)
								return false;
						
						} else if (!this.VL_ANTERIOR.equals(other.VL_ANTERIOR))
						
							return false;
					
						if (this.MKTPLACE == null) {
							if (other.MKTPLACE != null)
								return false;
						
						} else if (!this.MKTPLACE.equals(other.MKTPLACE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row39Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_ULTI_ATUALIZACAO = this.DT_ULTI_ATUALIZACAO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            other.DC_PRODUTO = this.DC_PRODUTO;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.CD_OPERADOR = this.CD_OPERADOR;
	            other.NM_OPERADOR = this.NM_OPERADOR;
	            other.CD_MARCA = this.CD_MARCA;
	            other.DC_MARCA = this.DC_MARCA;
	            other.CD_FORNECEDOR = this.CD_FORNECEDOR;
	            other.CD_COMPRADOR = this.CD_COMPRADOR;
	            other.NM_COMPRADOR = this.NM_COMPRADOR;
	            other.VL_ARREDONDAMENTO = this.VL_ARREDONDAMENTO;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            other.DATA_ENVIO = this.DATA_ENVIO;
	            other.STATUS_ENVIO = this.STATUS_ENVIO;
	            
	}

	public void copyKeysDataTo(row39Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.VL_ATUAL = this.VL_ATUAL;
	            	other.VL_ANTERIOR = this.VL_ANTERIOR;
	            	other.MKTPLACE = this.MKTPLACE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_ULTI_ATUALIZACAO="+String.valueOf(DT_ULTI_ATUALIZACAO));
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",DATA_ENVIO="+String.valueOf(DATA_ENVIO));
		sb.append(",STATUS_ENVIO="+STATUS_ENVIO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ATUAL, other.VL_ATUAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ANTERIOR, other.VL_ANTERIOR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MKTPLACE, other.MKTPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert1Struct implements routines.system.IPersistableRow<insert1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_ULTI_ATUALIZACAO;

				public java.util.Date getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				
			    public String VL_ATUAL;

				public String getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return true;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public String VL_ANTERIOR;

				public String getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return true;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 50;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public String VL_ARREDONDAMENTO;

				public String getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public java.util.Date DATA_ENVIO;

				public java.util.Date getDATA_ENVIO () {
					return this.DATA_ENVIO;
				}

				public Boolean DATA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean DATA_ENVIOIsKey(){
				    return false;
				}
				public Integer DATA_ENVIOLength(){
				    return null;
				}
				public Integer DATA_ENVIOPrecision(){
				    return null;
				}
				public String DATA_ENVIODefault(){
				
					return null;
				
				}
				public String DATA_ENVIOComment(){
				
				    return "";
				
				}
				public String DATA_ENVIOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_ENVIOOriginalDbColumnName(){
				
					return "DATA_ENVIO";
				
				}

				
			    public String STATUS_ENVIO;

				public String getSTATUS_ENVIO () {
					return this.STATUS_ENVIO;
				}

				public Boolean STATUS_ENVIOIsNullable(){
				    return true;
				}
				public Boolean STATUS_ENVIOIsKey(){
				    return false;
				}
				public Integer STATUS_ENVIOLength(){
				    return null;
				}
				public Integer STATUS_ENVIOPrecision(){
				    return null;
				}
				public String STATUS_ENVIODefault(){
				
					return null;
				
				}
				public String STATUS_ENVIOComment(){
				
				    return "";
				
				}
				public String STATUS_ENVIOPattern(){
				
					return "";
				
				}
				public String STATUS_ENVIOOriginalDbColumnName(){
				
					return "STATUS_ENVIO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.VL_ATUAL == null) ? 0 : this.VL_ATUAL.hashCode());
					
						result = prime * result + ((this.VL_ANTERIOR == null) ? 0 : this.VL_ANTERIOR.hashCode());
					
						result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final insert1Struct other = (insert1Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.VL_ATUAL == null) {
							if (other.VL_ATUAL != null)
								return false;
						
						} else if (!this.VL_ATUAL.equals(other.VL_ATUAL))
						
							return false;
					
						if (this.VL_ANTERIOR == null) {
							if (other.VL_ANTERIOR != null)
								return false;
						
						} else if (!this.VL_ANTERIOR.equals(other.VL_ANTERIOR))
						
							return false;
					
						if (this.MKTPLACE == null) {
							if (other.MKTPLACE != null)
								return false;
						
						} else if (!this.MKTPLACE.equals(other.MKTPLACE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(insert1Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_ULTI_ATUALIZACAO = this.DT_ULTI_ATUALIZACAO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            other.DC_PRODUTO = this.DC_PRODUTO;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.CD_OPERADOR = this.CD_OPERADOR;
	            other.NM_OPERADOR = this.NM_OPERADOR;
	            other.CD_MARCA = this.CD_MARCA;
	            other.DC_MARCA = this.DC_MARCA;
	            other.CD_FORNECEDOR = this.CD_FORNECEDOR;
	            other.CD_COMPRADOR = this.CD_COMPRADOR;
	            other.NM_COMPRADOR = this.NM_COMPRADOR;
	            other.VL_ARREDONDAMENTO = this.VL_ARREDONDAMENTO;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            other.DATA_ENVIO = this.DATA_ENVIO;
	            other.STATUS_ENVIO = this.STATUS_ENVIO;
	            
	}

	public void copyKeysDataTo(insert1Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.VL_ATUAL = this.VL_ATUAL;
	            	other.VL_ANTERIOR = this.VL_ANTERIOR;
	            	other.MKTPLACE = this.MKTPLACE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
					this.VL_ATUAL = readString(dis);
					
					this.VL_ANTERIOR = readString(dis);
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
					this.VL_ARREDONDAMENTO = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
					this.VL_ATUAL = readString(dis);
					
					this.VL_ANTERIOR = readString(dis);
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
					this.VL_ARREDONDAMENTO = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// String
				
						writeString(this.VL_ATUAL,dos);
					
					// String
				
						writeString(this.VL_ANTERIOR,dos);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// String
				
						writeString(this.VL_ARREDONDAMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// String
				
						writeString(this.VL_ATUAL,dos);
					
					// String
				
						writeString(this.VL_ANTERIOR,dos);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// String
				
						writeString(this.VL_ARREDONDAMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_ULTI_ATUALIZACAO="+String.valueOf(DT_ULTI_ATUALIZACAO));
		sb.append(",VL_ATUAL="+VL_ATUAL);
		sb.append(",VL_ANTERIOR="+VL_ANTERIOR);
		sb.append(",MKTPLACE="+MKTPLACE);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",VL_ARREDONDAMENTO="+VL_ARREDONDAMENTO);
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",DATA_ENVIO="+String.valueOf(DATA_ENVIO));
		sb.append(",STATUS_ENVIO="+STATUS_ENVIO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ATUAL, other.VL_ATUAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ANTERIOR, other.VL_ANTERIOR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MKTPLACE, other.MKTPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insertStruct implements routines.system.IPersistableRow<insertStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_ULTI_ATUALIZACAO;

				public java.util.Date getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				
			    public String VL_ATUAL;

				public String getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return true;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public String VL_ANTERIOR;

				public String getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return true;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 50;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public String VL_ARREDONDAMENTO;

				public String getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public java.util.Date DATA_ENVIO;

				public java.util.Date getDATA_ENVIO () {
					return this.DATA_ENVIO;
				}

				public Boolean DATA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean DATA_ENVIOIsKey(){
				    return false;
				}
				public Integer DATA_ENVIOLength(){
				    return null;
				}
				public Integer DATA_ENVIOPrecision(){
				    return null;
				}
				public String DATA_ENVIODefault(){
				
					return null;
				
				}
				public String DATA_ENVIOComment(){
				
				    return "";
				
				}
				public String DATA_ENVIOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_ENVIOOriginalDbColumnName(){
				
					return "DATA_ENVIO";
				
				}

				
			    public String STATUS_ENVIO;

				public String getSTATUS_ENVIO () {
					return this.STATUS_ENVIO;
				}

				public Boolean STATUS_ENVIOIsNullable(){
				    return true;
				}
				public Boolean STATUS_ENVIOIsKey(){
				    return false;
				}
				public Integer STATUS_ENVIOLength(){
				    return null;
				}
				public Integer STATUS_ENVIOPrecision(){
				    return null;
				}
				public String STATUS_ENVIODefault(){
				
					return null;
				
				}
				public String STATUS_ENVIOComment(){
				
				    return "";
				
				}
				public String STATUS_ENVIOPattern(){
				
					return "";
				
				}
				public String STATUS_ENVIOOriginalDbColumnName(){
				
					return "STATUS_ENVIO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
					this.VL_ATUAL = readString(dis);
					
					this.VL_ANTERIOR = readString(dis);
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
					this.VL_ARREDONDAMENTO = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
					this.VL_ATUAL = readString(dis);
					
					this.VL_ANTERIOR = readString(dis);
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
					this.VL_ARREDONDAMENTO = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// String
				
						writeString(this.VL_ATUAL,dos);
					
					// String
				
						writeString(this.VL_ANTERIOR,dos);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// String
				
						writeString(this.VL_ARREDONDAMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// String
				
						writeString(this.VL_ATUAL,dos);
					
					// String
				
						writeString(this.VL_ANTERIOR,dos);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// String
				
						writeString(this.VL_ARREDONDAMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_ULTI_ATUALIZACAO="+String.valueOf(DT_ULTI_ATUALIZACAO));
		sb.append(",VL_ATUAL="+VL_ATUAL);
		sb.append(",VL_ANTERIOR="+VL_ANTERIOR);
		sb.append(",MKTPLACE="+MKTPLACE);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",VL_ARREDONDAMENTO="+VL_ARREDONDAMENTO);
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",DATA_ENVIO="+String.valueOf(DATA_ENVIO));
		sb.append(",STATUS_ENVIO="+STATUS_ENVIO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insertStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_ULTI_ATUALIZACAO;

				public java.util.Date getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				
			    public String VL_ATUAL;

				public String getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return true;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public String VL_ANTERIOR;

				public String getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return true;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 50;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public String VL_ARREDONDAMENTO;

				public String getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public java.util.Date DATA_ENVIO;

				public java.util.Date getDATA_ENVIO () {
					return this.DATA_ENVIO;
				}

				public Boolean DATA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean DATA_ENVIOIsKey(){
				    return false;
				}
				public Integer DATA_ENVIOLength(){
				    return null;
				}
				public Integer DATA_ENVIOPrecision(){
				    return null;
				}
				public String DATA_ENVIODefault(){
				
					return null;
				
				}
				public String DATA_ENVIOComment(){
				
				    return "";
				
				}
				public String DATA_ENVIOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_ENVIOOriginalDbColumnName(){
				
					return "DATA_ENVIO";
				
				}

				
			    public String STATUS_ENVIO;

				public String getSTATUS_ENVIO () {
					return this.STATUS_ENVIO;
				}

				public Boolean STATUS_ENVIOIsNullable(){
				    return true;
				}
				public Boolean STATUS_ENVIOIsKey(){
				    return false;
				}
				public Integer STATUS_ENVIOLength(){
				    return null;
				}
				public Integer STATUS_ENVIOPrecision(){
				    return null;
				}
				public String STATUS_ENVIODefault(){
				
					return null;
				
				}
				public String STATUS_ENVIOComment(){
				
				    return "";
				
				}
				public String STATUS_ENVIOPattern(){
				
					return "";
				
				}
				public String STATUS_ENVIOOriginalDbColumnName(){
				
					return "STATUS_ENVIO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
					this.VL_ATUAL = readString(dis);
					
					this.VL_ANTERIOR = readString(dis);
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
					this.VL_ARREDONDAMENTO = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
					this.VL_ATUAL = readString(dis);
					
					this.VL_ANTERIOR = readString(dis);
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
					this.VL_ARREDONDAMENTO = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// String
				
						writeString(this.VL_ATUAL,dos);
					
					// String
				
						writeString(this.VL_ANTERIOR,dos);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// String
				
						writeString(this.VL_ARREDONDAMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// String
				
						writeString(this.VL_ATUAL,dos);
					
					// String
				
						writeString(this.VL_ANTERIOR,dos);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// String
				
						writeString(this.VL_ARREDONDAMENTO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_ULTI_ATUALIZACAO="+String.valueOf(DT_ULTI_ATUALIZACAO));
		sb.append(",VL_ATUAL="+VL_ATUAL);
		sb.append(",VL_ANTERIOR="+VL_ANTERIOR);
		sb.append(",MKTPLACE="+MKTPLACE);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",VL_ARREDONDAMENTO="+VL_ARREDONDAMENTO);
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",DATA_ENVIO="+String.valueOf(DATA_ENVIO));
		sb.append(",STATUS_ENVIO="+STATUS_ENVIO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_ULTI_ATUALIZACAO;

				public java.util.Date getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return true;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return true;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 50;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public java.util.Date DATA_ENVIO;

				public java.util.Date getDATA_ENVIO () {
					return this.DATA_ENVIO;
				}

				public Boolean DATA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean DATA_ENVIOIsKey(){
				    return false;
				}
				public Integer DATA_ENVIOLength(){
				    return null;
				}
				public Integer DATA_ENVIOPrecision(){
				    return null;
				}
				public String DATA_ENVIODefault(){
				
					return null;
				
				}
				public String DATA_ENVIOComment(){
				
				    return "";
				
				}
				public String DATA_ENVIOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_ENVIOOriginalDbColumnName(){
				
					return "DATA_ENVIO";
				
				}

				
			    public String STATUS_ENVIO;

				public String getSTATUS_ENVIO () {
					return this.STATUS_ENVIO;
				}

				public Boolean STATUS_ENVIOIsNullable(){
				    return true;
				}
				public Boolean STATUS_ENVIOIsKey(){
				    return false;
				}
				public Integer STATUS_ENVIOLength(){
				    return null;
				}
				public Integer STATUS_ENVIOPrecision(){
				    return null;
				}
				public String STATUS_ENVIODefault(){
				
					return null;
				
				}
				public String STATUS_ENVIOComment(){
				
				    return "";
				
				}
				public String STATUS_ENVIOPattern(){
				
					return "";
				
				}
				public String STATUS_ENVIOOriginalDbColumnName(){
				
					return "STATUS_ENVIO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.VL_ATUAL == null) ? 0 : this.VL_ATUAL.hashCode());
					
						result = prime * result + ((this.VL_ANTERIOR == null) ? 0 : this.VL_ANTERIOR.hashCode());
					
						result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row30Struct other = (row30Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.VL_ATUAL == null) {
							if (other.VL_ATUAL != null)
								return false;
						
						} else if (!this.VL_ATUAL.equals(other.VL_ATUAL))
						
							return false;
					
						if (this.VL_ANTERIOR == null) {
							if (other.VL_ANTERIOR != null)
								return false;
						
						} else if (!this.VL_ANTERIOR.equals(other.VL_ANTERIOR))
						
							return false;
					
						if (this.MKTPLACE == null) {
							if (other.MKTPLACE != null)
								return false;
						
						} else if (!this.MKTPLACE.equals(other.MKTPLACE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row30Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_ULTI_ATUALIZACAO = this.DT_ULTI_ATUALIZACAO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            other.DC_PRODUTO = this.DC_PRODUTO;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.CD_OPERADOR = this.CD_OPERADOR;
	            other.NM_OPERADOR = this.NM_OPERADOR;
	            other.CD_MARCA = this.CD_MARCA;
	            other.DC_MARCA = this.DC_MARCA;
	            other.CD_FORNECEDOR = this.CD_FORNECEDOR;
	            other.CD_COMPRADOR = this.CD_COMPRADOR;
	            other.NM_COMPRADOR = this.NM_COMPRADOR;
	            other.VL_ARREDONDAMENTO = this.VL_ARREDONDAMENTO;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            other.DATA_ENVIO = this.DATA_ENVIO;
	            other.STATUS_ENVIO = this.STATUS_ENVIO;
	            
	}

	public void copyKeysDataTo(row30Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.VL_ATUAL = this.VL_ATUAL;
	            	other.VL_ANTERIOR = this.VL_ANTERIOR;
	            	other.MKTPLACE = this.MKTPLACE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_ULTI_ATUALIZACAO="+String.valueOf(DT_ULTI_ATUALIZACAO));
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",DATA_ENVIO="+String.valueOf(DATA_ENVIO));
		sb.append(",STATUS_ENVIO="+STATUS_ENVIO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ATUAL, other.VL_ATUAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ANTERIOR, other.VL_ANTERIOR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MKTPLACE, other.MKTPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row33Struct implements routines.system.IPersistableRow<row33Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_ULTI_ATUALIZACAO;

				public java.util.Date getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return true;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return true;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 50;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public java.util.Date DATA_ENVIO;

				public java.util.Date getDATA_ENVIO () {
					return this.DATA_ENVIO;
				}

				public Boolean DATA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean DATA_ENVIOIsKey(){
				    return false;
				}
				public Integer DATA_ENVIOLength(){
				    return null;
				}
				public Integer DATA_ENVIOPrecision(){
				    return null;
				}
				public String DATA_ENVIODefault(){
				
					return null;
				
				}
				public String DATA_ENVIOComment(){
				
				    return "";
				
				}
				public String DATA_ENVIOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_ENVIOOriginalDbColumnName(){
				
					return "DATA_ENVIO";
				
				}

				
			    public String STATUS_ENVIO;

				public String getSTATUS_ENVIO () {
					return this.STATUS_ENVIO;
				}

				public Boolean STATUS_ENVIOIsNullable(){
				    return true;
				}
				public Boolean STATUS_ENVIOIsKey(){
				    return false;
				}
				public Integer STATUS_ENVIOLength(){
				    return null;
				}
				public Integer STATUS_ENVIOPrecision(){
				    return null;
				}
				public String STATUS_ENVIODefault(){
				
					return null;
				
				}
				public String STATUS_ENVIOComment(){
				
				    return "";
				
				}
				public String STATUS_ENVIOPattern(){
				
					return "";
				
				}
				public String STATUS_ENVIOOriginalDbColumnName(){
				
					return "STATUS_ENVIO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.VL_ATUAL == null) ? 0 : this.VL_ATUAL.hashCode());
					
						result = prime * result + ((this.VL_ANTERIOR == null) ? 0 : this.VL_ANTERIOR.hashCode());
					
						result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row33Struct other = (row33Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.VL_ATUAL == null) {
							if (other.VL_ATUAL != null)
								return false;
						
						} else if (!this.VL_ATUAL.equals(other.VL_ATUAL))
						
							return false;
					
						if (this.VL_ANTERIOR == null) {
							if (other.VL_ANTERIOR != null)
								return false;
						
						} else if (!this.VL_ANTERIOR.equals(other.VL_ANTERIOR))
						
							return false;
					
						if (this.MKTPLACE == null) {
							if (other.MKTPLACE != null)
								return false;
						
						} else if (!this.MKTPLACE.equals(other.MKTPLACE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row33Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_ULTI_ATUALIZACAO = this.DT_ULTI_ATUALIZACAO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            other.DC_PRODUTO = this.DC_PRODUTO;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.CD_OPERADOR = this.CD_OPERADOR;
	            other.NM_OPERADOR = this.NM_OPERADOR;
	            other.CD_MARCA = this.CD_MARCA;
	            other.DC_MARCA = this.DC_MARCA;
	            other.CD_FORNECEDOR = this.CD_FORNECEDOR;
	            other.CD_COMPRADOR = this.CD_COMPRADOR;
	            other.NM_COMPRADOR = this.NM_COMPRADOR;
	            other.VL_ARREDONDAMENTO = this.VL_ARREDONDAMENTO;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            other.DATA_ENVIO = this.DATA_ENVIO;
	            other.STATUS_ENVIO = this.STATUS_ENVIO;
	            
	}

	public void copyKeysDataTo(row33Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.VL_ATUAL = this.VL_ATUAL;
	            	other.VL_ANTERIOR = this.VL_ANTERIOR;
	            	other.MKTPLACE = this.MKTPLACE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_ULTI_ATUALIZACAO="+String.valueOf(DT_ULTI_ATUALIZACAO));
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",DATA_ENVIO="+String.valueOf(DATA_ENVIO));
		sb.append(",STATUS_ENVIO="+STATUS_ENVIO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ATUAL, other.VL_ATUAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ANTERIOR, other.VL_ANTERIOR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MKTPLACE, other.MKTPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_6Struct implements routines.system.IPersistableRow<after_tHashInput_6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public java.util.Date DT_ULTI_ATUALIZACAO;

				public java.util.Date getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return true;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return true;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 50;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 2;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public java.util.Date DATA_ENVIO;

				public java.util.Date getDATA_ENVIO () {
					return this.DATA_ENVIO;
				}

				public Boolean DATA_ENVIOIsNullable(){
				    return true;
				}
				public Boolean DATA_ENVIOIsKey(){
				    return false;
				}
				public Integer DATA_ENVIOLength(){
				    return null;
				}
				public Integer DATA_ENVIOPrecision(){
				    return null;
				}
				public String DATA_ENVIODefault(){
				
					return null;
				
				}
				public String DATA_ENVIOComment(){
				
				    return "";
				
				}
				public String DATA_ENVIOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_ENVIOOriginalDbColumnName(){
				
					return "DATA_ENVIO";
				
				}

				
			    public String STATUS_ENVIO;

				public String getSTATUS_ENVIO () {
					return this.STATUS_ENVIO;
				}

				public Boolean STATUS_ENVIOIsNullable(){
				    return true;
				}
				public Boolean STATUS_ENVIOIsKey(){
				    return false;
				}
				public Integer STATUS_ENVIOLength(){
				    return null;
				}
				public Integer STATUS_ENVIOPrecision(){
				    return null;
				}
				public String STATUS_ENVIODefault(){
				
					return null;
				
				}
				public String STATUS_ENVIOComment(){
				
				    return "";
				
				}
				public String STATUS_ENVIOPattern(){
				
					return "";
				
				}
				public String STATUS_ENVIOOriginalDbColumnName(){
				
					return "STATUS_ENVIO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.VL_ATUAL == null) ? 0 : this.VL_ATUAL.hashCode());
					
						result = prime * result + ((this.VL_ANTERIOR == null) ? 0 : this.VL_ANTERIOR.hashCode());
					
						result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tHashInput_6Struct other = (after_tHashInput_6Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.VL_ATUAL == null) {
							if (other.VL_ATUAL != null)
								return false;
						
						} else if (!this.VL_ATUAL.equals(other.VL_ATUAL))
						
							return false;
					
						if (this.VL_ANTERIOR == null) {
							if (other.VL_ANTERIOR != null)
								return false;
						
						} else if (!this.VL_ANTERIOR.equals(other.VL_ANTERIOR))
						
							return false;
					
						if (this.MKTPLACE == null) {
							if (other.MKTPLACE != null)
								return false;
						
						} else if (!this.MKTPLACE.equals(other.MKTPLACE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tHashInput_6Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DT_ULTI_ATUALIZACAO = this.DT_ULTI_ATUALIZACAO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            other.DC_PRODUTO = this.DC_PRODUTO;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.CD_OPERADOR = this.CD_OPERADOR;
	            other.NM_OPERADOR = this.NM_OPERADOR;
	            other.CD_MARCA = this.CD_MARCA;
	            other.DC_MARCA = this.DC_MARCA;
	            other.CD_FORNECEDOR = this.CD_FORNECEDOR;
	            other.CD_COMPRADOR = this.CD_COMPRADOR;
	            other.NM_COMPRADOR = this.NM_COMPRADOR;
	            other.VL_ARREDONDAMENTO = this.VL_ARREDONDAMENTO;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            other.DATA_ENVIO = this.DATA_ENVIO;
	            other.STATUS_ENVIO = this.STATUS_ENVIO;
	            
	}

	public void copyKeysDataTo(after_tHashInput_6Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.VL_ATUAL = this.VL_ATUAL;
	            	other.VL_ANTERIOR = this.VL_ANTERIOR;
	            	other.MKTPLACE = this.MKTPLACE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.DATA_ENVIO = readDate(dis);
					
					this.STATUS_ENVIO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_ENVIO,dos);
					
					// String
				
						writeString(this.STATUS_ENVIO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DT_ULTI_ATUALIZACAO="+String.valueOf(DT_ULTI_ATUALIZACAO));
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",DATA_ENVIO="+String.valueOf(DATA_ENVIO));
		sb.append(",STATUS_ENVIO="+STATUS_ENVIO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_6Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ATUAL, other.VL_ATUAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ANTERIOR, other.VL_ANTERIOR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MKTPLACE, other.MKTPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_7Process(globalMap);
		tHashInput_8Process(globalMap);

		row33Struct row33 = new row33Struct();
row30Struct row30 = new row30Struct();
row40Struct row40 = new row40Struct();
insertStruct insert = new insertStruct();
insert1Struct insert1 = new insert1Struct();
row39Struct row39 = new row39Struct();









	
	/**
	 * [tDBOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_4", false);
		start_Hash.put("tDBOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tDBOutput_4 = 0;
		





String dbschema_tDBOutput_4 = null;
	dbschema_tDBOutput_4 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_4 = null;
if(dbschema_tDBOutput_4 == null || dbschema_tDBOutput_4.trim().length() == 0) {
	tableName_tDBOutput_4 = ("product_price").toLowerCase();
} else {
	tableName_tDBOutput_4 = dbschema_tDBOutput_4 + "\".\"" + ("product_price").toLowerCase();
}


int nb_line_tDBOutput_4 = 0;
int nb_line_update_tDBOutput_4 = 0;
int nb_line_inserted_tDBOutput_4 = 0;
int nb_line_deleted_tDBOutput_4 = 0;
int nb_line_rejected_tDBOutput_4 = 0;

int deletedCount_tDBOutput_4=0;
int updatedCount_tDBOutput_4=0;
int insertedCount_tDBOutput_4=0;
int rowsToCommitCount_tDBOutput_4=0;
int rejectedCount_tDBOutput_4=0;

boolean whetherReject_tDBOutput_4 = false;

java.sql.Connection conn_tDBOutput_4 = null;
String dbUser_tDBOutput_4 = null;

	conn_tDBOutput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_4=0;
        java.lang.StringBuilder sb_tDBOutput_4 = new java.lang.StringBuilder();
        sb_tDBOutput_4.append("INSERT INTO \"").append(tableName_tDBOutput_4).append("\" (\"cd_produto\",\"dt_ulti_atualizacao\",\"vl_atual\",\"vl_anterior\",\"mktplace\",\"dc_produto\",\"vl_custo\",\"cd_operador\",\"nm_operador\",\"cd_marca\",\"dc_marca\",\"cd_fornecedor\",\"cd_comprador\",\"nm_comprador\",\"vl_arredondamento\",\"data_execucao\",\"data_envio\",\"status_envio\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

        String insert_tDBOutput_4 = sb_tDBOutput_4.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_4 = conn_tDBOutput_4.prepareStatement(insert_tDBOutput_4);
	    resourceMap.put("pstmt_tDBOutput_4", pstmt_tDBOutput_4);
	    

 



/**
 * [tDBOutput_4 begin ] stop
 */



	
	/**
	 * [tConvertType_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_4", false);
		start_Hash.put("tConvertType_4", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert1");
					}
				
		int tos_count_tConvertType_4 = 0;
		
	int nb_line_tConvertType_4 = 0;  
 



/**
 * [tConvertType_4 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct> tHash_Lookup_row41 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct>) 
					globalMap.get( "tHash_Lookup_row41" ))
					;					
					
	

row41Struct row41HashKey = new row41Struct();
row41Struct row41Default = new row41Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert1Struct insert1_tmp = new insert1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct> tHash_Lookup_row34 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct>) 
					globalMap.get( "tHash_Lookup_row34" ))
					;					
					
	

row34Struct row34HashKey = new row34Struct();
row34Struct row34Default = new row34Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
insertStruct insert_tmp = new insertStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tJavaRow_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_12", false);
		start_Hash.put("tJavaRow_12", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tJavaRow_12 = 0;
		

int nb_line_tJavaRow_12 = 0;

 



/**
 * [tJavaRow_12 begin ] stop
 */



	
	/**
	 * [tUniqRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_3", false);
		start_Hash.put("tUniqRow_3", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tUniqRow_3 = 0;
		

	
		class KeyStruct_tUniqRow_3 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String CD_PRODUTO;
					String MKTPLACE;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
								
								result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_3 other = (KeyStruct_tUniqRow_3) obj;
				
									if (this.CD_PRODUTO == null) {
										if (other.CD_PRODUTO != null) 
											return false;
								
									} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
								 
										return false;
								
									if (this.MKTPLACE == null) {
										if (other.MKTPLACE != null) 
											return false;
								
									} else if (!this.MKTPLACE.equals(other.MKTPLACE))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_3 = 0;
int nb_duplicates_tUniqRow_3 = 0;
KeyStruct_tUniqRow_3 finder_tUniqRow_3 = new KeyStruct_tUniqRow_3();
java.util.Set<KeyStruct_tUniqRow_3> keystUniqRow_3 = new java.util.HashSet<KeyStruct_tUniqRow_3>(); 

 



/**
 * [tUniqRow_3 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<insert_DWStruct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<insert_DWStruct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    insert_DWStruct next_tHashInput_6 = iterator_tHashInput_6.next();

	row33.CD_PRODUTO = next_tHashInput_6.CD_PRODUTO;
	row33.DT_ULTI_ATUALIZACAO = next_tHashInput_6.DT_ULTI_ATUALIZACAO;
	row33.VL_ATUAL = next_tHashInput_6.VL_ATUAL;
	row33.VL_ANTERIOR = next_tHashInput_6.VL_ANTERIOR;
	row33.MKTPLACE = next_tHashInput_6.MKTPLACE;
	row33.DC_PRODUTO = next_tHashInput_6.DC_PRODUTO;
	row33.VL_CUSTO = next_tHashInput_6.VL_CUSTO;
	row33.CD_OPERADOR = next_tHashInput_6.CD_OPERADOR;
	row33.NM_OPERADOR = next_tHashInput_6.NM_OPERADOR;
	row33.CD_MARCA = next_tHashInput_6.CD_MARCA;
	row33.DC_MARCA = next_tHashInput_6.DC_MARCA;
	row33.CD_FORNECEDOR = next_tHashInput_6.CD_FORNECEDOR;
	row33.CD_COMPRADOR = next_tHashInput_6.CD_COMPRADOR;
	row33.NM_COMPRADOR = next_tHashInput_6.NM_COMPRADOR;
	row33.VL_ARREDONDAMENTO = next_tHashInput_6.VL_ARREDONDAMENTO;
	row33.DATA_EXECUCAO = next_tHashInput_6.DATA_EXECUCAO;
	row33.DATA_ENVIO = next_tHashInput_6.DATA_ENVIO;
	row33.STATUS_ENVIO = next_tHashInput_6.STATUS_ENVIO;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_3 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					
row30 = null;			
if(row33.CD_PRODUTO == null){
	finder_tUniqRow_3.CD_PRODUTO = null;
}else{
	finder_tUniqRow_3.CD_PRODUTO = row33.CD_PRODUTO.toLowerCase();
}
if(row33.MKTPLACE == null){
	finder_tUniqRow_3.MKTPLACE = null;
}else{
	finder_tUniqRow_3.MKTPLACE = row33.MKTPLACE.toLowerCase();
}	
finder_tUniqRow_3.hashCodeDirty = true;
if (!keystUniqRow_3.contains(finder_tUniqRow_3)) {
		KeyStruct_tUniqRow_3 new_tUniqRow_3 = new KeyStruct_tUniqRow_3();

		
if(row33.CD_PRODUTO == null){
	new_tUniqRow_3.CD_PRODUTO = null;
}else{
	new_tUniqRow_3.CD_PRODUTO = row33.CD_PRODUTO.toLowerCase();
}
if(row33.MKTPLACE == null){
	new_tUniqRow_3.MKTPLACE = null;
}else{
	new_tUniqRow_3.MKTPLACE = row33.MKTPLACE.toLowerCase();
}
		
		keystUniqRow_3.add(new_tUniqRow_3);if(row30 == null){ 
	
	row30 = new row30Struct();
}row30.CD_PRODUTO = row33.CD_PRODUTO;			row30.DT_ULTI_ATUALIZACAO = row33.DT_ULTI_ATUALIZACAO;			row30.VL_ATUAL = row33.VL_ATUAL;			row30.VL_ANTERIOR = row33.VL_ANTERIOR;			row30.MKTPLACE = row33.MKTPLACE;			row30.DC_PRODUTO = row33.DC_PRODUTO;			row30.VL_CUSTO = row33.VL_CUSTO;			row30.CD_OPERADOR = row33.CD_OPERADOR;			row30.NM_OPERADOR = row33.NM_OPERADOR;			row30.CD_MARCA = row33.CD_MARCA;			row30.DC_MARCA = row33.DC_MARCA;			row30.CD_FORNECEDOR = row33.CD_FORNECEDOR;			row30.CD_COMPRADOR = row33.CD_COMPRADOR;			row30.NM_COMPRADOR = row33.NM_COMPRADOR;			row30.VL_ARREDONDAMENTO = row33.VL_ARREDONDAMENTO;			row30.DATA_EXECUCAO = row33.DATA_EXECUCAO;			row30.DATA_ENVIO = row33.DATA_ENVIO;			row30.STATUS_ENVIO = row33.STATUS_ENVIO;					
		nb_uniques_tUniqRow_3++;
	} else {
	  nb_duplicates_tUniqRow_3++;
	}

 


	tos_count_tUniqRow_3++;

/**
 * [tUniqRow_3 main ] stop
 */
	
	/**
	 * [tUniqRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 process_data_begin ] stop
 */
// Start of branch "row30"
if(row30 != null) { 



	
	/**
	 * [tJavaRow_12 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					

    //Code generated according to input schema and output schema
row40.CD_PRODUTO = row30.CD_PRODUTO;
row40.DT_ULTI_ATUALIZACAO = row30.DT_ULTI_ATUALIZACAO;
row40.VL_ATUAL = String.format("%.2f",row30.VL_ATUAL).replaceAll(",", ".");
row40.VL_ANTERIOR = String.format("%.2f",row30.VL_ANTERIOR).replaceAll(",", ".");
row40.MKTPLACE = row30.MKTPLACE;
row40.DC_PRODUTO = row30.DC_PRODUTO;
row40.VL_CUSTO = row30.VL_CUSTO;
row40.CD_OPERADOR = row30.CD_OPERADOR;
row40.NM_OPERADOR = row30.NM_OPERADOR;
row40.CD_MARCA = row30.CD_MARCA;
row40.DC_MARCA = row30.DC_MARCA;
row40.CD_FORNECEDOR = row30.CD_FORNECEDOR;
row40.CD_COMPRADOR = row30.CD_COMPRADOR;
row40.NM_COMPRADOR = row30.NM_COMPRADOR;
row40.VL_ARREDONDAMENTO = String.format("%.2f",row30.VL_ARREDONDAMENTO).replaceAll(",", ".");
row40.DATA_EXECUCAO = row30.DATA_EXECUCAO;
row40.DATA_ENVIO = row30.DATA_ENVIO;
row40.STATUS_ENVIO = row30.STATUS_ENVIO;

    nb_line_tJavaRow_12++;   

 


	tos_count_tJavaRow_12++;

/**
 * [tJavaRow_12 main ] stop
 */
	
	/**
	 * [tJavaRow_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
						row34Struct row34 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row34" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow34 = false;
       		  	    	
       		  	    	
 							row34Struct row34ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row34HashKey.CD_PRODUTO = row40.CD_PRODUTO ;
                        		    		

								
		                        	row34HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row34.lookup( row34HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row34.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_7 = true;
	  								
						
									
	
		  								forceLooprow34 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow34 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row34 != null && tHash_Lookup_row34.hasNext()) || forceLooprow34) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row34'
									
                    		  	 
							   
                    		  	 
	       		  	    	row34Struct fromLookup_row34 = null;
							row34 = row34Default;
										 
							
								
								if(!forceLooprow34) { // G 46
								
							
								 
							
								
								fromLookup_row34 = tHash_Lookup_row34.next();

							

							if(fromLookup_row34 != null) {
								row34 = fromLookup_row34;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow34 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

insert = null;

if(!rejectedInnerJoin_tMap_7 ) {

// # Output table : 'insert'
insert_tmp.CD_PRODUTO = row40.CD_PRODUTO;
insert_tmp.DT_ULTI_ATUALIZACAO = row40.DT_ULTI_ATUALIZACAO;
insert_tmp.VL_ATUAL = row40.VL_ATUAL;
insert_tmp.VL_ANTERIOR = row40.VL_ANTERIOR;
insert_tmp.MKTPLACE = row40.MKTPLACE;
insert_tmp.DC_PRODUTO = row34.DC_PRODUTO ;
insert_tmp.VL_CUSTO = row34.VL_CUSTO ;
insert_tmp.CD_OPERADOR = row34.CD_OPERADOR ;
insert_tmp.NM_OPERADOR = row34.NM_OPERADOR ;
insert_tmp.CD_MARCA = row34.CD_MARCA ;
insert_tmp.DC_MARCA = row34.DC_MARCA ;
insert_tmp.CD_FORNECEDOR = row34.CD_FORNECEDOR ;
insert_tmp.CD_COMPRADOR = row34.CD_COMPRADOR ;
insert_tmp.NM_COMPRADOR = row34.NM_COMPRADOR ;
insert_tmp.VL_ARREDONDAMENTO = row40.VL_ARREDONDAMENTO;
insert_tmp.DATA_EXECUCAO = row40.DATA_EXECUCAO;
insert_tmp.DATA_ENVIO = row40.DATA_ENVIO;
insert_tmp.STATUS_ENVIO = row40.STATUS_ENVIO;
insert = insert_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "insert"
if(insert != null) { 



	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
						row41Struct row41 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row41" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow41 = false;
       		  	    	
       		  	    	
 							row41Struct row41ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_8) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_8 = false;
								
                        		    		    row41HashKey.CD_PRODUTO = insert.CD_PRODUTO ;
                        		    		

								
		                        	row41HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row41.lookup( row41HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row41.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_8 = true;
	  								
						
									
	
		  								forceLooprow41 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow41 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row41 != null && tHash_Lookup_row41.hasNext()) || forceLooprow41) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row41'
									
                    		  	 
							   
                    		  	 
	       		  	    	row41Struct fromLookup_row41 = null;
							row41 = row41Default;
										 
							
								
								if(!forceLooprow41) { // G 46
								
							
								 
							
								
								fromLookup_row41 = tHash_Lookup_row41.next();

							

							if(fromLookup_row41 != null) {
								row41 = fromLookup_row41;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow41 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

insert1 = null;

if(!rejectedInnerJoin_tMap_8 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'insert1'
// # Filter conditions 
if( rejectedInnerJoin_tMap_8 ) {
insert1_tmp.CD_PRODUTO = insert.CD_PRODUTO;
insert1_tmp.DT_ULTI_ATUALIZACAO = insert.DT_ULTI_ATUALIZACAO;
insert1_tmp.VL_ATUAL = insert.VL_ATUAL;
insert1_tmp.VL_ANTERIOR = insert.VL_ANTERIOR;
insert1_tmp.MKTPLACE = insert.MKTPLACE;
insert1_tmp.DC_PRODUTO = insert.DC_PRODUTO;
insert1_tmp.VL_CUSTO = insert.VL_CUSTO;
insert1_tmp.CD_OPERADOR = insert.CD_OPERADOR;
insert1_tmp.NM_OPERADOR = insert.NM_OPERADOR;
insert1_tmp.CD_MARCA = insert.CD_MARCA;
insert1_tmp.DC_MARCA = insert.DC_MARCA;
insert1_tmp.CD_FORNECEDOR = insert.CD_FORNECEDOR;
insert1_tmp.CD_COMPRADOR = insert.CD_COMPRADOR;
insert1_tmp.NM_COMPRADOR = insert.NM_COMPRADOR;
insert1_tmp.VL_ARREDONDAMENTO = insert.VL_ARREDONDAMENTO;
insert1_tmp.DATA_EXECUCAO = insert.DATA_EXECUCAO;
insert1_tmp.DATA_ENVIO = insert.DATA_ENVIO;
insert1_tmp.STATUS_ENVIO = insert.STATUS_ENVIO;
insert1 = insert1_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "insert1"
if(insert1 != null) { 



	
	/**
	 * [tConvertType_4 main ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert1"
						
						);
					}
					


  row39 = new row39Struct();
  boolean bHasError_tConvertType_4 = false;             
          try {
              row39.CD_PRODUTO=TypeConvert.String2String(insert1.CD_PRODUTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.DT_ULTI_ATUALIZACAO=TypeConvert.Date2Date(insert1.DT_ULTI_ATUALIZACAO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.VL_ATUAL=TypeConvert.String2BigDecimal(insert1.VL_ATUAL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.VL_ANTERIOR=TypeConvert.String2BigDecimal(insert1.VL_ANTERIOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.MKTPLACE=TypeConvert.String2String(insert1.MKTPLACE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.DC_PRODUTO=TypeConvert.String2String(insert1.DC_PRODUTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.VL_CUSTO=TypeConvert.BigDecimal2BigDecimal(insert1.VL_CUSTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.CD_OPERADOR=TypeConvert.String2String(insert1.CD_OPERADOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.NM_OPERADOR=TypeConvert.String2String(insert1.NM_OPERADOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.CD_MARCA=TypeConvert.String2String(insert1.CD_MARCA);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.DC_MARCA=TypeConvert.String2String(insert1.DC_MARCA);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.CD_FORNECEDOR=TypeConvert.String2String(insert1.CD_FORNECEDOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.CD_COMPRADOR=TypeConvert.String2String(insert1.CD_COMPRADOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.NM_COMPRADOR=TypeConvert.String2String(insert1.NM_COMPRADOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.VL_ARREDONDAMENTO=TypeConvert.String2BigDecimal(insert1.VL_ARREDONDAMENTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.DATA_EXECUCAO=TypeConvert.Date2Date(insert1.DATA_EXECUCAO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.DATA_ENVIO=TypeConvert.Date2Date(insert1.DATA_ENVIO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row39.STATUS_ENVIO=TypeConvert.String2String(insert1.STATUS_ENVIO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_4_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_4 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_4) {row39 = null;}

  nb_line_tConvertType_4 ++ ;

 


	tos_count_tConvertType_4++;

/**
 * [tConvertType_4 main ] stop
 */
	
	/**
	 * [tConvertType_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	

 



/**
 * [tConvertType_4 process_data_begin ] stop
 */
// Start of branch "row39"
if(row39 != null) { 



	
	/**
	 * [tDBOutput_4 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					



        whetherReject_tDBOutput_4 = false;
                    if(row39.CD_PRODUTO == null) {
pstmt_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(1, row39.CD_PRODUTO);
}

                    if(row39.DT_ULTI_ATUALIZACAO != null) {
pstmt_tDBOutput_4.setTimestamp(2, new java.sql.Timestamp(row39.DT_ULTI_ATUALIZACAO.getTime()));
} else {
pstmt_tDBOutput_4.setNull(2, java.sql.Types.TIMESTAMP);
}

                    pstmt_tDBOutput_4.setBigDecimal(3, row39.VL_ATUAL);

                    pstmt_tDBOutput_4.setBigDecimal(4, row39.VL_ANTERIOR);

                    if(row39.MKTPLACE == null) {
pstmt_tDBOutput_4.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(5, row39.MKTPLACE);
}

                    if(row39.DC_PRODUTO == null) {
pstmt_tDBOutput_4.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(6, row39.DC_PRODUTO);
}

                    pstmt_tDBOutput_4.setBigDecimal(7, row39.VL_CUSTO);

                    if(row39.CD_OPERADOR == null) {
pstmt_tDBOutput_4.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(8, row39.CD_OPERADOR);
}

                    if(row39.NM_OPERADOR == null) {
pstmt_tDBOutput_4.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(9, row39.NM_OPERADOR);
}

                    if(row39.CD_MARCA == null) {
pstmt_tDBOutput_4.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(10, row39.CD_MARCA);
}

                    if(row39.DC_MARCA == null) {
pstmt_tDBOutput_4.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(11, row39.DC_MARCA);
}

                    if(row39.CD_FORNECEDOR == null) {
pstmt_tDBOutput_4.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(12, row39.CD_FORNECEDOR);
}

                    if(row39.CD_COMPRADOR == null) {
pstmt_tDBOutput_4.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(13, row39.CD_COMPRADOR);
}

                    if(row39.NM_COMPRADOR == null) {
pstmt_tDBOutput_4.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(14, row39.NM_COMPRADOR);
}

                    pstmt_tDBOutput_4.setBigDecimal(15, row39.VL_ARREDONDAMENTO);

                    if(row39.DATA_EXECUCAO != null) {
pstmt_tDBOutput_4.setTimestamp(16, new java.sql.Timestamp(row39.DATA_EXECUCAO.getTime()));
} else {
pstmt_tDBOutput_4.setNull(16, java.sql.Types.TIMESTAMP);
}

                    if(row39.DATA_ENVIO != null) {
pstmt_tDBOutput_4.setTimestamp(17, new java.sql.Timestamp(row39.DATA_ENVIO.getTime()));
} else {
pstmt_tDBOutput_4.setNull(17, java.sql.Types.TIMESTAMP);
}

                    if(row39.STATUS_ENVIO == null) {
pstmt_tDBOutput_4.setNull(18, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(18, row39.STATUS_ENVIO);
}

			
            try {
                nb_line_tDBOutput_4++;
				
                int processedCount_tDBOutput_4 = pstmt_tDBOutput_4.executeUpdate();
                insertedCount_tDBOutput_4 += processedCount_tDBOutput_4;
                rowsToCommitCount_tDBOutput_4 += processedCount_tDBOutput_4;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_4_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_4 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_4++;

/**
 * [tDBOutput_4 main ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_end ] stop
 */

} // End of branch "row39"




	
	/**
	 * [tConvertType_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	

 



/**
 * [tConvertType_4 process_data_end ] stop
 */

} // End of branch "insert1"



	
		} // close loop of lookup 'row41' // G_TM_M_043
	
	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */

} // End of branch "insert"



	
		} // close loop of lookup 'row34' // G_TM_M_043
	
	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 process_data_end ] stop
 */

} // End of branch "row30"




	
	/**
	 * [tUniqRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tUniqRow_3 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

globalMap.put("tUniqRow_3_NB_UNIQUES",nb_uniques_tUniqRow_3);
globalMap.put("tUniqRow_3_NB_DUPLICATES",nb_duplicates_tUniqRow_3);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tUniqRow_3", true);
end_Hash.put("tUniqRow_3", System.currentTimeMillis());




/**
 * [tUniqRow_3 end ] stop
 */

	
	/**
	 * [tJavaRow_12 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

globalMap.put("tJavaRow_12_NB_LINE",nb_line_tJavaRow_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tJavaRow_12", true);
end_Hash.put("tJavaRow_12", System.currentTimeMillis());




/**
 * [tJavaRow_12 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row34 != null) {
						tHash_Lookup_row34.endGet();
					}
					globalMap.remove( "tHash_Lookup_row34" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row41 != null) {
						tHash_Lookup_row41.endGet();
					}
					globalMap.remove( "tHash_Lookup_row41" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tConvertType_4 end ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	
      globalMap.put("tConvertType_4_NB_LINE", nb_line_tConvertType_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert1");
			  	}
			  	
 

ok_Hash.put("tConvertType_4", true);
end_Hash.put("tConvertType_4", System.currentTimeMillis());




/**
 * [tConvertType_4 end ] stop
 */

	
	/**
	 * [tDBOutput_4 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



        if(pstmt_tDBOutput_4 != null) {
        		
            pstmt_tDBOutput_4.close();
            resourceMap.remove("pstmt_tDBOutput_4");
        }
    resourceMap.put("statementClosed_tDBOutput_4", true);

	nb_line_deleted_tDBOutput_4=nb_line_deleted_tDBOutput_4+ deletedCount_tDBOutput_4;
	nb_line_update_tDBOutput_4=nb_line_update_tDBOutput_4 + updatedCount_tDBOutput_4;
	nb_line_inserted_tDBOutput_4=nb_line_inserted_tDBOutput_4 + insertedCount_tDBOutput_4;
	nb_line_rejected_tDBOutput_4=nb_line_rejected_tDBOutput_4 + rejectedCount_tDBOutput_4;
	
        globalMap.put("tDBOutput_4_NB_LINE",nb_line_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_UPDATED",nb_line_update_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_DELETED",nb_line_deleted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_4);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tDBOutput_4", true);
end_Hash.put("tDBOutput_4", System.currentTimeMillis());




/**
 * [tDBOutput_4 end ] stop
 */


















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk22", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_8"
					     			globalMap.remove("tHash_Lookup_row41"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row34"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tUniqRow_3 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_12 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_12";
	
	

 



/**
 * [tJavaRow_12 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tConvertType_4 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_4";
	
	

 



/**
 * [tConvertType_4 finally ] stop
 */

	
	/**
	 * [tDBOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_4") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_4 = null;
                if ((pstmtToClose_tDBOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_4")) != null) {
                    pstmtToClose_tDBOutput_4.close();
                }
    }
 



/**
 * [tDBOutput_4 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_2 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_2=0;
	    String update_tDBOutput_2 = "UPDATE \"" + tableName_tDBOutput_2 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row5Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row6.nm_programa = next_tHashInput_1.nm_programa;
	row6.data_inicio_execucao = next_tHashInput_1.data_inicio_execucao;
	row6.data_termino_execucao = next_tHashInput_1.data_termino_execucao;
	row6.mensagem = next_tHashInput_1.mensagem;
	row6.uuid = next_tHashInput_1.uuid;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row6.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row6.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5 + count_tDBOutput_2, update_log.uuid);
}


            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                updatedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tDBClose_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_1", false);
		start_Hash.put("tDBClose_1", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_1";
	
	
		int tos_count_tDBClose_1 = 0;
		

 



/**
 * [tDBClose_1 begin ] stop
 */
	
	/**
	 * [tDBClose_1 main ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

	java.sql.Connection conn_tDBClose_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");

	if(conn_tDBClose_1 != null && !conn_tDBClose_1.isClosed())
	{
		
			conn_tDBClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tDBConnection_2"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tDBClose_1++;

/**
 * [tDBClose_1 main ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_1 end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 

ok_Hash.put("tDBClose_1", true);
end_Hash.put("tDBClose_1", System.currentTimeMillis());




/**
 * [tDBClose_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBClose_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tDBClose_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_1 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_2", false);
		start_Hash.put("tDBClose_2", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_2";
	
	
		int tos_count_tDBClose_2 = 0;
		

 



/**
 * [tDBClose_2 begin ] stop
 */
	
	/**
	 * [tDBClose_2 main ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	



	java.sql.Connection conn_tDBClose_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	if(conn_tDBClose_2 != null && !conn_tDBClose_2.isClosed())
	{
        conn_tDBClose_2.close();
	}

 


	tos_count_tDBClose_2++;

/**
 * [tDBClose_2 main ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_2 end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 

ok_Hash.put("tDBClose_2", true);
end_Hash.put("tDBClose_2", System.currentTimeMillis());




/**
 * [tDBClose_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_2 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_2_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public BigDecimal De;

				public BigDecimal getDe () {
					return this.De;
				}

				public Boolean DeIsNullable(){
				    return true;
				}
				public Boolean DeIsKey(){
				    return false;
				}
				public Integer DeLength(){
				    return null;
				}
				public Integer DePrecision(){
				    return null;
				}
				public String DeDefault(){
				
					return null;
				
				}
				public String DeComment(){
				
				    return "";
				
				}
				public String DePattern(){
				
					return "";
				
				}
				public String DeOriginalDbColumnName(){
				
					return "De";
				
				}

				
			    public BigDecimal Ate;

				public BigDecimal getAte () {
					return this.Ate;
				}

				public Boolean AteIsNullable(){
				    return true;
				}
				public Boolean AteIsKey(){
				    return false;
				}
				public Integer AteLength(){
				    return null;
				}
				public Integer AtePrecision(){
				    return null;
				}
				public String AteDefault(){
				
					return null;
				
				}
				public String AteComment(){
				
				    return "";
				
				}
				public String AtePattern(){
				
					return "";
				
				}
				public String AteOriginalDbColumnName(){
				
					return "Ate";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
						this.De = (BigDecimal) dis.readObject();
					
						this.Ate = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
						this.De = (BigDecimal) dis.readObject();
					
						this.Ate = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.De);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Ate);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.De);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Ate);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("De="+String.valueOf(De));
		sb.append(",Ate="+String.valueOf(Ate));
		sb.append(",Frete="+String.valueOf(Frete));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tAdvancedHash_row10 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row10", false);
		start_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tAdvancedHash_row10 = 0;
		

			   		// connection name:row10
			   		// source node:tHashInput_2 - inputs:(after_tDBInput_2) outputs:(row10,row10) | target node:tAdvancedHash_row10 - inputs:(row10) outputs:()
			   		// linked node: tMap_3 - inputs:(row9,row10) outputs:(Saida1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row10 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_ROWS;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row10Struct>getLookup(matchingModeEnum_row10);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row10", tHash_Lookup_row10);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row10 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row8Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row8Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row10.De = next_tHashInput_2.De;
	row10.Ate = next_tHashInput_2.Ate;
	row10.Frete = next_tHashInput_2.Frete;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					


			   
			   

					row10Struct row10_HashRow = new row10Struct();
		   	   	   
				
				row10_HashRow.De = row10.De;
				
				row10_HashRow.Ate = row10.Ate;
				
				row10_HashRow.Frete = row10.Frete;
				
			tHash_Lookup_row10.put(row10_HashRow);
			
            




 


	tos_count_tAdvancedHash_row10++;

/**
 * [tAdvancedHash_row10 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

tHash_Lookup_row10.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row10", true);
end_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());




/**
 * [tAdvancedHash_row10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableComparableLookupRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String Sku;

				public String getSku () {
					return this.Sku;
				}

				public Boolean SkuIsNullable(){
				    return true;
				}
				public Boolean SkuIsKey(){
				    return false;
				}
				public Integer SkuLength(){
				    return null;
				}
				public Integer SkuPrecision(){
				    return null;
				}
				public String SkuDefault(){
				
					return null;
				
				}
				public String SkuComment(){
				
				    return "";
				
				}
				public String SkuPattern(){
				
					return "";
				
				}
				public String SkuOriginalDbColumnName(){
				
					return "Sku";
				
				}

				
			    public String Cod_Fabrica;

				public String getCod_Fabrica () {
					return this.Cod_Fabrica;
				}

				public Boolean Cod_FabricaIsNullable(){
				    return true;
				}
				public Boolean Cod_FabricaIsKey(){
				    return false;
				}
				public Integer Cod_FabricaLength(){
				    return null;
				}
				public Integer Cod_FabricaPrecision(){
				    return null;
				}
				public String Cod_FabricaDefault(){
				
					return null;
				
				}
				public String Cod_FabricaComment(){
				
				    return "";
				
				}
				public String Cod_FabricaPattern(){
				
					return "";
				
				}
				public String Cod_FabricaOriginalDbColumnName(){
				
					return "Cod_Fabrica";
				
				}

				
			    public String Descricao;

				public String getDescricao () {
					return this.Descricao;
				}

				public Boolean DescricaoIsNullable(){
				    return true;
				}
				public Boolean DescricaoIsKey(){
				    return false;
				}
				public Integer DescricaoLength(){
				    return null;
				}
				public Integer DescricaoPrecision(){
				    return null;
				}
				public String DescricaoDefault(){
				
					return null;
				
				}
				public String DescricaoComment(){
				
				    return "";
				
				}
				public String DescricaoPattern(){
				
					return "";
				
				}
				public String DescricaoOriginalDbColumnName(){
				
					return "Descricao";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return null;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public String PMA;

				public String getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return null;
				}
				public Integer PMAPrecision(){
				    return null;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.Sku == null) ? 0 : this.Sku.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row15Struct other = (row15Struct) obj;
		
						if (this.Sku == null) {
							if (other.Sku != null)
								return false;
						
						} else if (!this.Sku.equals(other.Sku))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row15Struct other) {

		other.Sku = this.Sku;
	            other.Cod_Fabrica = this.Cod_Fabrica;
	            other.Descricao = this.Descricao;
	            other.Marca = this.Marca;
	            other.PMA = this.PMA;
	            
	}

	public void copyKeysDataTo(row15Struct other) {

		other.Sku = this.Sku;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.Sku = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.Sku = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Sku,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Sku,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.Cod_Fabrica = readString(dis,ois);
					
						this.Descricao = readString(dis,ois);
					
						this.Marca = readString(dis,ois);
					
						this.PMA = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.Cod_Fabrica = readString(dis,objectIn);
					
						this.Descricao = readString(dis,objectIn);
					
						this.Marca = readString(dis,objectIn);
					
						this.PMA = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.Cod_Fabrica, dos, oos);
					
						writeString(this.Descricao, dos, oos);
					
						writeString(this.Marca, dos, oos);
					
						writeString(this.PMA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.Cod_Fabrica, dos, objectOut);
					
						writeString(this.Descricao, dos, objectOut);
					
						writeString(this.Marca, dos, objectOut);
					
						writeString(this.PMA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Sku="+Sku);
		sb.append(",Cod_Fabrica="+Cod_Fabrica);
		sb.append(",Descricao="+Descricao);
		sb.append(",Marca="+Marca);
		sb.append(",PMA="+PMA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.Sku, other.Sku);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tAdvancedHash_row15 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row15", false);
		start_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tAdvancedHash_row15 = 0;
		

			   		// connection name:row15
			   		// source node:tHashInput_3 - inputs:(after_tDBInput_2) outputs:(row15,row15) | target node:tAdvancedHash_row15 - inputs:(row15) outputs:()
			   		// linked node: tMap_4 - inputs:(row14,row15) outputs:(Saida)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row15 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row15Struct>getLookup(matchingModeEnum_row15);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row15", tHash_Lookup_row15);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row15 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row13Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row13Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row15.Sku = next_tHashInput_3.Sku;
	row15.Cod_Fabrica = next_tHashInput_3.Cod_Fabrica;
	row15.Descricao = next_tHashInput_3.Descricao;
	row15.Marca = next_tHashInput_3.Marca;
	row15.PMA = next_tHashInput_3.PMA;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					


			   
			   

					row15Struct row15_HashRow = new row15Struct();
		   	   	   
				
				row15_HashRow.Sku = row15.Sku;
				
				row15_HashRow.Cod_Fabrica = row15.Cod_Fabrica;
				
				row15_HashRow.Descricao = row15.Descricao;
				
				row15_HashRow.Marca = row15.Marca;
				
				row15_HashRow.PMA = row15.PMA;
				
			tHash_Lookup_row15.put(row15_HashRow);
			
            




 


	tos_count_tAdvancedHash_row15++;

/**
 * [tAdvancedHash_row15 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

tHash_Lookup_row15.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row15", true);
end_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());




/**
 * [tAdvancedHash_row15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tJava_3Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


String foo = "bar";


System.out.println("MKTPLACE4_AMAZON - Iniciada a consulta dos dados MKTPLACE4_AMAZON");
 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk16", 0, "ok");
								} 
							
							tDBInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public BigDecimal De;

				public BigDecimal getDe () {
					return this.De;
				}

				public Boolean DeIsNullable(){
				    return true;
				}
				public Boolean DeIsKey(){
				    return false;
				}
				public Integer DeLength(){
				    return null;
				}
				public Integer DePrecision(){
				    return null;
				}
				public String DeDefault(){
				
					return null;
				
				}
				public String DeComment(){
				
				    return "";
				
				}
				public String DePattern(){
				
					return "";
				
				}
				public String DeOriginalDbColumnName(){
				
					return "De";
				
				}

				
			    public BigDecimal Ate;

				public BigDecimal getAte () {
					return this.Ate;
				}

				public Boolean AteIsNullable(){
				    return true;
				}
				public Boolean AteIsKey(){
				    return false;
				}
				public Integer AteLength(){
				    return null;
				}
				public Integer AtePrecision(){
				    return null;
				}
				public String AteDefault(){
				
					return null;
				
				}
				public String AteComment(){
				
				    return "";
				
				}
				public String AtePattern(){
				
					return "";
				
				}
				public String AteOriginalDbColumnName(){
				
					return "Ate";
				
				}

				
			    public BigDecimal Frete;

				public BigDecimal getFrete () {
					return this.Frete;
				}

				public Boolean FreteIsNullable(){
				    return true;
				}
				public Boolean FreteIsKey(){
				    return false;
				}
				public Integer FreteLength(){
				    return null;
				}
				public Integer FretePrecision(){
				    return null;
				}
				public String FreteDefault(){
				
					return null;
				
				}
				public String FreteComment(){
				
				    return "";
				
				}
				public String FretePattern(){
				
					return "";
				
				}
				public String FreteOriginalDbColumnName(){
				
					return "Frete";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
						this.De = (BigDecimal) dis.readObject();
					
						this.Ate = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
						this.De = (BigDecimal) dis.readObject();
					
						this.Ate = (BigDecimal) dis.readObject();
					
						this.Frete = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.De);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Ate);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Frete);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.De);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Ate);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Frete);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("De="+String.valueOf(De));
		sb.append(",Ate="+String.valueOf(Ate));
		sb.append(",Frete="+String.valueOf(Frete));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputExcel_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_integracao_preco_amazom_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tFileInputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputExcel_1", false);
		start_Hash.put("tFileInputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputExcel_1";
	
	
		int tos_count_tFileInputExcel_1 = 0;
		

 
	final String decryptedPassword_tFileInputExcel_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:tiiHtE3Rm7Dqqb7D0OT5kxMil9Lx7m+bEZ33dw==");
        String password_tFileInputExcel_1 = decryptedPassword_tFileInputExcel_1;
        if (password_tFileInputExcel_1.isEmpty()){
            password_tFileInputExcel_1 = null;
        }
			class RegexUtil_tFileInputExcel_1 {

		    	public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName, boolean useRegex) {

			        java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

			        if(useRegex){//this part process the regex issue

				        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
				        for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
				            String sheetName = sheet.getSheetName();
				            java.util.regex.Matcher matcher = pattern.matcher(sheetName);
				            if (matcher.matches()) {
				            	if(sheet != null){
				                	list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
				                }
				            }
				        }

			        }else{
			        	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheet(oneSheetName);
		            	if(sheet != null){
		                	list.add(sheet);
		                }

			        }

			        return list;
			    }

			    public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
			    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list =  new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
			    	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheetAt(index);
	            	if(sheet != null){
	                	list.add(sheet);
	                }
			    	return list;
			    }

			}
		RegexUtil_tFileInputExcel_1 regexUtil_tFileInputExcel_1 = new RegexUtil_tFileInputExcel_1();

		Object source_tFileInputExcel_1 = ""+context.Tarifa+"/Tarifas Dba.xlsx";
		org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_1 = null;
		
		if(source_tFileInputExcel_1 instanceof String){
			workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create(new java.io.File((String)source_tFileInputExcel_1), password_tFileInputExcel_1, true);
		} else if(source_tFileInputExcel_1 instanceof java.io.InputStream) {
     		workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create((java.io.InputStream)source_tFileInputExcel_1, password_tFileInputExcel_1);
		} else{
			workbook_tFileInputExcel_1 = null;
			throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
		}
		try {

    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
    	for(org.apache.poi.ss.usermodel.Sheet sheet_tFileInputExcel_1 : workbook_tFileInputExcel_1){
   			sheetList_tFileInputExcel_1.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet_tFileInputExcel_1);
    	}
    	if(sheetList_tFileInputExcel_1.size() <= 0){
            throw new RuntimeException("Special sheets not exist!");
        }

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
		for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_1 : sheetList_tFileInputExcel_1) {
			if(sheet_FilterNull_tFileInputExcel_1!=null && sheetList_FilterNull_tFileInputExcel_1.iterator()!=null && sheet_FilterNull_tFileInputExcel_1.iterator().hasNext()){
				sheetList_FilterNull_tFileInputExcel_1.add(sheet_FilterNull_tFileInputExcel_1);
			}
		}
		sheetList_tFileInputExcel_1 = sheetList_FilterNull_tFileInputExcel_1;
	if(sheetList_tFileInputExcel_1.size()>0){
		int nb_line_tFileInputExcel_1 = 0;

        int begin_line_tFileInputExcel_1 = 1;

        int footer_input_tFileInputExcel_1 = 0;

        int end_line_tFileInputExcel_1=0;
        for(org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1:sheetList_tFileInputExcel_1){
			end_line_tFileInputExcel_1+=(sheet_tFileInputExcel_1.getLastRowNum()+1);
        }
        end_line_tFileInputExcel_1 -= footer_input_tFileInputExcel_1;
        int limit_tFileInputExcel_1 = -1;
        int start_column_tFileInputExcel_1 = 1-1;
        int end_column_tFileInputExcel_1 = -1;

        org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_1 = null;
        org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1.get(0);
        int rowCount_tFileInputExcel_1 = 0;
        int sheetIndex_tFileInputExcel_1 = 0;
        int currentRows_tFileInputExcel_1 = (sheetList_tFileInputExcel_1.get(0).getLastRowNum()+1);

		//for the number format
        java.text.DecimalFormat df_tFileInputExcel_1 = new java.text.DecimalFormat("#.####################################");
        char decimalChar_tFileInputExcel_1 = df_tFileInputExcel_1.getDecimalFormatSymbols().getDecimalSeparator();
		
        for(int i_tFileInputExcel_1 = begin_line_tFileInputExcel_1; i_tFileInputExcel_1 < end_line_tFileInputExcel_1; i_tFileInputExcel_1++){

        	int emptyColumnCount_tFileInputExcel_1 = 0;

        	if (limit_tFileInputExcel_1 != -1 && nb_line_tFileInputExcel_1 >= limit_tFileInputExcel_1) {
        		break;
        	}

            while (i_tFileInputExcel_1 >= rowCount_tFileInputExcel_1 + currentRows_tFileInputExcel_1) {
                rowCount_tFileInputExcel_1 += currentRows_tFileInputExcel_1;
                sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1.get(++sheetIndex_tFileInputExcel_1);
                currentRows_tFileInputExcel_1 = (sheet_tFileInputExcel_1.getLastRowNum()+1);
            }
            globalMap.put("tFileInputExcel_1_CURRENT_SHEET",sheet_tFileInputExcel_1.getSheetName());
            if (rowCount_tFileInputExcel_1 <= i_tFileInputExcel_1) {
                row_tFileInputExcel_1 = sheet_tFileInputExcel_1.getRow(i_tFileInputExcel_1 - rowCount_tFileInputExcel_1);
            }
		    row8 = null;
					int tempRowLength_tFileInputExcel_1 = 3;
				
				int columnIndex_tFileInputExcel_1 = 0;
			
			String[] temp_row_tFileInputExcel_1 = new String[tempRowLength_tFileInputExcel_1];
			int excel_end_column_tFileInputExcel_1;
			if(row_tFileInputExcel_1==null){
				excel_end_column_tFileInputExcel_1=0;
			}else{
				excel_end_column_tFileInputExcel_1=row_tFileInputExcel_1.getLastCellNum();
			}
			int actual_end_column_tFileInputExcel_1;
			if(end_column_tFileInputExcel_1 == -1){
				actual_end_column_tFileInputExcel_1 = excel_end_column_tFileInputExcel_1;
			}
			else{
				actual_end_column_tFileInputExcel_1 = end_column_tFileInputExcel_1 >	excel_end_column_tFileInputExcel_1 ? excel_end_column_tFileInputExcel_1 : end_column_tFileInputExcel_1;
			}
			org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_1 = null;
			for(int i=0;i<tempRowLength_tFileInputExcel_1;i++){
				if(i + start_column_tFileInputExcel_1 < actual_end_column_tFileInputExcel_1){
					org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_1 = row_tFileInputExcel_1.getCell(i + start_column_tFileInputExcel_1);
					if(cell_tFileInputExcel_1!=null){
					switch (cell_tFileInputExcel_1.getCellType()) {
                        case STRING:
                            temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1.getRichStringCellValue().getString();
                            break;
                        case NUMERIC:
                            if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_1)) {
									temp_row_tFileInputExcel_1[i] =cell_tFileInputExcel_1.getDateCellValue().toString();
                            } else {
                                temp_row_tFileInputExcel_1[i] = df_tFileInputExcel_1.format(cell_tFileInputExcel_1.getNumericCellValue());
                            }
                            break;
                        case BOOLEAN:
                            temp_row_tFileInputExcel_1[i] =String.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
                            break;
                        case FORMULA:
        					switch (cell_tFileInputExcel_1.getCachedFormulaResultType()) {
                                case STRING:
                                    temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1.getRichStringCellValue().getString();
                                    break;
                                case NUMERIC:
                                    if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_1)) {
											temp_row_tFileInputExcel_1[i] =cell_tFileInputExcel_1.getDateCellValue().toString();
                                    } else {
	                                    ne_tFileInputExcel_1 = new org.apache.poi.ss.formula.eval.NumberEval(cell_tFileInputExcel_1.getNumericCellValue());
										temp_row_tFileInputExcel_1[i] = ne_tFileInputExcel_1.getStringValue();
                                    }
                                    break;
                                case BOOLEAN:
                                    temp_row_tFileInputExcel_1[i] =String.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
                                    break;
                                default:
                            		temp_row_tFileInputExcel_1[i] = "";
                            }
                            break;
                        default:
                            temp_row_tFileInputExcel_1[i] = "";
                        }
                	}
                	else{
                		temp_row_tFileInputExcel_1[i]="";
                	}

				}else{
					temp_row_tFileInputExcel_1[i]="";
				}
			}
			boolean whetherReject_tFileInputExcel_1 = false;
			row8 = new row8Struct();
			int curColNum_tFileInputExcel_1 = -1;
			String curColName_tFileInputExcel_1 = "";
			try{
							columnIndex_tFileInputExcel_1 = 0;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "De";

				row8.De = ParserUtils.parseTo_BigDecimal(ParserUtils.parseTo_Number(temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1], null, '.'==decimalChar_tFileInputExcel_1 ? null : decimalChar_tFileInputExcel_1));
			}else{
				row8.De = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 1;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Ate";

				row8.Ate = ParserUtils.parseTo_BigDecimal(ParserUtils.parseTo_Number(temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1], null, '.'==decimalChar_tFileInputExcel_1 ? null : decimalChar_tFileInputExcel_1));
			}else{
				row8.Ate = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 2;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Frete";

				row8.Frete = ParserUtils.parseTo_BigDecimal(ParserUtils.parseTo_Number(temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1], null, '.'==decimalChar_tFileInputExcel_1 ? null : decimalChar_tFileInputExcel_1));
			}else{
				row8.Frete = null;
				emptyColumnCount_tFileInputExcel_1++;
			}

				nb_line_tFileInputExcel_1++;
				
			}catch(java.lang.Exception e){
globalMap.put("tFileInputExcel_1_ERROR_MESSAGE",e.getMessage());
			whetherReject_tFileInputExcel_1 = true;
					 System.err.println(e.getMessage());
					 row8 = null;
			}


		



 



/**
 * [tFileInputExcel_1 begin ] stop
 */
	
	/**
	 * [tFileInputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 


	tos_count_tFileInputExcel_1++;

/**
 * [tFileInputExcel_1 main ] stop
 */
	
	/**
	 * [tFileInputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_begin ] stop
 */
// Start of branch "row8"
if(row8 != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					



    
		row8Struct oneRow_tHashOutput_2 = new row8Struct();
				
					oneRow_tHashOutput_2.De = row8.De;
					oneRow_tHashOutput_2.Ate = row8.Ate;
					oneRow_tHashOutput_2.Frete = row8.Frete;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "row8"




	
	/**
	 * [tFileInputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

			}
			
			
			
			globalMap.put("tFileInputExcel_1_NB_LINE",nb_line_tFileInputExcel_1);
			
				}
			
		} finally { 
				
  				if(!(source_tFileInputExcel_1 instanceof java.io.InputStream)){
  					workbook_tFileInputExcel_1.getPackage().revert();
  				}
				
		}	
		

 

ok_Hash.put("tFileInputExcel_1", true);
end_Hash.put("tFileInputExcel_1", System.currentTimeMillis());




/**
 * [tFileInputExcel_1 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String Sku;

				public String getSku () {
					return this.Sku;
				}

				public Boolean SkuIsNullable(){
				    return true;
				}
				public Boolean SkuIsKey(){
				    return false;
				}
				public Integer SkuLength(){
				    return null;
				}
				public Integer SkuPrecision(){
				    return null;
				}
				public String SkuDefault(){
				
					return null;
				
				}
				public String SkuComment(){
				
				    return "";
				
				}
				public String SkuPattern(){
				
					return "";
				
				}
				public String SkuOriginalDbColumnName(){
				
					return "Sku";
				
				}

				
			    public String Cod_Fabrica;

				public String getCod_Fabrica () {
					return this.Cod_Fabrica;
				}

				public Boolean Cod_FabricaIsNullable(){
				    return true;
				}
				public Boolean Cod_FabricaIsKey(){
				    return false;
				}
				public Integer Cod_FabricaLength(){
				    return null;
				}
				public Integer Cod_FabricaPrecision(){
				    return null;
				}
				public String Cod_FabricaDefault(){
				
					return null;
				
				}
				public String Cod_FabricaComment(){
				
				    return "";
				
				}
				public String Cod_FabricaPattern(){
				
					return "";
				
				}
				public String Cod_FabricaOriginalDbColumnName(){
				
					return "Cod_Fabrica";
				
				}

				
			    public String Descricao;

				public String getDescricao () {
					return this.Descricao;
				}

				public Boolean DescricaoIsNullable(){
				    return true;
				}
				public Boolean DescricaoIsKey(){
				    return false;
				}
				public Integer DescricaoLength(){
				    return null;
				}
				public Integer DescricaoPrecision(){
				    return null;
				}
				public String DescricaoDefault(){
				
					return null;
				
				}
				public String DescricaoComment(){
				
				    return "";
				
				}
				public String DescricaoPattern(){
				
					return "";
				
				}
				public String DescricaoOriginalDbColumnName(){
				
					return "Descricao";
				
				}

				
			    public String Marca;

				public String getMarca () {
					return this.Marca;
				}

				public Boolean MarcaIsNullable(){
				    return true;
				}
				public Boolean MarcaIsKey(){
				    return false;
				}
				public Integer MarcaLength(){
				    return null;
				}
				public Integer MarcaPrecision(){
				    return null;
				}
				public String MarcaDefault(){
				
					return null;
				
				}
				public String MarcaComment(){
				
				    return "";
				
				}
				public String MarcaPattern(){
				
					return "";
				
				}
				public String MarcaOriginalDbColumnName(){
				
					return "Marca";
				
				}

				
			    public String PMA;

				public String getPMA () {
					return this.PMA;
				}

				public Boolean PMAIsNullable(){
				    return true;
				}
				public Boolean PMAIsKey(){
				    return false;
				}
				public Integer PMALength(){
				    return null;
				}
				public Integer PMAPrecision(){
				    return null;
				}
				public String PMADefault(){
				
					return null;
				
				}
				public String PMAComment(){
				
				    return "";
				
				}
				public String PMAPattern(){
				
					return "";
				
				}
				public String PMAOriginalDbColumnName(){
				
					return "PMA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.Sku = readString(dis);
					
					this.Cod_Fabrica = readString(dis);
					
					this.Descricao = readString(dis);
					
					this.Marca = readString(dis);
					
					this.PMA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.Sku = readString(dis);
					
					this.Cod_Fabrica = readString(dis);
					
					this.Descricao = readString(dis);
					
					this.Marca = readString(dis);
					
					this.PMA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Sku,dos);
					
					// String
				
						writeString(this.Cod_Fabrica,dos);
					
					// String
				
						writeString(this.Descricao,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// String
				
						writeString(this.PMA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Sku,dos);
					
					// String
				
						writeString(this.Cod_Fabrica,dos);
					
					// String
				
						writeString(this.Descricao,dos);
					
					// String
				
						writeString(this.Marca,dos);
					
					// String
				
						writeString(this.PMA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Sku="+Sku);
		sb.append(",Cod_Fabrica="+Cod_Fabrica);
		sb.append(",Descricao="+Descricao);
		sb.append(",Marca="+Marca);
		sb.append(",PMA="+PMA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputExcel_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputExcel_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_integracao_preco_amazom_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row13Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tFileInputExcel_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputExcel_2", false);
		start_Hash.put("tFileInputExcel_2", System.currentTimeMillis());
		
	
	currentComponent="tFileInputExcel_2";
	
	
		int tos_count_tFileInputExcel_2 = 0;
		

 
	final String decryptedPassword_tFileInputExcel_2 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:gx0bFGXArRleLBKJgBFNruvILqqU8PeKEDHd6g==");
        String password_tFileInputExcel_2 = decryptedPassword_tFileInputExcel_2;
        if (password_tFileInputExcel_2.isEmpty()){
            password_tFileInputExcel_2 = null;
        }
			class RegexUtil_tFileInputExcel_2 {

		    	public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName, boolean useRegex) {

			        java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

			        if(useRegex){//this part process the regex issue

				        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
				        for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
				            String sheetName = sheet.getSheetName();
				            java.util.regex.Matcher matcher = pattern.matcher(sheetName);
				            if (matcher.matches()) {
				            	if(sheet != null){
				                	list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
				                }
				            }
				        }

			        }else{
			        	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheet(oneSheetName);
		            	if(sheet != null){
		                	list.add(sheet);
		                }

			        }

			        return list;
			    }

			    public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
			    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list =  new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
			    	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheetAt(index);
	            	if(sheet != null){
	                	list.add(sheet);
	                }
			    	return list;
			    }

			}
		RegexUtil_tFileInputExcel_2 regexUtil_tFileInputExcel_2 = new RegexUtil_tFileInputExcel_2();

		Object source_tFileInputExcel_2 = ""+context.PMA+"/PMA TODAS MARCAS.xlsx";
		org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_2 = null;
		
		if(source_tFileInputExcel_2 instanceof String){
			workbook_tFileInputExcel_2 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create(new java.io.File((String)source_tFileInputExcel_2), password_tFileInputExcel_2, true);
		} else if(source_tFileInputExcel_2 instanceof java.io.InputStream) {
     		workbook_tFileInputExcel_2 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create((java.io.InputStream)source_tFileInputExcel_2, password_tFileInputExcel_2);
		} else{
			workbook_tFileInputExcel_2 = null;
			throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
		}
		try {

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_2 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
        sheetList_tFileInputExcel_2.addAll(regexUtil_tFileInputExcel_2.getSheets(workbook_tFileInputExcel_2, "Geral", false));
    	if(sheetList_tFileInputExcel_2.size() <= 0){
            throw new RuntimeException("Special sheets not exist!");
        }

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_2 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
		for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_2 : sheetList_tFileInputExcel_2) {
			if(sheet_FilterNull_tFileInputExcel_2!=null && sheetList_FilterNull_tFileInputExcel_2.iterator()!=null && sheet_FilterNull_tFileInputExcel_2.iterator().hasNext()){
				sheetList_FilterNull_tFileInputExcel_2.add(sheet_FilterNull_tFileInputExcel_2);
			}
		}
		sheetList_tFileInputExcel_2 = sheetList_FilterNull_tFileInputExcel_2;
	if(sheetList_tFileInputExcel_2.size()>0){
		int nb_line_tFileInputExcel_2 = 0;

        int begin_line_tFileInputExcel_2 = 2;

        int footer_input_tFileInputExcel_2 = 0;

        int end_line_tFileInputExcel_2=0;
        for(org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_2:sheetList_tFileInputExcel_2){
			end_line_tFileInputExcel_2+=(sheet_tFileInputExcel_2.getLastRowNum()+1);
        }
        end_line_tFileInputExcel_2 -= footer_input_tFileInputExcel_2;
        int limit_tFileInputExcel_2 = -1;
        int start_column_tFileInputExcel_2 = 1-1;
        int end_column_tFileInputExcel_2 = -1;

        org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_2 = null;
        org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_2 = sheetList_tFileInputExcel_2.get(0);
        int rowCount_tFileInputExcel_2 = 0;
        int sheetIndex_tFileInputExcel_2 = 0;
        int currentRows_tFileInputExcel_2 = (sheetList_tFileInputExcel_2.get(0).getLastRowNum()+1);

		//for the number format
        java.text.DecimalFormat df_tFileInputExcel_2 = new java.text.DecimalFormat("#.####################################");
        char decimalChar_tFileInputExcel_2 = df_tFileInputExcel_2.getDecimalFormatSymbols().getDecimalSeparator();
		
        for(int i_tFileInputExcel_2 = begin_line_tFileInputExcel_2; i_tFileInputExcel_2 < end_line_tFileInputExcel_2; i_tFileInputExcel_2++){

        	int emptyColumnCount_tFileInputExcel_2 = 0;

        	if (limit_tFileInputExcel_2 != -1 && nb_line_tFileInputExcel_2 >= limit_tFileInputExcel_2) {
        		break;
        	}

            while (i_tFileInputExcel_2 >= rowCount_tFileInputExcel_2 + currentRows_tFileInputExcel_2) {
                rowCount_tFileInputExcel_2 += currentRows_tFileInputExcel_2;
                sheet_tFileInputExcel_2 = sheetList_tFileInputExcel_2.get(++sheetIndex_tFileInputExcel_2);
                currentRows_tFileInputExcel_2 = (sheet_tFileInputExcel_2.getLastRowNum()+1);
            }
            globalMap.put("tFileInputExcel_2_CURRENT_SHEET",sheet_tFileInputExcel_2.getSheetName());
            if (rowCount_tFileInputExcel_2 <= i_tFileInputExcel_2) {
                row_tFileInputExcel_2 = sheet_tFileInputExcel_2.getRow(i_tFileInputExcel_2 - rowCount_tFileInputExcel_2);
            }
		    row13 = null;
					int tempRowLength_tFileInputExcel_2 = 5;
				
				int columnIndex_tFileInputExcel_2 = 0;
			
			String[] temp_row_tFileInputExcel_2 = new String[tempRowLength_tFileInputExcel_2];
			int excel_end_column_tFileInputExcel_2;
			if(row_tFileInputExcel_2==null){
				excel_end_column_tFileInputExcel_2=0;
			}else{
				excel_end_column_tFileInputExcel_2=row_tFileInputExcel_2.getLastCellNum();
			}
			int actual_end_column_tFileInputExcel_2;
			if(end_column_tFileInputExcel_2 == -1){
				actual_end_column_tFileInputExcel_2 = excel_end_column_tFileInputExcel_2;
			}
			else{
				actual_end_column_tFileInputExcel_2 = end_column_tFileInputExcel_2 >	excel_end_column_tFileInputExcel_2 ? excel_end_column_tFileInputExcel_2 : end_column_tFileInputExcel_2;
			}
			org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_2 = null;
			for(int i=0;i<tempRowLength_tFileInputExcel_2;i++){
				if(i + start_column_tFileInputExcel_2 < actual_end_column_tFileInputExcel_2){
					org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_2 = row_tFileInputExcel_2.getCell(i + start_column_tFileInputExcel_2);
					if(cell_tFileInputExcel_2!=null){
					switch (cell_tFileInputExcel_2.getCellType()) {
                        case STRING:
                            temp_row_tFileInputExcel_2[i] = cell_tFileInputExcel_2.getRichStringCellValue().getString();
                            break;
                        case NUMERIC:
                            if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_2)) {
									temp_row_tFileInputExcel_2[i] =cell_tFileInputExcel_2.getDateCellValue().toString();
                            } else {
                                temp_row_tFileInputExcel_2[i] = df_tFileInputExcel_2.format(cell_tFileInputExcel_2.getNumericCellValue());
                            }
                            break;
                        case BOOLEAN:
                            temp_row_tFileInputExcel_2[i] =String.valueOf(cell_tFileInputExcel_2.getBooleanCellValue());
                            break;
                        case FORMULA:
        					switch (cell_tFileInputExcel_2.getCachedFormulaResultType()) {
                                case STRING:
                                    temp_row_tFileInputExcel_2[i] = cell_tFileInputExcel_2.getRichStringCellValue().getString();
                                    break;
                                case NUMERIC:
                                    if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_2)) {
											temp_row_tFileInputExcel_2[i] =cell_tFileInputExcel_2.getDateCellValue().toString();
                                    } else {
	                                    ne_tFileInputExcel_2 = new org.apache.poi.ss.formula.eval.NumberEval(cell_tFileInputExcel_2.getNumericCellValue());
										temp_row_tFileInputExcel_2[i] = ne_tFileInputExcel_2.getStringValue();
                                    }
                                    break;
                                case BOOLEAN:
                                    temp_row_tFileInputExcel_2[i] =String.valueOf(cell_tFileInputExcel_2.getBooleanCellValue());
                                    break;
                                default:
                            		temp_row_tFileInputExcel_2[i] = "";
                            }
                            break;
                        default:
                            temp_row_tFileInputExcel_2[i] = "";
                        }
                	}
                	else{
                		temp_row_tFileInputExcel_2[i]="";
                	}

				}else{
					temp_row_tFileInputExcel_2[i]="";
				}
			}
			boolean whetherReject_tFileInputExcel_2 = false;
			row13 = new row13Struct();
			int curColNum_tFileInputExcel_2 = -1;
			String curColName_tFileInputExcel_2 = "";
			try{
							columnIndex_tFileInputExcel_2 = 0;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "Sku";

				row13.Sku = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row13.Sku = null;
				emptyColumnCount_tFileInputExcel_2++;
			}
							columnIndex_tFileInputExcel_2 = 1;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "Cod_Fabrica";

				row13.Cod_Fabrica = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row13.Cod_Fabrica = null;
				emptyColumnCount_tFileInputExcel_2++;
			}
							columnIndex_tFileInputExcel_2 = 2;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "Descricao";

				row13.Descricao = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row13.Descricao = null;
				emptyColumnCount_tFileInputExcel_2++;
			}
							columnIndex_tFileInputExcel_2 = 3;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "Marca";

				row13.Marca = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row13.Marca = null;
				emptyColumnCount_tFileInputExcel_2++;
			}
							columnIndex_tFileInputExcel_2 = 4;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "PMA";

				row13.PMA = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row13.PMA = null;
				emptyColumnCount_tFileInputExcel_2++;
			}

				nb_line_tFileInputExcel_2++;
				
			}catch(java.lang.Exception e){
globalMap.put("tFileInputExcel_2_ERROR_MESSAGE",e.getMessage());
			whetherReject_tFileInputExcel_2 = true;
					 System.err.println(e.getMessage());
					 row13 = null;
			}


		



 



/**
 * [tFileInputExcel_2 begin ] stop
 */
	
	/**
	 * [tFileInputExcel_2 main ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_2";
	
	

 


	tos_count_tFileInputExcel_2++;

/**
 * [tFileInputExcel_2 main ] stop
 */
	
	/**
	 * [tFileInputExcel_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_2";
	
	

 



/**
 * [tFileInputExcel_2 process_data_begin ] stop
 */
// Start of branch "row13"
if(row13 != null) { 



	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					



    
		row13Struct oneRow_tHashOutput_3 = new row13Struct();
				
					oneRow_tHashOutput_3.Sku = row13.Sku;
					oneRow_tHashOutput_3.Cod_Fabrica = row13.Cod_Fabrica;
					oneRow_tHashOutput_3.Descricao = row13.Descricao;
					oneRow_tHashOutput_3.Marca = row13.Marca;
					oneRow_tHashOutput_3.PMA = row13.PMA;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */

} // End of branch "row13"




	
	/**
	 * [tFileInputExcel_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_2";
	
	

 



/**
 * [tFileInputExcel_2 process_data_end ] stop
 */
	
	/**
	 * [tFileInputExcel_2 end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_2";
	
	

			}
			
			
			
			globalMap.put("tFileInputExcel_2_NB_LINE",nb_line_tFileInputExcel_2);
			
				}
			
		} finally { 
				
  				if(!(source_tFileInputExcel_2 instanceof java.io.InputStream)){
  					workbook_tFileInputExcel_2.getPackage().revert();
  				}
				
		}	
		

 

ok_Hash.put("tFileInputExcel_2", true);
end_Hash.put("tFileInputExcel_2", System.currentTimeMillis());




/**
 * [tFileInputExcel_2 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputExcel_2 finally ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_2";
	
	

 



/**
 * [tFileInputExcel_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputExcel_2_SUBPROCESS_STATE", 1);
	}
	


public static class row25Struct implements routines.system.IPersistableComparableLookupRow<row25Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Integer SITUACAO;

				public Integer getSITUACAO () {
					return this.SITUACAO;
				}

				public Boolean SITUACAOIsNullable(){
				    return true;
				}
				public Boolean SITUACAOIsKey(){
				    return false;
				}
				public Integer SITUACAOLength(){
				    return null;
				}
				public Integer SITUACAOPrecision(){
				    return null;
				}
				public String SITUACAODefault(){
				
					return null;
				
				}
				public String SITUACAOComment(){
				
				    return "";
				
				}
				public String SITUACAOPattern(){
				
					return "";
				
				}
				public String SITUACAOOriginalDbColumnName(){
				
					return "SITUACAO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return false;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return false;
				}
				public Integer MKTPLACELength(){
				    return 12;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row25Struct other = (row25Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row25Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.SITUACAO = this.SITUACAO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ARREDONDAMENTO = this.VL_ARREDONDAMENTO;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            
	}

	public void copyKeysDataTo(row25Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.SITUACAO = readInteger(dis,ois);
					
       			    	this.VL_ATUAL = (BigDecimal) ois.readObject();
					
       			    	this.VL_ARREDONDAMENTO = (BigDecimal) ois.readObject();
					
       			    	this.VL_ANTERIOR = (BigDecimal) ois.readObject();
					
						this.MKTPLACE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.SITUACAO = readInteger(dis,objectIn);
					
       			    	this.VL_ATUAL = (BigDecimal) objectIn.readObject();
					
       			    	this.VL_ARREDONDAMENTO = (BigDecimal) objectIn.readObject();
					
       			    	this.VL_ANTERIOR = (BigDecimal) objectIn.readObject();
					
						this.MKTPLACE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.SITUACAO, dos, oos);
					
       			    	oos.writeObject(this.VL_ATUAL);
					
       			    	oos.writeObject(this.VL_ARREDONDAMENTO);
					
       			    	oos.writeObject(this.VL_ANTERIOR);
					
						writeString(this.MKTPLACE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.SITUACAO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VL_ATUAL);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VL_ARREDONDAMENTO);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VL_ANTERIOR);
					
						writeString(this.MKTPLACE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",SITUACAO="+String.valueOf(SITUACAO));
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row25Struct row25 = new row25Struct();




	
	/**
	 * [tAdvancedHash_row25 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row25", false);
		start_Hash.put("tAdvancedHash_row25", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row25";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tAdvancedHash_row25 = 0;
		

			   		// connection name:row25
			   		// source node:tHashInput_5 - inputs:(after_tHashInput_4) outputs:(row25,row25) | target node:tAdvancedHash_row25 - inputs:(row25) outputs:()
			   		// linked node: tMap_5 - inputs:(row18,row25) outputs:(Saida2,insert_DW)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row25 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row25Struct> tHash_Lookup_row25 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row25Struct>getLookup(matchingModeEnum_row25);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row25", tHash_Lookup_row25);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row25 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcopyOfcopyOfcopyOfout1Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_7");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<copyOfcopyOfcopyOfcopyOfout1Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    copyOfcopyOfcopyOfcopyOfout1Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row25.CD_PRODUTO = next_tHashInput_5.CD_PRODUTO;
	row25.SITUACAO = next_tHashInput_5.SITUACAO;
	row25.VL_ATUAL = next_tHashInput_5.VL_ATUAL;
	row25.VL_ARREDONDAMENTO = next_tHashInput_5.VL_ARREDONDAMENTO;
	row25.VL_ANTERIOR = next_tHashInput_5.VL_ANTERIOR;
	row25.MKTPLACE = next_tHashInput_5.MKTPLACE;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row25 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row25";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					


			   
			   

					row25Struct row25_HashRow = new row25Struct();
		   	   	   
				
				row25_HashRow.CD_PRODUTO = row25.CD_PRODUTO;
				
				row25_HashRow.SITUACAO = row25.SITUACAO;
				
				row25_HashRow.VL_ATUAL = row25.VL_ATUAL;
				
				row25_HashRow.VL_ARREDONDAMENTO = row25.VL_ARREDONDAMENTO;
				
				row25_HashRow.VL_ANTERIOR = row25.VL_ANTERIOR;
				
				row25_HashRow.MKTPLACE = row25.MKTPLACE;
				
			tHash_Lookup_row25.put(row25_HashRow);
			
            




 


	tos_count_tAdvancedHash_row25++;

/**
 * [tAdvancedHash_row25 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row25 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row25";
	
	

 



/**
 * [tAdvancedHash_row25 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row25 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row25";
	
	

 



/**
 * [tAdvancedHash_row25 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_7");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row25 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row25";
	
	

tHash_Lookup_row25.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row25", true);
end_Hash.put("tAdvancedHash_row25", System.currentTimeMillis());




/**
 * [tAdvancedHash_row25 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row25 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row25";
	
	

 



/**
 * [tAdvancedHash_row25 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfout1Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfout1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Integer SITUACAO;

				public Integer getSITUACAO () {
					return this.SITUACAO;
				}

				public Boolean SITUACAOIsNullable(){
				    return true;
				}
				public Boolean SITUACAOIsKey(){
				    return false;
				}
				public Integer SITUACAOLength(){
				    return null;
				}
				public Integer SITUACAOPrecision(){
				    return null;
				}
				public String SITUACAODefault(){
				
					return null;
				
				}
				public String SITUACAOComment(){
				
				    return "";
				
				}
				public String SITUACAOPattern(){
				
					return "";
				
				}
				public String SITUACAOOriginalDbColumnName(){
				
					return "SITUACAO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return false;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return false;
				}
				public Integer MKTPLACELength(){
				    return 12;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.SITUACAO = readInteger(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.SITUACAO = readInteger(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.SITUACAO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.SITUACAO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",SITUACAO="+String.valueOf(SITUACAO));
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfout1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return false;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return false;
				}
				public Integer MKTPLACELength(){
				    return 12;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return false;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ARREDONDAMENTO;

				public BigDecimal getVL_ARREDONDAMENTO () {
					return this.VL_ARREDONDAMENTO;
				}

				public Boolean VL_ARREDONDAMENTOIsNullable(){
				    return true;
				}
				public Boolean VL_ARREDONDAMENTOIsKey(){
				    return false;
				}
				public Integer VL_ARREDONDAMENTOLength(){
				    return 12;
				}
				public Integer VL_ARREDONDAMENTOPrecision(){
				    return 2;
				}
				public String VL_ARREDONDAMENTODefault(){
				
					return null;
				
				}
				public String VL_ARREDONDAMENTOComment(){
				
				    return "";
				
				}
				public String VL_ARREDONDAMENTOPattern(){
				
					return "";
				
				}
				public String VL_ARREDONDAMENTOOriginalDbColumnName(){
				
					return "VL_ARREDONDAMENTO";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return false;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return false;
				}
				public Integer MKTPLACELength(){
				    return 12;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ARREDONDAMENTO = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ARREDONDAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ARREDONDAMENTO="+String.valueOf(VL_ARREDONDAMENTO));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();
row24Struct row24 = new row24Struct();
copyOfcopyOfcopyOfcopyOfout1Struct copyOfcopyOfcopyOfcopyOfout1 = new copyOfcopyOfcopyOfcopyOfout1Struct();






	
	/**
	 * [tHashOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_7", false);
		start_Hash.put("tHashOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfout1");
					}
				
		int tos_count_tHashOutput_7 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcopyOfcopyOfcopyOfout1Struct> tHashFile_tHashOutput_7 = null;
		String hashKey_tHashOutput_7 = "tHashFile_integracao_preco_amazom_" + pid + "_tHashOutput_7";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_7)){
			    if(mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7) == null){
	      		    mf_tHashOutput_7.getResourceMap().put(hashKey_tHashOutput_7, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcopyOfcopyOfcopyOfout1Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }else{
			    	tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }
			}
        int nb_line_tHashOutput_7 = 0;

 



/**
 * [tHashOutput_7 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfout1Struct copyOfcopyOfcopyOfcopyOfout1_tmp = new copyOfcopyOfcopyOfcopyOfout1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tConvertType_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_2", false);
		start_Hash.put("tConvertType_2", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tConvertType_2 = 0;
		
	int nb_line_tConvertType_2 = 0;  
 



/**
 * [tConvertType_2 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_1 = java.util.Calendar.getInstance();
		    calendar_tDBInput_1.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_1 = calendar_tDBInput_1.getTime();
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "\n   SELECT DISTINCT(ALT_CODITE) cd_produto, \n        IG.ITE_PREVE4 vl_atual, \n        IG.ITE_PREVE4  vl_arredondamen"
+"to,\n        PA.ALT_VE4ANT vl_anterior,\n        'MKTPLACE 4' AS mktplace\n   FROM PREALT PA \n  INNER JOIN ITEGER IG ON"
+" PA.ALT_CODITE = IG.ITE_CODITE AND IG.ITE_CODEMP = '001'\n  WHERE ALT_DTAALT = CURDATE() \n     AND ALT_CODEMP  = '001'"
+"\n    AND PA.ALT_VE4ANT <> IG.ITE_PREVE4\n";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row23.CD_PRODUTO = null;
							} else {
	                         		
        	row23.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row23.VL_ATUAL = null;
							} else {
		                          
            row23.VL_ATUAL = rs_tDBInput_1.getBigDecimal(2);
            if(rs_tDBInput_1.wasNull()){
                    row23.VL_ATUAL = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row23.VL_ARREDONDAMENTO = null;
							} else {
		                          
            row23.VL_ARREDONDAMENTO = rs_tDBInput_1.getBigDecimal(3);
            if(rs_tDBInput_1.wasNull()){
                    row23.VL_ARREDONDAMENTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row23.VL_ANTERIOR = null;
							} else {
		                          
            row23.VL_ANTERIOR = rs_tDBInput_1.getBigDecimal(4);
            if(rs_tDBInput_1.wasNull()){
                    row23.VL_ANTERIOR = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 5) {
								row23.MKTPLACE = null;
							} else {
	                         		
        	row23.MKTPLACE = routines.system.JDBCUtil.getString(rs_tDBInput_1, 5, false);
		                    }
					

 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_2 main ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					


  row24 = new row24Struct();
  boolean bHasError_tConvertType_2 = false;             
          try {
              row24.CD_PRODUTO=TypeConvert.String2String(row23.CD_PRODUTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row24.VL_ATUAL=TypeConvert.BigDecimal2BigDecimal(row23.VL_ATUAL);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row24.VL_ARREDONDAMENTO=TypeConvert.BigDecimal2BigDecimal(row23.VL_ARREDONDAMENTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row24.VL_ANTERIOR=TypeConvert.BigDecimal2BigDecimal(row23.VL_ANTERIOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row24.MKTPLACE=TypeConvert.String2String(row23.MKTPLACE);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_2 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_2) {row24 = null;}

  nb_line_tConvertType_2 ++ ;

 


	tos_count_tConvertType_2++;

/**
 * [tConvertType_2 main ] stop
 */
	
	/**
	 * [tConvertType_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfout1 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfout1'
copyOfcopyOfcopyOfcopyOfout1_tmp.CD_PRODUTO = row24.CD_PRODUTO;
copyOfcopyOfcopyOfcopyOfout1_tmp.SITUACAO = null;
copyOfcopyOfcopyOfcopyOfout1_tmp.VL_ATUAL = row24.VL_ATUAL;
copyOfcopyOfcopyOfcopyOfout1_tmp.VL_ARREDONDAMENTO = row24.VL_ARREDONDAMENTO;
copyOfcopyOfcopyOfcopyOfout1_tmp.VL_ANTERIOR = row24.VL_ANTERIOR;
copyOfcopyOfcopyOfcopyOfout1_tmp.MKTPLACE = row24.MKTPLACE;
copyOfcopyOfcopyOfcopyOfout1 = copyOfcopyOfcopyOfcopyOfout1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfout1"
if(copyOfcopyOfcopyOfcopyOfout1 != null) { 



	
	/**
	 * [tHashOutput_7 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcopyOfcopyOfcopyOfout1"
						
						);
					}
					



    
		copyOfcopyOfcopyOfcopyOfout1Struct oneRow_tHashOutput_7 = new copyOfcopyOfcopyOfcopyOfout1Struct();
				
					oneRow_tHashOutput_7.CD_PRODUTO = copyOfcopyOfcopyOfcopyOfout1.CD_PRODUTO;
					oneRow_tHashOutput_7.SITUACAO = copyOfcopyOfcopyOfcopyOfout1.SITUACAO;
					oneRow_tHashOutput_7.VL_ATUAL = copyOfcopyOfcopyOfcopyOfout1.VL_ATUAL;
					oneRow_tHashOutput_7.VL_ARREDONDAMENTO = copyOfcopyOfcopyOfcopyOfout1.VL_ARREDONDAMENTO;
					oneRow_tHashOutput_7.VL_ANTERIOR = copyOfcopyOfcopyOfcopyOfout1.VL_ANTERIOR;
					oneRow_tHashOutput_7.MKTPLACE = copyOfcopyOfcopyOfcopyOfout1.MKTPLACE;
		
        tHashFile_tHashOutput_7.put(oneRow_tHashOutput_7);
        nb_line_tHashOutput_7 ++;

 


	tos_count_tHashOutput_7++;

/**
 * [tHashOutput_7 main ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfout1"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */

} // End of branch "row24"




	
	/**
	 * [tConvertType_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);

 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tConvertType_2 end ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	
      globalMap.put("tConvertType_2_NB_LINE", nb_line_tConvertType_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tConvertType_2", true);
end_Hash.put("tConvertType_2", System.currentTimeMillis());




/**
 * [tConvertType_2 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tHashOutput_7 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
globalMap.put("tHashOutput_7_NB_LINE", nb_line_tHashOutput_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfout1");
			  	}
			  	
 

ok_Hash.put("tHashOutput_7", true);
end_Hash.put("tHashOutput_7", System.currentTimeMillis());




/**
 * [tHashOutput_7 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tConvertType_2 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tHashOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row32Struct implements routines.system.IPersistableRow<row32Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return null;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public java.util.Date DT_ULTI_ATUALIZACAO;

				public java.util.Date getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTI_ATUALIZACAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",DT_ULTI_ATUALIZACAO="+String.valueOf(DT_ULTI_ATUALIZACAO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return null;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public String VL_CUSTO;

				public String getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public String DT_ULTI_ATUALIZACAO;

				public String getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
					this.VL_CUSTO = readString(dis);
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.DC_PRODUTO = readString(dis);
					
					this.VL_CUSTO = readString(dis);
					
					this.CD_OPERADOR = readString(dis);
					
					this.NM_OPERADOR = readString(dis);
					
					this.CD_MARCA = readString(dis);
					
					this.DC_MARCA = readString(dis);
					
					this.CD_FORNECEDOR = readString(dis);
					
					this.CD_COMPRADOR = readString(dis);
					
					this.NM_COMPRADOR = readString(dis);
					
					this.DT_ULTI_ATUALIZACAO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// String
				
						writeString(this.VL_CUSTO,dos);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// String
				
						writeString(this.DT_ULTI_ATUALIZACAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.DC_PRODUTO,dos);
					
					// String
				
						writeString(this.VL_CUSTO,dos);
					
					// String
				
						writeString(this.CD_OPERADOR,dos);
					
					// String
				
						writeString(this.NM_OPERADOR,dos);
					
					// String
				
						writeString(this.CD_MARCA,dos);
					
					// String
				
						writeString(this.DC_MARCA,dos);
					
					// String
				
						writeString(this.CD_FORNECEDOR,dos);
					
					// String
				
						writeString(this.CD_COMPRADOR,dos);
					
					// String
				
						writeString(this.NM_COMPRADOR,dos);
					
					// String
				
						writeString(this.DT_ULTI_ATUALIZACAO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+VL_CUSTO);
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",DT_ULTI_ATUALIZACAO="+DT_ULTI_ATUALIZACAO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row31Struct row31 = new row31Struct();
row32Struct row32 = new row32Struct();





	
	/**
	 * [tHashOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_8", false);
		start_Hash.put("tHashOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tHashOutput_8 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row32Struct> tHashFile_tHashOutput_8 = null;
		String hashKey_tHashOutput_8 = "tHashFile_integracao_preco_amazom_" + pid + "_tHashOutput_8";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_8)){
			    if(mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8) == null){
	      		    mf_tHashOutput_8.getResourceMap().put(hashKey_tHashOutput_8, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row32Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }else{
			    	tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }
			}
        int nb_line_tHashOutput_8 = 0;

 



/**
 * [tHashOutput_8 begin ] stop
 */



	
	/**
	 * [tConvertType_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_3", false);
		start_Hash.put("tConvertType_3", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tConvertType_3 = 0;
		
	int nb_line_tConvertType_3 = 0;  
 



/**
 * [tConvertType_3 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_4 = java.util.Calendar.getInstance();
		    calendar_tDBInput_4.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_4 = calendar_tDBInput_4.getTime();
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "SELECT I.ITE_CODITE                                                  CD_PRODUTO,\n       I.ITE_DESITE                  "
+"                                DC_PRODUTO,\n       ROUND(G.ITE_PRECUS,4)                          				 VL_CUSTO,\n     "
+"  I.ITE_CODOPE                                   				 CD_OPERADOR,\n       (select LTRIM(REPLACE(OPE_NOMOPE , '*', ' '))"
+"\n          from CADOPE CO\n         where  CO.OPE_CODOPE = I.ITE_CODOPE)         				 NM_OPERADOR,\n       I.ITE_CODMAR"
+"                                   				 CD_MARCA,\n       (SELECT M.MAR_DESMAR\n          FROM CADMAR M\n         WHERE "
+"M.MAR_CODMAR = I.ITE_CODMAR)           				 DC_MARCA,\n       I.ITE_CODFOR                                   				 CD_FOR"
+"NECEDOR,\n       (SELECT F.FOR_COMPRA CD_COMPRADOR\n          FROM CADFOR F\n         where F.FOR_CODFOR = I.ITE_CODFOR)"
+"           				 CD_COMPRADOR,\n       (SELECT OPE.OPE_NOMOPE                         				 NM_COMPRADOR\n          FROM C"
+"ADFOR F\n          LEFT JOIN CADOPE OPE ON OPE.OPE_CODOPE = F.FOR_COMPRA\n         where F.FOR_CODFOR = I.ITE_CODFOR)   "
+"        			 	 NM_COMPRADOR,\n        I.ITE_DHUALT                                                 DT_ULTI_ATUALIZACAO\n "
+"   FROM CADITE I,\n         ITEGER G\n   WHERE G.ITE_CODITE = I.ITE_CODITE\n   GROUP BY I.ITE_CODITE";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row31.CD_PRODUTO = null;
							} else {
	                         		
        	row31.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 1, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row31.DC_PRODUTO = null;
							} else {
	                         		
        	row31.DC_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 2, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row31.VL_CUSTO = null;
							} else {
	                         		
        	row31.VL_CUSTO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 3, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 4) {
								row31.CD_OPERADOR = null;
							} else {
	                         		
        	row31.CD_OPERADOR = routines.system.JDBCUtil.getString(rs_tDBInput_4, 4, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 5) {
								row31.NM_OPERADOR = null;
							} else {
	                         		
        	row31.NM_OPERADOR = routines.system.JDBCUtil.getString(rs_tDBInput_4, 5, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 6) {
								row31.CD_MARCA = null;
							} else {
	                         		
        	row31.CD_MARCA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 6, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 7) {
								row31.DC_MARCA = null;
							} else {
	                         		
        	row31.DC_MARCA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 7, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 8) {
								row31.CD_FORNECEDOR = null;
							} else {
	                         		
        	row31.CD_FORNECEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_4, 8, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 9) {
								row31.CD_COMPRADOR = null;
							} else {
	                         		
        	row31.CD_COMPRADOR = routines.system.JDBCUtil.getString(rs_tDBInput_4, 9, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 10) {
								row31.NM_COMPRADOR = null;
							} else {
	                         		
        	row31.NM_COMPRADOR = routines.system.JDBCUtil.getString(rs_tDBInput_4, 10, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 11) {
								row31.DT_ULTI_ATUALIZACAO = null;
							} else {
	                         		
        	row31.DT_ULTI_ATUALIZACAO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 11, false);
		                    }
					

 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_3 main ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					


  row32 = new row32Struct();
  boolean bHasError_tConvertType_3 = false;             
          try {
              row32.CD_PRODUTO=TypeConvert.String2String(row31.CD_PRODUTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row32.DC_PRODUTO=TypeConvert.String2String(row31.DC_PRODUTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row32.VL_CUSTO=TypeConvert.String2BigDecimal(row31.VL_CUSTO);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row32.CD_OPERADOR=TypeConvert.String2String(row31.CD_OPERADOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row32.NM_OPERADOR=TypeConvert.String2String(row31.NM_OPERADOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row32.CD_MARCA=TypeConvert.String2String(row31.CD_MARCA);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row32.DC_MARCA=TypeConvert.String2String(row31.DC_MARCA);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row32.CD_FORNECEDOR=TypeConvert.String2String(row31.CD_FORNECEDOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row32.CD_COMPRADOR=TypeConvert.String2String(row31.CD_COMPRADOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row32.NM_COMPRADOR=TypeConvert.String2String(row31.NM_COMPRADOR);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row32.DT_ULTI_ATUALIZACAO=TypeConvert.String2Date(row31.DT_ULTI_ATUALIZACAO, "yyyy-MM-dd HH:mm:ss");            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_3 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_3) {row32 = null;}

  nb_line_tConvertType_3 ++ ;

 


	tos_count_tConvertType_3++;

/**
 * [tConvertType_3 main ] stop
 */
	
	/**
	 * [tConvertType_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 process_data_begin ] stop
 */
// Start of branch "row32"
if(row32 != null) { 



	
	/**
	 * [tHashOutput_8 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					



    
		row32Struct oneRow_tHashOutput_8 = new row32Struct();
				
					oneRow_tHashOutput_8.CD_PRODUTO = row32.CD_PRODUTO;
					oneRow_tHashOutput_8.DC_PRODUTO = row32.DC_PRODUTO;
					oneRow_tHashOutput_8.VL_CUSTO = row32.VL_CUSTO;
					oneRow_tHashOutput_8.CD_OPERADOR = row32.CD_OPERADOR;
					oneRow_tHashOutput_8.NM_OPERADOR = row32.NM_OPERADOR;
					oneRow_tHashOutput_8.CD_MARCA = row32.CD_MARCA;
					oneRow_tHashOutput_8.DC_MARCA = row32.DC_MARCA;
					oneRow_tHashOutput_8.CD_FORNECEDOR = row32.CD_FORNECEDOR;
					oneRow_tHashOutput_8.CD_COMPRADOR = row32.CD_COMPRADOR;
					oneRow_tHashOutput_8.NM_COMPRADOR = row32.NM_COMPRADOR;
					oneRow_tHashOutput_8.DT_ULTI_ATUALIZACAO = row32.DT_ULTI_ATUALIZACAO;
		
        tHashFile_tHashOutput_8.put(oneRow_tHashOutput_8);
        nb_line_tHashOutput_8 ++;

 


	tos_count_tHashOutput_8++;

/**
 * [tHashOutput_8 main ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_end ] stop
 */

} // End of branch "row32"




	
	/**
	 * [tConvertType_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);

 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tConvertType_3 end ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	
      globalMap.put("tConvertType_3_NB_LINE", nb_line_tConvertType_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tConvertType_3", true);
end_Hash.put("tConvertType_3", System.currentTimeMillis());




/**
 * [tConvertType_3 end ] stop
 */

	
	/**
	 * [tHashOutput_8 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
globalMap.put("tHashOutput_8_NB_LINE", nb_line_tHashOutput_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tHashOutput_8", true);
end_Hash.put("tHashOutput_8", System.currentTimeMillis());




/**
 * [tHashOutput_8 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tConvertType_3 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row34Struct implements routines.system.IPersistableComparableLookupRow<row34Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return null;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String DC_PRODUTO;

				public String getDC_PRODUTO () {
					return this.DC_PRODUTO;
				}

				public Boolean DC_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean DC_PRODUTOIsKey(){
				    return false;
				}
				public Integer DC_PRODUTOLength(){
				    return null;
				}
				public Integer DC_PRODUTOPrecision(){
				    return null;
				}
				public String DC_PRODUTODefault(){
				
					return null;
				
				}
				public String DC_PRODUTOComment(){
				
				    return "";
				
				}
				public String DC_PRODUTOPattern(){
				
					return "";
				
				}
				public String DC_PRODUTOOriginalDbColumnName(){
				
					return "DC_PRODUTO";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public String CD_OPERADOR;

				public String getCD_OPERADOR () {
					return this.CD_OPERADOR;
				}

				public Boolean CD_OPERADORIsNullable(){
				    return true;
				}
				public Boolean CD_OPERADORIsKey(){
				    return false;
				}
				public Integer CD_OPERADORLength(){
				    return null;
				}
				public Integer CD_OPERADORPrecision(){
				    return null;
				}
				public String CD_OPERADORDefault(){
				
					return null;
				
				}
				public String CD_OPERADORComment(){
				
				    return "";
				
				}
				public String CD_OPERADORPattern(){
				
					return "";
				
				}
				public String CD_OPERADOROriginalDbColumnName(){
				
					return "CD_OPERADOR";
				
				}

				
			    public String NM_OPERADOR;

				public String getNM_OPERADOR () {
					return this.NM_OPERADOR;
				}

				public Boolean NM_OPERADORIsNullable(){
				    return true;
				}
				public Boolean NM_OPERADORIsKey(){
				    return false;
				}
				public Integer NM_OPERADORLength(){
				    return null;
				}
				public Integer NM_OPERADORPrecision(){
				    return null;
				}
				public String NM_OPERADORDefault(){
				
					return null;
				
				}
				public String NM_OPERADORComment(){
				
				    return "";
				
				}
				public String NM_OPERADORPattern(){
				
					return "";
				
				}
				public String NM_OPERADOROriginalDbColumnName(){
				
					return "NM_OPERADOR";
				
				}

				
			    public String CD_MARCA;

				public String getCD_MARCA () {
					return this.CD_MARCA;
				}

				public Boolean CD_MARCAIsNullable(){
				    return true;
				}
				public Boolean CD_MARCAIsKey(){
				    return false;
				}
				public Integer CD_MARCALength(){
				    return null;
				}
				public Integer CD_MARCAPrecision(){
				    return null;
				}
				public String CD_MARCADefault(){
				
					return null;
				
				}
				public String CD_MARCAComment(){
				
				    return "";
				
				}
				public String CD_MARCAPattern(){
				
					return "";
				
				}
				public String CD_MARCAOriginalDbColumnName(){
				
					return "CD_MARCA";
				
				}

				
			    public String DC_MARCA;

				public String getDC_MARCA () {
					return this.DC_MARCA;
				}

				public Boolean DC_MARCAIsNullable(){
				    return true;
				}
				public Boolean DC_MARCAIsKey(){
				    return false;
				}
				public Integer DC_MARCALength(){
				    return null;
				}
				public Integer DC_MARCAPrecision(){
				    return null;
				}
				public String DC_MARCADefault(){
				
					return null;
				
				}
				public String DC_MARCAComment(){
				
				    return "";
				
				}
				public String DC_MARCAPattern(){
				
					return "";
				
				}
				public String DC_MARCAOriginalDbColumnName(){
				
					return "DC_MARCA";
				
				}

				
			    public String CD_FORNECEDOR;

				public String getCD_FORNECEDOR () {
					return this.CD_FORNECEDOR;
				}

				public Boolean CD_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean CD_FORNECEDORIsKey(){
				    return false;
				}
				public Integer CD_FORNECEDORLength(){
				    return null;
				}
				public Integer CD_FORNECEDORPrecision(){
				    return null;
				}
				public String CD_FORNECEDORDefault(){
				
					return null;
				
				}
				public String CD_FORNECEDORComment(){
				
				    return "";
				
				}
				public String CD_FORNECEDORPattern(){
				
					return "";
				
				}
				public String CD_FORNECEDOROriginalDbColumnName(){
				
					return "CD_FORNECEDOR";
				
				}

				
			    public String CD_COMPRADOR;

				public String getCD_COMPRADOR () {
					return this.CD_COMPRADOR;
				}

				public Boolean CD_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean CD_COMPRADORIsKey(){
				    return false;
				}
				public Integer CD_COMPRADORLength(){
				    return null;
				}
				public Integer CD_COMPRADORPrecision(){
				    return null;
				}
				public String CD_COMPRADORDefault(){
				
					return null;
				
				}
				public String CD_COMPRADORComment(){
				
				    return "";
				
				}
				public String CD_COMPRADORPattern(){
				
					return "";
				
				}
				public String CD_COMPRADOROriginalDbColumnName(){
				
					return "CD_COMPRADOR";
				
				}

				
			    public String NM_COMPRADOR;

				public String getNM_COMPRADOR () {
					return this.NM_COMPRADOR;
				}

				public Boolean NM_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NM_COMPRADORIsKey(){
				    return false;
				}
				public Integer NM_COMPRADORLength(){
				    return null;
				}
				public Integer NM_COMPRADORPrecision(){
				    return null;
				}
				public String NM_COMPRADORDefault(){
				
					return null;
				
				}
				public String NM_COMPRADORComment(){
				
				    return "";
				
				}
				public String NM_COMPRADORPattern(){
				
					return "";
				
				}
				public String NM_COMPRADOROriginalDbColumnName(){
				
					return "NM_COMPRADOR";
				
				}

				
			    public java.util.Date DT_ULTI_ATUALIZACAO;

				public java.util.Date getDT_ULTI_ATUALIZACAO () {
					return this.DT_ULTI_ATUALIZACAO;
				}

				public Boolean DT_ULTI_ATUALIZACAOIsNullable(){
				    return true;
				}
				public Boolean DT_ULTI_ATUALIZACAOIsKey(){
				    return false;
				}
				public Integer DT_ULTI_ATUALIZACAOLength(){
				    return null;
				}
				public Integer DT_ULTI_ATUALIZACAOPrecision(){
				    return null;
				}
				public String DT_ULTI_ATUALIZACAODefault(){
				
					return null;
				
				}
				public String DT_ULTI_ATUALIZACAOComment(){
				
				    return "";
				
				}
				public String DT_ULTI_ATUALIZACAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DT_ULTI_ATUALIZACAOOriginalDbColumnName(){
				
					return "DT_ULTI_ATUALIZACAO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row34Struct other = (row34Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row34Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.DC_PRODUTO = this.DC_PRODUTO;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.CD_OPERADOR = this.CD_OPERADOR;
	            other.NM_OPERADOR = this.NM_OPERADOR;
	            other.CD_MARCA = this.CD_MARCA;
	            other.DC_MARCA = this.DC_MARCA;
	            other.CD_FORNECEDOR = this.CD_FORNECEDOR;
	            other.CD_COMPRADOR = this.CD_COMPRADOR;
	            other.NM_COMPRADOR = this.NM_COMPRADOR;
	            other.DT_ULTI_ATUALIZACAO = this.DT_ULTI_ATUALIZACAO;
	            
	}

	public void copyKeysDataTo(row34Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.DC_PRODUTO = readString(dis,ois);
					
       			    	this.VL_CUSTO = (BigDecimal) ois.readObject();
					
						this.CD_OPERADOR = readString(dis,ois);
					
						this.NM_OPERADOR = readString(dis,ois);
					
						this.CD_MARCA = readString(dis,ois);
					
						this.DC_MARCA = readString(dis,ois);
					
						this.CD_FORNECEDOR = readString(dis,ois);
					
						this.CD_COMPRADOR = readString(dis,ois);
					
						this.NM_COMPRADOR = readString(dis,ois);
					
						this.DT_ULTI_ATUALIZACAO = readDate(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.DC_PRODUTO = readString(dis,objectIn);
					
       			    	this.VL_CUSTO = (BigDecimal) objectIn.readObject();
					
						this.CD_OPERADOR = readString(dis,objectIn);
					
						this.NM_OPERADOR = readString(dis,objectIn);
					
						this.CD_MARCA = readString(dis,objectIn);
					
						this.DC_MARCA = readString(dis,objectIn);
					
						this.CD_FORNECEDOR = readString(dis,objectIn);
					
						this.CD_COMPRADOR = readString(dis,objectIn);
					
						this.NM_COMPRADOR = readString(dis,objectIn);
					
						this.DT_ULTI_ATUALIZACAO = readDate(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.DC_PRODUTO, dos, oos);
					
       			    	oos.writeObject(this.VL_CUSTO);
					
						writeString(this.CD_OPERADOR, dos, oos);
					
						writeString(this.NM_OPERADOR, dos, oos);
					
						writeString(this.CD_MARCA, dos, oos);
					
						writeString(this.DC_MARCA, dos, oos);
					
						writeString(this.CD_FORNECEDOR, dos, oos);
					
						writeString(this.CD_COMPRADOR, dos, oos);
					
						writeString(this.NM_COMPRADOR, dos, oos);
					
						writeDate(this.DT_ULTI_ATUALIZACAO, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.DC_PRODUTO, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.VL_CUSTO);
					
						writeString(this.CD_OPERADOR, dos, objectOut);
					
						writeString(this.NM_OPERADOR, dos, objectOut);
					
						writeString(this.CD_MARCA, dos, objectOut);
					
						writeString(this.DC_MARCA, dos, objectOut);
					
						writeString(this.CD_FORNECEDOR, dos, objectOut);
					
						writeString(this.CD_COMPRADOR, dos, objectOut);
					
						writeString(this.NM_COMPRADOR, dos, objectOut);
					
						writeDate(this.DT_ULTI_ATUALIZACAO, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",DC_PRODUTO="+DC_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",CD_OPERADOR="+CD_OPERADOR);
		sb.append(",NM_OPERADOR="+NM_OPERADOR);
		sb.append(",CD_MARCA="+CD_MARCA);
		sb.append(",DC_MARCA="+DC_MARCA);
		sb.append(",CD_FORNECEDOR="+CD_FORNECEDOR);
		sb.append(",CD_COMPRADOR="+CD_COMPRADOR);
		sb.append(",NM_COMPRADOR="+NM_COMPRADOR);
		sb.append(",DT_ULTI_ATUALIZACAO="+String.valueOf(DT_ULTI_ATUALIZACAO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row34Struct row34 = new row34Struct();




	
	/**
	 * [tAdvancedHash_row34 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row34", false);
		start_Hash.put("tAdvancedHash_row34", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row34";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row34");
					}
				
		int tos_count_tAdvancedHash_row34 = 0;
		

			   		// connection name:row34
			   		// source node:tHashInput_7 - inputs:(after_tHashInput_6) outputs:(row34,row34) | target node:tAdvancedHash_row34 - inputs:(row34) outputs:()
			   		// linked node: tMap_7 - inputs:(row40,row34) outputs:(insert)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row34 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct> tHash_Lookup_row34 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row34Struct>getLookup(matchingModeEnum_row34);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row34", tHash_Lookup_row34);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row34 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row32Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_8");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row32Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row32Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row34.CD_PRODUTO = next_tHashInput_7.CD_PRODUTO;
	row34.DC_PRODUTO = next_tHashInput_7.DC_PRODUTO;
	row34.VL_CUSTO = next_tHashInput_7.VL_CUSTO;
	row34.CD_OPERADOR = next_tHashInput_7.CD_OPERADOR;
	row34.NM_OPERADOR = next_tHashInput_7.NM_OPERADOR;
	row34.CD_MARCA = next_tHashInput_7.CD_MARCA;
	row34.DC_MARCA = next_tHashInput_7.DC_MARCA;
	row34.CD_FORNECEDOR = next_tHashInput_7.CD_FORNECEDOR;
	row34.CD_COMPRADOR = next_tHashInput_7.CD_COMPRADOR;
	row34.NM_COMPRADOR = next_tHashInput_7.NM_COMPRADOR;
	row34.DT_ULTI_ATUALIZACAO = next_tHashInput_7.DT_ULTI_ATUALIZACAO;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row34 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row34"
						
						);
					}
					


			   
			   

					row34Struct row34_HashRow = new row34Struct();
		   	   	   
				
				row34_HashRow.CD_PRODUTO = row34.CD_PRODUTO;
				
				row34_HashRow.DC_PRODUTO = row34.DC_PRODUTO;
				
				row34_HashRow.VL_CUSTO = row34.VL_CUSTO;
				
				row34_HashRow.CD_OPERADOR = row34.CD_OPERADOR;
				
				row34_HashRow.NM_OPERADOR = row34.NM_OPERADOR;
				
				row34_HashRow.CD_MARCA = row34.CD_MARCA;
				
				row34_HashRow.DC_MARCA = row34.DC_MARCA;
				
				row34_HashRow.CD_FORNECEDOR = row34.CD_FORNECEDOR;
				
				row34_HashRow.CD_COMPRADOR = row34.CD_COMPRADOR;
				
				row34_HashRow.NM_COMPRADOR = row34.NM_COMPRADOR;
				
				row34_HashRow.DT_ULTI_ATUALIZACAO = row34.DT_ULTI_ATUALIZACAO;
				
			tHash_Lookup_row34.put(row34_HashRow);
			
            




 


	tos_count_tAdvancedHash_row34++;

/**
 * [tAdvancedHash_row34 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row34 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";
	
	

 



/**
 * [tAdvancedHash_row34 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row34 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";
	
	

 



/**
 * [tAdvancedHash_row34 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_8");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row34 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";
	
	

tHash_Lookup_row34.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row34");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row34", true);
end_Hash.put("tAdvancedHash_row34", System.currentTimeMillis());




/**
 * [tAdvancedHash_row34 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row34 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row34";
	
	

 



/**
 * [tAdvancedHash_row34 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row41Struct implements routines.system.IPersistableComparableLookupRow<row41Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String VL_ATUAL;

				public String getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return true;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public String VL_ANTERIOR;

				public String getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return true;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 12;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row41Struct other = (row41Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row41Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            
	}

	public void copyKeysDataTo(row41Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.VL_ATUAL = readString(dis,ois);
					
						this.VL_ANTERIOR = readString(dis,ois);
					
						this.MKTPLACE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.VL_ATUAL = readString(dis,objectIn);
					
						this.VL_ANTERIOR = readString(dis,objectIn);
					
						this.MKTPLACE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.VL_ATUAL, dos, oos);
					
						writeString(this.VL_ANTERIOR, dos, oos);
					
						writeString(this.MKTPLACE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.VL_ATUAL, dos, objectOut);
					
						writeString(this.VL_ANTERIOR, dos, objectOut);
					
						writeString(this.MKTPLACE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VL_ATUAL="+VL_ATUAL);
		sb.append(",VL_ANTERIOR="+VL_ANTERIOR);
		sb.append(",MKTPLACE="+MKTPLACE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return true;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return true;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 12;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.VL_ATUAL == null) ? 0 : this.VL_ATUAL.hashCode());
					
						result = prime * result + ((this.VL_ANTERIOR == null) ? 0 : this.VL_ANTERIOR.hashCode());
					
						result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row36Struct other = (row36Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.VL_ATUAL == null) {
							if (other.VL_ATUAL != null)
								return false;
						
						} else if (!this.VL_ATUAL.equals(other.VL_ATUAL))
						
							return false;
					
						if (this.VL_ANTERIOR == null) {
							if (other.VL_ANTERIOR != null)
								return false;
						
						} else if (!this.VL_ANTERIOR.equals(other.VL_ANTERIOR))
						
							return false;
					
						if (this.MKTPLACE == null) {
							if (other.MKTPLACE != null)
								return false;
						
						} else if (!this.MKTPLACE.equals(other.MKTPLACE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row36Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            
	}

	public void copyKeysDataTo(row36Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.VL_ATUAL = this.VL_ATUAL;
	            	other.VL_ANTERIOR = this.VL_ANTERIOR;
	            	other.MKTPLACE = this.MKTPLACE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ATUAL, other.VL_ATUAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ANTERIOR, other.VL_ANTERIOR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MKTPLACE, other.MKTPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row36Struct row36 = new row36Struct();
row41Struct row41 = new row41Struct();





	
	/**
	 * [tAdvancedHash_row41 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row41", false);
		start_Hash.put("tAdvancedHash_row41", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row41";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tAdvancedHash_row41 = 0;
		

			   		// connection name:row41
			   		// source node:tJavaRow_13 - inputs:(row36) outputs:(row41,row41) | target node:tAdvancedHash_row41 - inputs:(row41) outputs:()
			   		// linked node: tMap_8 - inputs:(insert,row41) outputs:(insert1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row41 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct> tHash_Lookup_row41 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row41Struct>getLookup(matchingModeEnum_row41);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row41", tHash_Lookup_row41);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row41 begin ] stop
 */



	
	/**
	 * [tJavaRow_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_13", false);
		start_Hash.put("tJavaRow_13", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tJavaRow_13 = 0;
		

int nb_line_tJavaRow_13 = 0;

 



/**
 * [tJavaRow_13 begin ] stop
 */



	
	/**
	 * [tHashInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_8", false);
		start_Hash.put("tHashInput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_8";
	
	
		int tos_count_tHashInput_8 = 0;
		


int nb_line_tHashInput_8 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row35Struct> tHashFile_tHashInput_8 = mf_tHashInput_8.getAdvancedMemoryHashFile("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_8==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row35Struct> iterator_tHashInput_8 = tHashFile_tHashInput_8.iterator();
while (iterator_tHashInput_8.hasNext()) {
    row35Struct next_tHashInput_8 = iterator_tHashInput_8.next();

	row36.CD_PRODUTO = next_tHashInput_8.CD_PRODUTO;
	row36.VL_ATUAL = next_tHashInput_8.VL_ATUAL;
	row36.VL_ANTERIOR = next_tHashInput_8.VL_ANTERIOR;
	row36.MKTPLACE = next_tHashInput_8.MKTPLACE;

 



/**
 * [tHashInput_8 begin ] stop
 */
	
	/**
	 * [tHashInput_8 main ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 


	tos_count_tHashInput_8++;

/**
 * [tHashInput_8 main ] stop
 */
	
	/**
	 * [tHashInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_13 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					

    //Code generated according to input schema and output schema
row41.CD_PRODUTO = row36.CD_PRODUTO;
row41.VL_ATUAL = String.format("%.2f",row36.VL_ATUAL).replaceAll(",", ".");
row41.VL_ANTERIOR = String.format("%.2f",row36.VL_ANTERIOR).replaceAll(",", ".");
row41.MKTPLACE = row36.MKTPLACE;

    nb_line_tJavaRow_13++;   

 


	tos_count_tJavaRow_13++;

/**
 * [tJavaRow_13 main ] stop
 */
	
	/**
	 * [tJavaRow_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row41 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					


			   
			   

					row41Struct row41_HashRow = new row41Struct();
		   	   	   
				
				row41_HashRow.CD_PRODUTO = row41.CD_PRODUTO;
				
				row41_HashRow.VL_ATUAL = row41.VL_ATUAL;
				
				row41_HashRow.VL_ANTERIOR = row41.VL_ANTERIOR;
				
				row41_HashRow.MKTPLACE = row41.MKTPLACE;
				
			tHash_Lookup_row41.put(row41_HashRow);
			
            




 


	tos_count_tAdvancedHash_row41++;

/**
 * [tAdvancedHash_row41 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row41 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

 



/**
 * [tAdvancedHash_row41 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row41 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

 



/**
 * [tAdvancedHash_row41 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_8 end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	
    

		
			nb_line_tHashInput_8++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_integracao_preco_amazom_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_8_NB_LINE", nb_line_tHashInput_8);       

 

ok_Hash.put("tHashInput_8", true);
end_Hash.put("tHashInput_8", System.currentTimeMillis());




/**
 * [tHashInput_8 end ] stop
 */

	
	/**
	 * [tJavaRow_13 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

globalMap.put("tJavaRow_13_NB_LINE",nb_line_tJavaRow_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tJavaRow_13", true);
end_Hash.put("tJavaRow_13", System.currentTimeMillis());




/**
 * [tJavaRow_13 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row41 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

tHash_Lookup_row41.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row41", true);
end_Hash.put("tAdvancedHash_row41", System.currentTimeMillis());




/**
 * [tAdvancedHash_row41 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 finally ] stop
 */

	
	/**
	 * [tJavaRow_13 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_13";
	
	

 



/**
 * [tJavaRow_13 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row41 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

 



/**
 * [tAdvancedHash_row41 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_8_SUBPROCESS_STATE", 1);
	}
	


public void tDie_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_2", false);
		start_Hash.put("tDie_2", System.currentTimeMillis());
		
	
	currentComponent="tDie_2";
	
	
		int tos_count_tDie_2 = 0;
		

 



/**
 * [tDie_2 begin ] stop
 */
	
	/**
	 * [tDie_2 main ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

	try {
	globalMap.put("tDie_2_DIE_PRIORITY", 5);
	System.err.println("the end is near");
	
	globalMap.put("tDie_2_DIE_MESSAGE", "the end is near");
	globalMap.put("tDie_2_DIE_MESSAGES", "the end is near");
	
	} catch (Exception | Error e_tDie_2) {
	    globalMap.put("tDie_2_ERROR_MESSAGE",e_tDie_2.getMessage());
		logIgnoredError(String.format("tDie_2 - tDie failed to log message due to internal error: %s", e_tDie_2), e_tDie_2);
	}
	
	currentComponent = "tDie_2";
	status = "failure";
    	errorCode = new Integer(4);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(4));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_2_DIE_CODE", errorCode);

    
	

	
	
	System.exit(4);

 


	tos_count_tDie_2++;

/**
 * [tDie_2 main ] stop
 */
	
	/**
	 * [tDie_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_begin ] stop
 */
	
	/**
	 * [tDie_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_end ] stop
 */
	
	/**
	 * [tDie_2 end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 

ok_Hash.put("tDie_2", true);
end_Hash.put("tDie_2", System.currentTimeMillis());




/**
 * [tDie_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_2 finally ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_2_SUBPROCESS_STATE", 1);
	}
	


public static class row35Struct implements routines.system.IPersistableRow<row35Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 6;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public BigDecimal VL_ATUAL;

				public BigDecimal getVL_ATUAL () {
					return this.VL_ATUAL;
				}

				public Boolean VL_ATUALIsNullable(){
				    return true;
				}
				public Boolean VL_ATUALIsKey(){
				    return true;
				}
				public Integer VL_ATUALLength(){
				    return 12;
				}
				public Integer VL_ATUALPrecision(){
				    return 2;
				}
				public String VL_ATUALDefault(){
				
					return null;
				
				}
				public String VL_ATUALComment(){
				
				    return "";
				
				}
				public String VL_ATUALPattern(){
				
					return "";
				
				}
				public String VL_ATUALOriginalDbColumnName(){
				
					return "VL_ATUAL";
				
				}

				
			    public BigDecimal VL_ANTERIOR;

				public BigDecimal getVL_ANTERIOR () {
					return this.VL_ANTERIOR;
				}

				public Boolean VL_ANTERIORIsNullable(){
				    return true;
				}
				public Boolean VL_ANTERIORIsKey(){
				    return true;
				}
				public Integer VL_ANTERIORLength(){
				    return 12;
				}
				public Integer VL_ANTERIORPrecision(){
				    return 2;
				}
				public String VL_ANTERIORDefault(){
				
					return null;
				
				}
				public String VL_ANTERIORComment(){
				
				    return "";
				
				}
				public String VL_ANTERIORPattern(){
				
					return "";
				
				}
				public String VL_ANTERIOROriginalDbColumnName(){
				
					return "VL_ANTERIOR";
				
				}

				
			    public String MKTPLACE;

				public String getMKTPLACE () {
					return this.MKTPLACE;
				}

				public Boolean MKTPLACEIsNullable(){
				    return true;
				}
				public Boolean MKTPLACEIsKey(){
				    return true;
				}
				public Integer MKTPLACELength(){
				    return 12;
				}
				public Integer MKTPLACEPrecision(){
				    return null;
				}
				public String MKTPLACEDefault(){
				
					return null;
				
				}
				public String MKTPLACEComment(){
				
				    return "";
				
				}
				public String MKTPLACEPattern(){
				
					return "";
				
				}
				public String MKTPLACEOriginalDbColumnName(){
				
					return "MKTPLACE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.VL_ATUAL == null) ? 0 : this.VL_ATUAL.hashCode());
					
						result = prime * result + ((this.VL_ANTERIOR == null) ? 0 : this.VL_ANTERIOR.hashCode());
					
						result = prime * result + ((this.MKTPLACE == null) ? 0 : this.MKTPLACE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row35Struct other = (row35Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.VL_ATUAL == null) {
							if (other.VL_ATUAL != null)
								return false;
						
						} else if (!this.VL_ATUAL.equals(other.VL_ATUAL))
						
							return false;
					
						if (this.VL_ANTERIOR == null) {
							if (other.VL_ANTERIOR != null)
								return false;
						
						} else if (!this.VL_ANTERIOR.equals(other.VL_ANTERIOR))
						
							return false;
					
						if (this.MKTPLACE == null) {
							if (other.MKTPLACE != null)
								return false;
						
						} else if (!this.MKTPLACE.equals(other.MKTPLACE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row35Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.VL_ATUAL = this.VL_ATUAL;
	            other.VL_ANTERIOR = this.VL_ANTERIOR;
	            other.MKTPLACE = this.MKTPLACE;
	            
	}

	public void copyKeysDataTo(row35Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.VL_ATUAL = this.VL_ATUAL;
	            	other.VL_ANTERIOR = this.VL_ANTERIOR;
	            	other.MKTPLACE = this.MKTPLACE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_integracao_preco_amazom, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_integracao_preco_amazom) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
						this.VL_ATUAL = (BigDecimal) dis.readObject();
					
						this.VL_ANTERIOR = (BigDecimal) dis.readObject();
					
					this.MKTPLACE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ATUAL);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_ANTERIOR);
					
					// String
				
						writeString(this.MKTPLACE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VL_ATUAL="+String.valueOf(VL_ATUAL));
		sb.append(",VL_ANTERIOR="+String.valueOf(VL_ANTERIOR));
		sb.append(",MKTPLACE="+MKTPLACE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ATUAL, other.VL_ATUAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VL_ANTERIOR, other.VL_ANTERIOR);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MKTPLACE, other.MKTPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row35Struct row35 = new row35Struct();




	
	/**
	 * [tHashOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_10", false);
		start_Hash.put("tHashOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tHashOutput_10 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row35Struct> tHashFile_tHashOutput_10 = null;
		String hashKey_tHashOutput_10 = "tHashFile_integracao_preco_amazom_" + pid + "_tHashOutput_10";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_10)){
			    if(mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10) == null){
	      		    mf_tHashOutput_10.getResourceMap().put(hashKey_tHashOutput_10, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row35Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }else{
			    	tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }
			}
        int nb_line_tHashOutput_10 = 0;

 



/**
 * [tHashOutput_10 begin ] stop
 */



	
	/**
	 * [tDBInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_5", false);
		start_Hash.put("tDBInput_5", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_5";
	
	
		int tos_count_tDBInput_5 = 0;
		
	
    
	
		    int nb_line_tDBInput_5 = 0;
		    java.sql.Connection conn_tDBInput_5 = null;
				conn_tDBInput_5 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_5 = conn_tDBInput_5.createStatement();

		    String dbquery_tDBInput_5 = "select cd_produto,\n       vl_atual,\n       vl_anterior,\n       mktplace\n  from product_price\n where dt_ulti_atuali"
+"zacao >= current_date\nand product_price.mktplace = 'MKTPLACE4_AMAZON'";
		    

		    globalMap.put("tDBInput_5_QUERY",dbquery_tDBInput_5);

		    java.sql.ResultSet rs_tDBInput_5 = null;

		    try {
		    	rs_tDBInput_5 = stmt_tDBInput_5.executeQuery(dbquery_tDBInput_5);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_5 = rs_tDBInput_5.getMetaData();
		    	int colQtyInRs_tDBInput_5 = rsmd_tDBInput_5.getColumnCount();

		    String tmpContent_tDBInput_5 = null;
		    
		    
		    while (rs_tDBInput_5.next()) {
		        nb_line_tDBInput_5++;
		        
							if(colQtyInRs_tDBInput_5 < 1) {
								row35.CD_PRODUTO = null;
							} else {
	                         		
        	row35.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 1, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 2) {
								row35.VL_ATUAL = null;
							} else {
		                          
            row35.VL_ATUAL = rs_tDBInput_5.getBigDecimal(2);
            if(rs_tDBInput_5.wasNull()){
                    row35.VL_ATUAL = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 3) {
								row35.VL_ANTERIOR = null;
							} else {
		                          
            row35.VL_ANTERIOR = rs_tDBInput_5.getBigDecimal(3);
            if(rs_tDBInput_5.wasNull()){
                    row35.VL_ANTERIOR = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 4) {
								row35.MKTPLACE = null;
							} else {
	                         		
        	row35.MKTPLACE = routines.system.JDBCUtil.getString(rs_tDBInput_5, 4, false);
		                    }
					


 



/**
 * [tDBInput_5 begin ] stop
 */
	
	/**
	 * [tDBInput_5 main ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 


	tos_count_tDBInput_5++;

/**
 * [tDBInput_5 main ] stop
 */
	
	/**
	 * [tDBInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_10 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					



    
		row35Struct oneRow_tHashOutput_10 = new row35Struct();
				
					oneRow_tHashOutput_10.CD_PRODUTO = row35.CD_PRODUTO;
					oneRow_tHashOutput_10.VL_ATUAL = row35.VL_ATUAL;
					oneRow_tHashOutput_10.VL_ANTERIOR = row35.VL_ANTERIOR;
					oneRow_tHashOutput_10.MKTPLACE = row35.MKTPLACE;
		
        tHashFile_tHashOutput_10.put(oneRow_tHashOutput_10);
        nb_line_tHashOutput_10 ++;

 


	tos_count_tHashOutput_10++;

/**
 * [tHashOutput_10 main ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_5 end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

	}
}finally{
	if (rs_tDBInput_5 != null) {
		rs_tDBInput_5.close();
	}
	if (stmt_tDBInput_5 != null) {
		stmt_tDBInput_5.close();
	}
}
globalMap.put("tDBInput_5_NB_LINE",nb_line_tDBInput_5);
 

ok_Hash.put("tDBInput_5", true);
end_Hash.put("tDBInput_5", System.currentTimeMillis());




/**
 * [tDBInput_5 end ] stop
 */

	
	/**
	 * [tHashOutput_10 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
globalMap.put("tHashOutput_10_NB_LINE", nb_line_tHashOutput_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tHashOutput_10", true);
end_Hash.put("tHashOutput_10", System.currentTimeMillis());




/**
 * [tHashOutput_10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_5 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 finally ] stop
 */

	
	/**
	 * [tHashOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_5_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final integracao_preco_amazom integracao_preco_amazomClass = new integracao_preco_amazom();

        int exitCode = integracao_preco_amazomClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = integracao_preco_amazom.class.getClassLoader().getResourceAsStream("palacio_ferramentas/integracao_preco_amazom_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = integracao_preco_amazom.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("Parametro_peso", "id_Integer");
                        if(context.getStringValue("Parametro_peso") == null) {
                            context.Parametro_peso = null;
                        } else {
                            try{
                                context.Parametro_peso=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Parametro_peso"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Parametro_peso", e.getMessage()));
                                context.Parametro_peso=null;
                            }
                        }
                        context.setContextType("Parametro_Dimensao", "id_Integer");
                        if(context.getStringValue("Parametro_Dimensao") == null) {
                            context.Parametro_Dimensao = null;
                        } else {
                            try{
                                context.Parametro_Dimensao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Parametro_Dimensao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Parametro_Dimensao", e.getMessage()));
                                context.Parametro_Dimensao=null;
                            }
                        }
                        context.setContextType("Parametro_Altura", "id_Integer");
                        if(context.getStringValue("Parametro_Altura") == null) {
                            context.Parametro_Altura = null;
                        } else {
                            try{
                                context.Parametro_Altura=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Parametro_Altura"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Parametro_Altura", e.getMessage()));
                                context.Parametro_Altura=null;
                            }
                        }
                        context.setContextType("Parametro_Largura", "id_Integer");
                        if(context.getStringValue("Parametro_Largura") == null) {
                            context.Parametro_Largura = null;
                        } else {
                            try{
                                context.Parametro_Largura=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Parametro_Largura"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Parametro_Largura", e.getMessage()));
                                context.Parametro_Largura=null;
                            }
                        }
                        context.setContextType("Parametro_Comprimento", "id_Integer");
                        if(context.getStringValue("Parametro_Comprimento") == null) {
                            context.Parametro_Comprimento = null;
                        } else {
                            try{
                                context.Parametro_Comprimento=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Parametro_Comprimento"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Parametro_Comprimento", e.getMessage()));
                                context.Parametro_Comprimento=null;
                            }
                        }
                        context.setContextType("EMAIL_PASSWORD_P", "id_String");
                        if(context.getStringValue("EMAIL_PASSWORD_P") == null) {
                            context.EMAIL_PASSWORD_P = null;
                        } else {
                            context.EMAIL_PASSWORD_P=(String) context.getProperty("EMAIL_PASSWORD_P");
                        }
                        context.setContextType("EMAIL_P", "id_String");
                        if(context.getStringValue("EMAIL_P") == null) {
                            context.EMAIL_P = null;
                        } else {
                            context.EMAIL_P=(String) context.getProperty("EMAIL_P");
                        }
                        context.setContextType("SEND_EMAIL", "id_String");
                        if(context.getStringValue("SEND_EMAIL") == null) {
                            context.SEND_EMAIL = null;
                        } else {
                            context.SEND_EMAIL=(String) context.getProperty("SEND_EMAIL");
                        }
                        context.setContextType("SMTP_P", "id_String");
                        if(context.getStringValue("SMTP_P") == null) {
                            context.SMTP_P = null;
                        } else {
                            context.SMTP_P=(String) context.getProperty("SMTP_P");
                        }
                        context.setContextType("SMTP_PORT_P", "id_String");
                        if(context.getStringValue("SMTP_PORT_P") == null) {
                            context.SMTP_PORT_P = null;
                        } else {
                            context.SMTP_PORT_P=(String) context.getProperty("SMTP_PORT_P");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("WINSPARE_DB", "id_String");
                        if(context.getStringValue("WINSPARE_DB") == null) {
                            context.WINSPARE_DB = null;
                        } else {
                            context.WINSPARE_DB=(String) context.getProperty("WINSPARE_DB");
                        }
                        context.setContextType("WINSPARE_HOST", "id_String");
                        if(context.getStringValue("WINSPARE_HOST") == null) {
                            context.WINSPARE_HOST = null;
                        } else {
                            context.WINSPARE_HOST=(String) context.getProperty("WINSPARE_HOST");
                        }
                        context.setContextType("WINSPARE_PORT", "id_String");
                        if(context.getStringValue("WINSPARE_PORT") == null) {
                            context.WINSPARE_PORT = null;
                        } else {
                            context.WINSPARE_PORT=(String) context.getProperty("WINSPARE_PORT");
                        }
                        context.setContextType("WINSPARE_PWD", "id_String");
                        if(context.getStringValue("WINSPARE_PWD") == null) {
                            context.WINSPARE_PWD = null;
                        } else {
                            context.WINSPARE_PWD=(String) context.getProperty("WINSPARE_PWD");
                        }
                        context.setContextType("WINSPARE_USER", "id_String");
                        if(context.getStringValue("WINSPARE_USER") == null) {
                            context.WINSPARE_USER = null;
                        } else {
                            context.WINSPARE_USER=(String) context.getProperty("WINSPARE_USER");
                        }
                        context.setContextType("caminho", "id_String");
                        if(context.getStringValue("caminho") == null) {
                            context.caminho = null;
                        } else {
                            context.caminho=(String) context.getProperty("caminho");
                        }
                        context.setContextType("Tarifa", "id_String");
                        if(context.getStringValue("Tarifa") == null) {
                            context.Tarifa = null;
                        } else {
                            context.Tarifa=(String) context.getProperty("Tarifa");
                        }
                        context.setContextType("PMA", "id_String");
                        if(context.getStringValue("PMA") == null) {
                            context.PMA = null;
                        } else {
                            context.PMA=(String) context.getProperty("PMA");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("Parametro_peso")) {
                context.Parametro_peso = (Integer) parentContextMap.get("Parametro_peso");
            }if (parentContextMap.containsKey("Parametro_Dimensao")) {
                context.Parametro_Dimensao = (Integer) parentContextMap.get("Parametro_Dimensao");
            }if (parentContextMap.containsKey("Parametro_Altura")) {
                context.Parametro_Altura = (Integer) parentContextMap.get("Parametro_Altura");
            }if (parentContextMap.containsKey("Parametro_Largura")) {
                context.Parametro_Largura = (Integer) parentContextMap.get("Parametro_Largura");
            }if (parentContextMap.containsKey("Parametro_Comprimento")) {
                context.Parametro_Comprimento = (Integer) parentContextMap.get("Parametro_Comprimento");
            }if (parentContextMap.containsKey("EMAIL_PASSWORD_P")) {
                context.EMAIL_PASSWORD_P = (String) parentContextMap.get("EMAIL_PASSWORD_P");
            }if (parentContextMap.containsKey("EMAIL_P")) {
                context.EMAIL_P = (String) parentContextMap.get("EMAIL_P");
            }if (parentContextMap.containsKey("SEND_EMAIL")) {
                context.SEND_EMAIL = (String) parentContextMap.get("SEND_EMAIL");
            }if (parentContextMap.containsKey("SMTP_P")) {
                context.SMTP_P = (String) parentContextMap.get("SMTP_P");
            }if (parentContextMap.containsKey("SMTP_PORT_P")) {
                context.SMTP_PORT_P = (String) parentContextMap.get("SMTP_PORT_P");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("WINSPARE_DB")) {
                context.WINSPARE_DB = (String) parentContextMap.get("WINSPARE_DB");
            }if (parentContextMap.containsKey("WINSPARE_HOST")) {
                context.WINSPARE_HOST = (String) parentContextMap.get("WINSPARE_HOST");
            }if (parentContextMap.containsKey("WINSPARE_PORT")) {
                context.WINSPARE_PORT = (String) parentContextMap.get("WINSPARE_PORT");
            }if (parentContextMap.containsKey("WINSPARE_PWD")) {
                context.WINSPARE_PWD = (String) parentContextMap.get("WINSPARE_PWD");
            }if (parentContextMap.containsKey("WINSPARE_USER")) {
                context.WINSPARE_USER = (String) parentContextMap.get("WINSPARE_USER");
            }if (parentContextMap.containsKey("caminho")) {
                context.caminho = (String) parentContextMap.get("caminho");
            }if (parentContextMap.containsKey("Tarifa")) {
                context.Tarifa = (String) parentContextMap.get("Tarifa");
            }if (parentContextMap.containsKey("PMA")) {
                context.PMA = (String) parentContextMap.get("PMA");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileInputExcel_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);

e_tFileInputExcel_1.printStackTrace();

}catch (java.lang.Error e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileInputExcel_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileInputExcel_2Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileInputExcel_2) {
globalMap.put("tFileInputExcel_2_SUBPROCESS_STATE", -1);

e_tFileInputExcel_2.printStackTrace();

}catch (java.lang.Error e_tFileInputExcel_2) {
globalMap.put("tFileInputExcel_2_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileInputExcel_2;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tDBInput_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);

e_tDBInput_1.printStackTrace();

}catch (java.lang.Error e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tDBInput_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tDBInput_4Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tDBInput_4) {
globalMap.put("tDBInput_4_SUBPROCESS_STATE", -1);

e_tDBInput_4.printStackTrace();

}catch (java.lang.Error e_tDBInput_4) {
globalMap.put("tDBInput_4_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tDBInput_4;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tDBInput_5Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tDBInput_5) {
globalMap.put("tDBInput_5_SUBPROCESS_STATE", -1);

e_tDBInput_5.printStackTrace();

}catch (java.lang.Error e_tDBInput_5) {
globalMap.put("tDBInput_5_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tDBInput_5;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : integracao_preco_amazom");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_3");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));
            connections.put("conn_tDBConnection_3", globalMap.get("conn_tDBConnection_3"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1499384 characters generated by Talend Open Studio for Big Data 
 *     on the 9 de setembro de 2024 16:50:26 BRT
 ************************************************************************************************/